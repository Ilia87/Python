///$tab BackLog

//БЛОК ОПИСАНИЯ ИЗМЕНЕНИЙ ПРИЛОЖЕНИЯ
//Набор переменных описанных ниже специфично только для блока Release Notes остальные переменные описываются в блоке Variables


/********************************************************************* 
autonumbers:
2 - AutoNumber([%Год ID]&[%Сценарий ID],2) as SCNEARIO_VERSION_project
3 - AutoNumber(ПоказательID&[%Статьи СПО ID],3)as ПоказательСтатьяID
4 - Autonumber(Месяц&сц_год_версия,4) - для генерации новогоо прогноза из факта и старого прогноза
06.04.20:
 - ограничение по связке сценарий-год через дополнительую таблицу, а не autonumber
 - сц_год подсоединяется через справочник, а не вручную
 - сцепка теперь идет по сц_год_версия, а не только по сц_год
 - создана переключалку для полей общей таблицы
 
07.04.20
 - убрана целевая версия из сц_год_вер
 - измененны названия в сц_год_вер
 - исправлен расчет уделов (везде) - удел постоянен, не зависит от размерности
 - в общей таблице правильное реагирование на переключалку. [Статьи СПО]='Налог на дополнительный доход' считаем как опу, хотя принадлежит тэпам, статья должна реагировать на переключение размерности.
 - обрезать иерархию компаний только по ветке группа и отчитывающая NA
 - в уделы добавлена кнопка для компании4
 - для id структура, для все остальных показателей прописана его отсутствие
 
08.04.20
 - сверки ebitda теперь не реагируют на изменение размернсти
 - исправлен пересчет в общей таблицу по размерности
 - млсп в 18 по налогам оставляем так как есть
 - затянуты показатели по НДД_БРД

09.04.20
 - почищены показатели - уделны цены netback, urals - как отдельные
 - новое поле источник
 - исправлен расчет в таблицах по налогу

10.04.20
 - добавлено измерение источник
 - новая сцепка для idструктуры - если отствует статья, берем всех потом потомков показателя.
 
14.04.20
 - загружены инвестиции в три показателя
 - созданы таблицы для их контроля
 - разделение общей таблице на две - PL и CONS - смысла в этом не
 - в НДПИ исправлен переход с учетом только CONS
 
15.04.20
 - исправлена сцепка по сценар_верс_год для целевой
 - подключение справочников разделено на два SUB - зависим от данных или нет
 - переработана таблица по ндпи
 - исправлены уделы - добыча переехала на новый показатель
 - сравнения версий теперь одна общая таблица
 - новая таблица по объемам
 - в качестве данных в тэпах исключены налоговые платежи
 - в качестве данных ОПУ исключены [Статьи СПО] -= {'Налог на дополнительный доход'}
 
 
16.04.20
 - отредактирована таблица со сравнением версий - первая всегда утвержденная

20.04.20
 - отредактирована таблица объемов - добавлено 4 новых столбика
 - расчитали фактор периметра!
 
22.04.2020
 - восстановлены узлы по прочей выручки в качестве данных
 - реализована вкладка поправки - подгружаются поправки на листовые элементы
 - изменено поле источник - измерение тип_источника_temp используется в модели для его расчета
 - отредактиварованы все таблицы с учетом нового источника
 
23.04.20
 - посчитан сгенерированный прогноз:
 создана новая владка с генерацией файлов для курсов и долей АП
 отредатикрована вкладка курсов с этим учетом
 отредатирован фактор периметра с учетом возможного прогноза + проставлен Фн_периметра 0, тк на него дальше ссылаются
 
 - новый расчет ндпи по объемам в зависмости от продукта
 
24.04.20
 - подцеплены курсы доллара
 - переключатель руб, доллар в БП, и доллар заданный
 
28.04.20
 - лист отчеты - первые наработки
 check реализация отличие в 5проц оставить на проблемы
 
12.05.20
 - отсмотрел таблицы на переключалку спо-сп
 - исключил из ОПУ сверку [Статьи СПО]-={'Налог на дополнительный доход'}
 - тэпы исключил Показатель-={'НДД - налог на дополнительный доход'}
 - раскрасил дельты в желтый
 - перешел на слова по сверке
 
 
 переде
*********************************************************************/
///$tab Set
SET ThousandSep=' ' ; 
SET DecimalSep=',' ; 
SET MoneyThousandSep=' ' ; 
SET MoneyDecimalSep=',' ; 
SET MoneyFormat='# ##0,00 ₽ ; -# ##0,00 ₽' ; 
SET TimeFormat='h:mm:ss' ; 
SET DateFormat='DD.MM.YYYY' ; 
SET TimestampFormat='DD.MM.YYYY h:mm:ss[.fff]' ; 
SET MonthNames='янв ; фев ; мар ; апр ; май ; июн ; июл ; авг ; сен ; окт ; ноя ; дек' ; 
SET DayNames='Пн ; Вт ; Ср ; Чт ; Пт ; Сб ; Вс' ; 
SET LongMonthNames='Январь ; Февраль ; Март ; Апрель ; Май ; Июнь ; Июль ; Август ; Сентябрь ; Октябрь ; Ноябрь ; Декабрь' ; 
SET LongDayNames='понедельник ; вторник ; среда ; четверг ; пятница ; суббота ; воскресенье' ; 
SET FirstWeekDay=0 ; 
SET BrokenWeeks=1 ; 
SET ReferenceDay=0 ; 
SET FirstMonthOfYear=1 ; 
SET CollationLocale='ru-RU' ; 
SET HidePrefix = '_' ; //для скрытия table_checkbox
///$tab Variables
Sub Variables

SET fname = '\\pbusrv\PlanBudgDep\QlikData' ; 
SET fBRD = '\\pbusrv\PlanBudgDep\QlikData\PK Dashboard\БРД' ; 
Set WbFileMap = '\\pbusrv\PlanBudgDep\QlikData\PK Dashboard\БРД\Мэппинг.xlsx' ; 
Set MAP_PK_Dashboard2 = '\\pbusrv\PlanBudgDep\QlikData\PK Dashboard\MAP_PK_Dashboard2.xlsx' ; 
SET vDataTier1 = '..\QVData\DataTier1' ; //Переменная определяющая директорию слоя извлечения данных
SET vDataTier2 = '..\QVData\DataTier2' ; //Переменная определяющая директорию слоя трансформации данных
SET vDataTier3 = '..\QVData\DataTier3' ; //Переменная определяющая директорию предрасчёта и агрегации данных
SET vDataTier4 = '..\QVData\DataTier4' ; //Переменная определяющая директорию слоя распределённых данных
Let vNotFound = '_н/д' ; 


//Mapping, в котором содержится autonumber сц_год_вер по АП, для того чтобы расчитывать факторы
//для всех других кроме него
SCNEARIO_VERSION_temp:
 LOAD Период as сц_год_версия
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [ScenarioStep_21]) WHERE not isnull (Код) ; 

left join(SCNEARIO_VERSION_temp)
 LOAD distinct сц_год_версия,
 [%Сценарий ID],[%Год ID],[%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

drop Field сц_год_версия FROM SCNEARIO_VERSION_temp ; 


Concatenate(SCNEARIO_VERSION_temp)
 LOAD distinct [%Год ID], 
 [%Сценарий ID],
 'VER_TARGET' as [%Версия ID]
 resident SCNEARIO_VERSION_temp ; 

SCNEARIO_VERSION_project:
 LOAD [%Год ID], 
 [%Сценарий ID],
 [%Версия ID],
 AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2) as SCNEARIO_VERSION_project
 resident SCNEARIO_VERSION_temp ; 

drop table SCNEARIO_VERSION_temp ; 


$(Include='$(fBRD)'\Precalc_SPO1_MasterData.txt) ; 
$(Must_Include='$(fBRD)'\Правки.qvs) ; 

//создание файла для долей
//только если файл пустой или дата обновления файла меньше чем дата обновления одного из исходников
IF isnull(QvdCreateTime('$(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_BRD_project.qvd')) or Timestamp(Filetime('$(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_BRD_project.qvd')) < RangeMax(Timestamp(Filetime('$(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы.qvd')),Timestamp(Filetime('$(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_gen.qvd'))) THEN

V_DATA_CONSO_Доли_и_методы_BRD_project:
 LOAD [%Контрагент ID], 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 [%Статьи СПО ID], 
 Факт, 
 Источник, 
 Метод
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы.qvd (qvd) ; 

Concatenate(V_DATA_CONSO_Доли_и_методы_BRD_project)
 LOAD [%Контрагент ID], 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 [%Статьи СПО ID], 
 Факт, 
 Метод, 
 Источник
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_gen.qvd (qvd) ; 

STORE V_DATA_CONSO_Доли_и_методы_BRD_project into $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_BRD_project.qvd (qvd) ; 

drop table V_DATA_CONSO_Доли_и_методы_BRD_project ; 

END IF



End Sub
///$tab ApplyMap
Sub Apply_Map

//справочник_компаний_листья
Map_company_leaf:
Mapping
 LOAD distinct Компания,
 [%Компания ID]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Компания.qvd (qvd) WHERE IS_LEAF=1 ; 

Map_company_leaf_rev:
Mapping
 LOAD distinct 
 [%Компания ID],
 Компания
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Компания.qvd (qvd) WHERE IS_LEAF=1 ; 


//присвоение истоничка
ПоказательID_источник:
Mapping
 LOAD ПоказательID, 
 Источник
 FROM [$(MAP_PK_Dashboard2)] (ooxml, embedded labels, table is VDPL) ; 


//Mapping, в котором содержится autonumber сц_год_вер по АП, для того чтобы расчитывать факторы
//для всех других кроме него
АП_autonumber_temp:
 LOAD 
Период as сц_год_версия,
Код
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [ScenarioStep_21]) WHERE not isnull (Код) ; 

left join(АП_autonumber_temp)
 LOAD distinct 
сц_год_версия,
 AutoNumber([%Сценарий ID]&[%Год ID]&[%Версия ID]) as АП_autonumber,
 [%Год ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

АП_autonumber:
Mapping
 LOAD 
АП_autonumber,
Код
 resident АП_autonumber_temp ; 


//года для расчета факторов, если какой то из базовых периодов лежит на 19
//надо изменять мнемоники
LET vсц_год_вер_АП = peek('сц_год_версия',0,'АП_autonumber_temp') ; 

LET vYear_0_1 = peek('%Год ID',1,'АП_autonumber_temp') ; 
LET vYear_0_2 = peek('%Год ID',2,'АП_autonumber_temp') ; 
trace >> 'ГОД 0_1' >> '$(vYear_0_1)' ; 
trace >> 'ГОД 0_2' >> '$(vYear_0_2)' ; 

drop table АП_autonumber_temp ; 

//Мэппинг листовых статей - к какой ветке относятся
Мэппинг_статей_доп:
HierarchyBelongsTo([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [%Parent_Статьи СПО], [Ansector_Статьи СПО], DepthDiff)
 LOAD [%Статьи СПО ID], 
 [%Статьи СПО Parent_ID], 
 [Статьи СПО],
 IS_LEAF
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

Мэппинг_статей:
Mapping
 LOAD distinct 
[%Статьи СПО ID],
[Ansector_Статьи СПО]
 resident Мэппинг_статей_доп WHERE match([Ansector_Статьи СПО],'Материальный баланс ресурсов','Отчет о прибылях и убытках','Сценарные условия','Отчет по СП',
'Технико-экономические показатели','Инвестиции (инв)')>0 and IS_LEAF=1 ; 

//drop table Мэппинг_статей_доп ; 

//4 новый показателя

//статьи спо лист - сокращние
Нужные_статьи_mapping:
Mapping
 LOAD [Статьи СПО], 
 [Статья СПО сокращение]
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [нужн_ст]) ; 

//продукт лист - БРДНГ1
Продукт_mapping:
Mapping
 LOAD distinct 
Продукт, 
 БРД_НГ1
 FROM $(vDataTier3)\MasterData\SPO1_Продукт.qvd (qvd) ; 

//сопоставление сокращенной статьи и продукта на который класть эту статью
Продукт_ст_mapping:
Mapping
 LOAD 
Ст, 
 [Сокращение продукт ст]
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [прод]) ; 

//признак для ФА по ст
Признак_для_ФА:
Mapping
 LOAD 
Ст, 
 Признак_для_ФА
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is ст_укр) ; 


//осталось от сверки excel
//показатель на кириллице - ID
Показатель_map:
Mapping
 LOAD 
Показатель,
ПоказательID 
 FROM [$(MAP_PK_Dashboard2)]
(ooxml, embedded labels, table is VDPL) ; 

//для расчета поля Ст, используемого в Фн_ОПЕК_расх и в Фэ_расх
ПоказательID_map:
Mapping
 LOAD 
ПоказательID,
Показатель
 FROM [$(MAP_PK_Dashboard2)] (ooxml, embedded labels, table is VDPL) ; 

//для ID_структуры сопоставляет статью на кириллице с мнемоником
Статьи_map_общий:
Mapping
 LOAD distinct 
[Статьи СПО],
[%Статьи СПО ID]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

//справочник статей листья
Map_account_id_leaf:
Mapping
 LOAD distinct 
[%Статьи СПО ID],
[Статьи СПО]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) WHERE IS_LEAF=1 ; 



//СВЯзка показательстатья_стр_укр для расчета факторов
//второй мэппинг прописан при формировании справочника там проставляется н/д для оставшихся 
//связка показатель_статья_структураid
Показатели:
NoConcatenate
 LOAD 
Показатель as [Показатель id структура],
 if(isnull([Статьи СПО]),Показатель,[Статьи СПО]) as [Статьи СПО id структура],
 ID_структура
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is ПоказателиID) ; 

//Статьи_структура_иерархия:
//HierarchyBelongsTo([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [%Parent_Статьи СПО], [Ansector_Статьи СПО], DepthDiff)
// LOAD [%Статьи СПО ID], 
// [%Статьи СПО Parent_ID], 
// [Статьи СПО],
// IS_LEAF
// FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

Статьи_структура:
NoConcatenate
 LOAD 
[Статьи СПО],
//#[Ansector_Статьи СПО]
[Ansector_Статьи СПО] as [Статьи СПО id структура]
 resident Мэппинг_статей_доп WHERE exists([Статьи СПО id структура], [Ansector_Статьи СПО]) and IS_LEAF=1 ; 


//drop table Статьи_структура_иерархия ; 

left join(Статьи_структура)
 LOAD 
//#[Статьи СПО id структура] as [Ansector_Статьи СПО],
[Статьи СПО id структура],
//#[Показатель id структура],
[Показатель id структура] as [Ansector_Статьи СПО],
 ID_структура
 resident Показатели ; 

drop table Показатели ; 

//меняем название на Показатель, а не статью - т.к. статьи нет в Показатель_map
//#drop field [Ansector_Статьи СПО] ; 
//#RENAME field [Показатель id структура] to [Ansector_Статьи СПО] ; 

Статьи_структура_final:
NoConcatenate
 LOAD 
Autonumber(ApplyMap('Показатель_map',[Ansector_Статьи СПО])&ApplyMap('Статьи_map_общий',[Статьи СПО]),3) as ПоказательСтатьяID,
 ID_структура
 resident Статьи_структура ; 

drop table Статьи_структура ; 

//Добавляем название структуры
left join(Статьи_структура_final)
 LOAD distinct 
ID_структура,
 Ст_укр,
 Ст_гр
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is ПоказателиID) ; 

ПоказательСтатьяID_СТ_укр:
Mapping
 LOAD 
ПоказательСтатьяID,
Ст_укр
 resident Статьи_структура_final ; 

//кроме mapping нужно так же существующая таблица
//если какая то связка ПоказательСтатья соответствует нескольким Ст_укр
ПоказательСтатьяID_СТ_укр_table:
NoConcatenate
 LOAD 
ПоказательСтатьяID,
Ст_укр
 resident Статьи_структура_final ; 

drop table Статьи_структура_final ; 

//компании19_20
//для расчета изменившихся мнемоник
Компании19_20_temp:
NoConcatenate
 LOAD 
ApplyMap('Map_company_leaf',Компания) as Компания, 
 ApplyMap('Map_company_leaf',Компания_2020) as Компания_2020
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is Старые_комп) ; 

//компании из 19 - соответствие в 20
Компании19_20:
Mapping
 LOAD 
Компания,
Компания_2020
 resident Компании19_20_temp ; 

//компании из 20 - соответствие в 19
Компании20_19:
Mapping
 LOAD 
Компания_2020,
Компания
 resident Компании19_20_temp ; 

drop table Компании19_20_temp ; 

//Мэппинг компании ОЕ и ОЕ_укруп для расчета сложных факторов
Map_ОЕ_укруп:
Mapping
 LOAD 
[%Компания ID],
 ОЕ_укруп_VDPL
 FROM $(vDataTier3)\MasterData\SPO1_БРД_Компания.qvd (qvd) ; 

Map_ОЕ:
Mapping
 LOAD distinct 
[%Компания ID],
 ОЕ
 FROM $(vDataTier3)\MasterData\SPO1_БРД_Компания.qvd (qvd) ; 

Map_Контр_укруп:
Mapping
 LOAD distinct 
[%Контрагент ID],
 [К/а ОЕ_укруп]
 FROM $(vDataTier3)\MasterData\SPO1_Контрагент.qvd (qvd) ; 

//справочник_компаний_листья
Map_counterparty_leaf:
Mapping
 LOAD distinct 
 [%Контрагент ID],
 Контрагент
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Контрагент.qvd (qvd) WHERE IS_LEAF=1 ; 


//cсправочник типов данных листья
//справочник_компаний_листья
Map_тип_данных_leaf:
Mapping
 LOAD distinct 
[Тип данных],
[%Тип данных ID]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Тип_данных.qvd (qvd) WHERE IS_LEAF=1 ; 

//Продукты нефть для изм остатков
Продукты_нефть:
Mapping
 LOAD * INLINE [
 %Продукт ID, 1
 PRD_01_01, 1
 PRD_01_02, 1
 PRD_01_03, 1
 PRD_01_04, 1
] ; 


//показательID для того чтобы проставить его в расчитанные факторы
//учавствует только cons
ПоказательID:
NoConcatenate
 LOAD 
ПоказательID,
Показатель as Показатель_cons
 FROM [$(MAP_PK_Dashboard2)] (ooxml, embedded labels, table is VDPL) WHERE Источник='CONS' ; 

//Статьи_структура_иерархия:
//HierarchyBelongsTo([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [%Parent_Статьи СПО], [Ansector_Статьи СПО], DepthDiff)
// LOAD [%Статьи СПО ID], 
// [%Статьи СПО Parent_ID], 
// [Статьи СПО],
// IS_LEAF
// FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

Статьи_структура:
NoConcatenate
 LOAD 
[%Статьи СПО ID],
[Ansector_Статьи СПО]
 resident Мэппинг_статей_доп WHERE exists(Показатель_cons, [Ansector_Статьи СПО]) and IS_LEAF=1 ; 


//drop table Статьи_структура_иерархия ; 

left join(ПоказательID)
 LOAD 
[Ansector_Статьи СПО] as Показатель_cons,
[%Статьи СПО ID]
 resident Статьи_структура ; 

//соответствие статьи спо лист и ее показателя
Показатель_cons_fa:
Mapping
 LOAD 
[%Статьи СПО ID],
ПоказательID
 resident ПоказательID ; 

drop table ПоказательID, Статьи_структура ; 

//для вычета из ФН_опек_перем_расх
//и Фэ_расх
ДрайверыРАСХ:
Mapping
 LOAD 
 distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID],
 1
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) ; 

//Персонал
//Мэппинг_статей_доп:
//HierarchyBelongsTo([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [%Parent_Статьи СПО], [Ansector_Статьи СПО], DepthDiff)
// LOAD [%Статьи СПО ID], 
// [%Статьи СПО Parent_ID], 
// [Статьи СПО],
// IS_LEAF
// FROM //$(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

Персонал:
Mapping
 LOAD 
[%Статьи СПО ID],
1
 resident Мэппинг_статей_доп WHERE match([Ansector_Статьи СПО],'Персонал')>0 and IS_LEAF=1 ; 

drop table Мэппинг_статей_доп ; 
//drop table Мэппинг_статей_доп ; 

//для DT_OE_укруп
Тип_данных_index:
Mapping
 LOAD 
ApplyMap('Map_тип_данных_leaf',[Тип данных]) as Тип_данных_index,
1
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is ТД) ; 

END SUB
///$tab Variables Factor
Sub Variables_factor
//связка сценарий год версия
set vSYV = "ApplyMap('АП_autonumber', AutoNumber([%Сценарий ID]&[%Год ID]&[%Версия ID]),0)" ; 

set vComp_20_19 = "IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])" ; 


//Переменные для факторов

//все факторы начиют считать от Факт_все + ошибки + изм_условий + Фн_опек_руч
set vОснова = "Sum(Факт_все)+Sum(Фн_ошибки)+Sum(Фн_изм_условий)+Sum(Фн_изм_зак_ва)+Sum(Фн_ОПЕК_руч)" ; 

//расчет по курсу в АП только для ОПУ
set vФн_курс = "IF(match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Отчет о прибылях и убытках','Отчет по СП','Инвестиции (инв)')>0,Sum(Курс_АП)/Sum(Курс)-1,0)*($(vОснова))" ; 

 //по доле пересчитываем датайп СП
 //и все тепы, кроме добычи
set vФн_доля = "IF(ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Технико-экономические показатели' and match([%Статьи СПО ID],'ACC_TI_01_01_06','ACC_SC_03_15','ACC_SC_03_14')=0,Sum(alt(Доля_в_АП,0))/Sum(alt(Доля,0))-1,0)*($(vОснова)+$(vФн_курс))+
 IF([%Тип данных ID]='DTP_CONS_RUB_04_ENT_GEN_3',Sum(1-alt(Доля_в_АП,0))/Sum(1-alt(Доля,0))-1,0)*($(vОснова)+$(vФн_курс))" ; 
 
 //фактор газа расчитается для добычи ув по газу ('Газ природный','Газ попутный','Сухой отбензиненный газ (СОГ)')
 //по основе без ОПЕК
 //фактора курса нет тк тэп
 //фактор доли расчитывается только по типу данных с СП
set vФн_к_газа = "IF(match([%Продукт ID],'PRD_02_01','PRD_02_02','PRD_02_03')>0 and [%Статьи СПО ID]='ACC_TI_01_01_06' and $(vSYV)<>1,(Sum(Факт_все)+Sum(Фн_ошибки)+Sum(Фн_изм_условий)+Sum(Фн_изм_зак_ва)
+IF([%Тип данных ID]='DTP_CONS_RUB_04_ENT_GEN_3',Sum(1-Доля_в_АП)/Sum(1-Доля)-1,0)*(Sum(Факт_все)+Sum(Фн_ошибки)+Sum(Фн_изм_условий)+Sum(Фн_изм_зак_ва)))*(Sum(К_м3_АП)/Sum(К_м3_БП)-1),Sum(0))" ; 


//фактор ковида расчитывается для всех кроме АП
//было set vФн_covid = "IF([%Вид деятельности ID]='ACT_OTH_31' and $(vSYV)<>1,-($(vОснова)+$(vФн_курс)+$(vФн_доля)),Sum(0))" ; 
set vФн_covid = "IF([%Вид деятельности ID]='ACT_OTH_31' and $(vSYV)<>1,-0*($(vОснова)+$(vФн_курс)+$(vФн_доля)),Sum(0))" ; 

//СКП, НДД, изменение остатков идут параллельно т.к. не влияют друг на друга
set vФн_СКП = "IF(ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='СКП' and $(vSYV)<>1,-($(vОснова)+$(vФн_курс)+$(vФн_доля)+$(vФн_covid)),Sum(0))" ; 
set vФн_изм_ост = "IF(match([%Статьи СПО ID],'ACC_PL_02_02_07_02','ACC_PL_02_02_07_01')>0 and ApplyMap('Продукты_нефть',[%Продукт ID])=1 and $(vSYV)<>1,-($(vОснова)+$(vФн_курс)+$(vФн_доля)+$(vФн_covid)),Sum(0))" ; 
set vФн_НДД = "IF(ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='НДД' and $(vSYV)<>1 and ApplyMap('Map_ОЕ_укруп',[%Компания ID])='Новый Порт' and '$(vсц_год_вер_АП)'='БП_21_раб',-($(vОснова)+$(vФн_курс)+$(vФн_доля)+$(vФн_covid)),Sum(0))" ; 


//для тем
set vF_for_tem = "alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0)" ; 

//факторы которые учавствуют в расчете Фн_НДПИ_ост
set vF_for_ndpi = "alt(Факт_все,0) + alt(Фн_ошибки,0) + alt(Фн_изм_условий,0)+ alt(Фн_изм_зак_ва,0) +alt(Фн_ОПЕК_руч,0)+alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+
 alt(Фн_НДД,0)+alt(Фн_ТЕМ,0)+alt(Фн_ОПЕК_перем_расх,0)" ; 

//статьи для расчета Обънема продукции газ неть
set vСтатьи_объем_продукции = "'ACC_MB_02_01','ACC_MB_03_07','ACC_MB_03_08_04','ACC_MB_03_08_03',
'ACC_MB_03_08_02','ACC_MB_03_08_01','ACC_MB_03_03','ACC_MB_02_02',
'ACC_MB_03_06','ACC_MB_02_07','ACC_MB_03_05','ACC_MB_02_06'" ; 


set vNorm = "alt(Факт_все,0)+alt(Фн_ошибки,0)+alt(Фн_изм_условий,0)+alt(Фн_изм_зак_ва,0)+alt(Фн_ОПЕК_руч,0)+alt(Фн_курс,0)
+alt(Фн_доля,0)+alt(Фн_к_газа,0)+alt(Фн_covid,0)+alt(Фн_СКП,0)+alt(Фн_изм_ост,0)+alt(Фн_НДД,0)+alt(Фн_ТЕМ,0)+alt(Фн_ОПЕК_перем_расх,0)+alt(Фн_ОПЕК,0)
+alt(Фн_НДПИ_ост,0)+alt(Фн_проч_прод,0)+alt(Фн_нефть_сгк,0)+alt(Фн_НДПИ_при_ДНС,0)+alt(Фн_НДПИ_при_НДД,0)+alt(Фн_Себест,0)+alt(Фн_периметр,0)" ; 


END SUB
///$tab Файлы_АП
Sub Files_for_alalysed_period

//необходимо ли вообще генерировать новый прогноз? в индикаторе должно стоять да
New_forecast:
 LOAD сц_год_версия_new, 
 Индикатор
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is Новый_прогноз) WHERE not isnull(Индикатор) and Индикатор='Да' ; 


Анализ_период_сц_год_вер:
 LOAD Период as сц_год_версия_ап
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [ScenarioStep_21]) WHERE match(Код,'1')>0 ; 

Анализ_период:
 LOAD distinct [%Сценарий ID] as [%Сценарий ID АП],
 [%Год ID] as [%Год ID АП], 
 [%Версия ID] as [%Версия ID АП]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE exists(сц_год_версия_ап,сц_год_версия) ; 


//проверяем является ли генерируемый прогноз анализируемым
//если да то то генерим для него курсы и доли, иначе просто скачиваем из файла SPO1
inner join(Анализ_период_сц_год_вер)
 LOAD сц_год_версия_new as сц_год_версия_ап
 resident New_forecast ; 

drop table New_forecast ; 

IF NoOfRows('Анализ_период_сц_год_вер')>0 then

drop table Анализ_период ; //удаляем сразу за ненадобностью

trace >> 'Курсы и доли для генеруриемого прогноза' ; 

 Month_scn_ver_year_new:
 LOAD Месяц,
сц_год_версия
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Новый_прогноз) ; 

left join(Month_scn_ver_year_new)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID], 
 сц_год_версия
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

//создаем autonumber по сцепке месяц_сц_год_вер
Month_scn_ver_year_new_autonumber:
 LOAD Autonumber(Месяц& [%Сценарий ID]&[%Год ID]&[%Версия ID],4) as Месяц_сц_год_версия, //для курсов
Autonumber(Месяц& [%Сценарий ID]&[%Год ID],4) as Месяц_сц_год //для долей
 resident Month_scn_ver_year_new ; 

drop table Month_scn_ver_year_new ; 

//курсы по АП
Курсы:
 LOAD [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID],
 Месяц, 
 Факт as Курс_АП,
 'RSD' as Валюта_доп
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Курс_средний_за_месяц_RSD.qvd (qvd) WHERE exists(Месяц_сц_год_версия,Autonumber(Месяц& [%Сценарий ID]&[%Год ID]&[%Версия ID],4)) ; 

Concatenate(Курсы)
 LOAD [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 Факт as Курс_АП,
 'USD' as Валюта_доп
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_USD.qvd (qvd) WHERE exists(Месяц_сц_год_версия,Autonumber(Месяц& [%Сценарий ID]&[%Год ID]&[%Версия ID],4)) ; 

Concatenate(Курсы)
 LOAD distinct 
[%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 1 as Курс_АП,
 'RUB' as Валюта_доп
 resident Курсы ; 

STORE Курсы into $(vDataTier4)\Macro_PL\V_DATA_PL_Курсы_АП_brd_project.qvd (qvd) ; 

drop table Курсы ; 

Доли:
 LOAD distinct 
[%Год ID],
[%Сценарий ID],
[%Компания ID],
 Месяц,
Факт as Доля_в_АП
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_BRD_project.qvd (qvd) WHERE //[%Контрагент ID]='CT_ALT_GPN_01' and 
exists(Месяц_сц_год,Autonumber(Месяц& [%Сценарий ID]&[%Год ID],4)) ; 

STORE Доли into $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли_АП_brd_project.qvd (qvd) ; 

drop table Доли ; 


//drop table Month_scn_ver_year_new_autonumber ; еще подонабодится для периметра

ELSE 
trace >> 'Курсы и доли для уже существующего сценария' ; 

//курсы по АП
Курсы:
 LOAD [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID],
 Месяц, 
 Факт as Курс_АП,
 'RSD' as Валюта_доп
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Курс_средний_за_месяц_RSD.qvd (qvd) WHERE exists([%Год ID АП],[%Год ID]) and exists ([%Сценарий ID АП],[%Сценарий ID]) and exists([%Версия ID АП],[%Версия ID]) ; 

Concatenate(Курсы)
 LOAD [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц,
 Факт as Курс_АП,
 'USD' as Валюта_доп
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_USD.qvd (qvd) WHERE exists([%Год ID АП],[%Год ID]) and exists ([%Сценарий ID АП],[%Сценарий ID]) and exists([%Версия ID АП],[%Версия ID]) ; 

Concatenate(Курсы)
 LOAD distinct 
[%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 1 as Курс_АП,
 'RUB' as Валюта_доп
 resident Курсы ; 

STORE Курсы into $(vDataTier4)\Macro_PL\V_DATA_PL_Курсы_АП_brd_project.qvd (qvd) ; 

drop table Курсы ; 

Доли:
 LOAD distinct 
[%Год ID],
[%Сценарий ID],
[%Компания ID],
 Месяц,
 [%Контрагент ID],
Факт as Доля_в_АП
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_BRD_project.qvd (qvd) WHERE [%Контрагент ID]='CT_ALT_GPN_01' and 
exists([%Год ID АП],[%Год ID]) and exists ([%Сценарий ID АП],[%Сценарий ID]) ; 

STORE Доли into $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли_АП_brd_project.qvd (qvd) ; 

drop table Доли ; 

drop table Анализ_период ; 

END IF

//drop table Анализ_период_сц_год_вер ; данная таблица еще понадобится для расчета фактора периметра

END SUB
///$tab Поправки
Sub Amendments

//поправки по Блоку
//Добавил дополнительный фильтр в загрузку который загружает:
// - из листа Норм только сценарии базового периода
// - из листа Правка только анализуруемый период
//Файлы правка ОПЕК и НДД тоже установил фильтр только на базовый период



Data: LOAD * FROM $(vDataTier4)\Macro_CONSO\Правки.qvd (qvd) WHERE not isnull(тип_источника_temp) and Exists (IfYearScenVer_MNM_0, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) and WildMatch ([ЛистExcel],'Норм') ; 

Concatenate (Data)
Data: LOAD * FROM $(vDataTier4)\Macro_CONSO\Правки.qvd (qvd) WHERE not isnull(тип_источника_temp) and Exists (IfYearScenVer_MNM_1, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) and WildMatch ([ЛистExcel],'Правка') ; 

Concatenate(Data)
 LOAD тип_источника_temp, 
 Режим, [0],[1],
 Фактор_изм, 
 Причина_изм, 
 ПоказательID, 
 Месяц, 
 Фн_ОПЕК_руч, 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Компания ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Ресурс ID], 
 [%Тип данных ID]
 FROM $(vDataTier4)\Macro_CONSO\Правки_ОПЕК_год.qvd (qvd) WHERE not isnull(тип_источника_temp) and Exists (IfYearScenVer_MNM_0, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

Concatenate(Data)
 LOAD *
 FROM $(vDataTier4)\Macro_CONSO\НДД.qvd (qvd) WHERE not isnull(тип_источника_temp) and Exists (IfYearScenVer_MNM_0, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

END SUB
///$tab Main
SUB main_data

tbAccountReduce:
Noconcatenate
 LOAD * Inline [
ifAccReduce|iFAccReduceName
ACC_PL_04|Валовая прибыль
ACC_PL_11|EBITDA
ACC_PL_13|EBITDA для целей УПЦ
ACC_PL_18|Операционная прибыль
ACC_PL_22|Прибыль до налогообложения
ACC_PL_25|Прибыль за год
ACC_PL_27|Итого совокупный доход
ACC_PL_28|Прибыль, относящаяся к акционерам ОАО Газпром нефть OLD
ACC_PL_31|Прибыль за период
] (delimiter is '|') ; 


Concatenate(Data)
 LOAD 
 ПоказательID, 
 Месяц, 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Факт, 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID]
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_VDPL_clean_without_correct.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) and not Exists (ifAccReduce, [%Статьи СПО ID]) ; 

//разбивка конс поправок по капитальным затрат на БЕ/БН и дельту
Concatenate(Data)
 LOAD 
 ПоказательID, 
 [%Компания ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Статьи СПО ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Версия ID], 
 Месяц, 
 [%Тип данных ID], 
 Факт
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_BRD_project_cons_for_capital.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) and not Exists (ifAccReduce, [%Статьи СПО ID]) ; 

//для справочной инфы грузим капительные то БЕ и БН
Concatenate(Data)
 LOAD DashboardID, 
 ПоказательID, 
 [%Компания ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Версия ID], 
 Месяц, 
 Факт
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Cons_corr_VDPL.qvd (qvd) 
//исключая коррректировки по блоку, они уже заходят в модель с первончальными данными WHERE [%Тип данных ID]<>'DTP_CONS_RUB_10_ENT_GEN_3' and Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) and not Exists (ifAccReduce, [%Статьи СПО ID]) ; 


//40- скорректированная EBITDA - на узлах
Concatenate(Data)
 LOAD ПоказательID, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 Месяц, 
 Факт
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Скоррект_Ebitda.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) and not Exists (ifAccReduce, [%Статьи СПО ID]) ; 

//Курс средний за месяц, USD
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '44' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_USD.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

//Курс средний за месяц, RSD
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '45' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Курс_средний_за_месяц_RSD.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 


//Базовая ставка НДПИ, руб./т.
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '46' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Базовая_ставка_НДПИ.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

//Базовая ставка НДПИ для расчета льготы, р/т.
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '47' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Базовая_ставка_НДПИ_для_расчета_льготы.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

//Дополнительное значение ставки НДПИ
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '48' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Дополнительное_значение_ставки_НДПИ.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 


//Ставка экспортной пошлины, USD/т
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '49' as ПоказательID
 
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Ставка_экспортной_пошлины_USD_т.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 ПоказательID,
 Факт
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Дополнительное_значение_ставки_НДПИ_узел.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 



//Корректирующий коэффициент (Ккорр)
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '50' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Корректирующий_коэффициент_Ккорр.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 


//Ставка экспортной пошлины в ЗНМ, USD/т
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '51' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_ЭП_ЗНМ.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 


//58 Ставка НДПИ - руб т
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 Факт,
 '58' as ПоказательID
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Brd_Project_Ставка_НДПИ_руб_т.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

//цены Netback
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 ПоказательID,
 Факт
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Brd_Project_NetBack_по_БЕ.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 


//НДД_БРД
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц,
 ПоказательID,
 Факт
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Brd_Project_НДД_БРД.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

//пересчет
Concatenate(Data)
 LOAD [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц,
 ПоказательID,
 Факт
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Коэффициент_пересчета_brd_project.qvd (qvd) WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 





END SUB
///$tab комер.газа
SUB comer_gaz

//Выручка от реализации - Транспорт в цене - Трубопровод (справочно)
//сложить с выручкой, вычесть из транспортных

//для АП кладем на факт
Concatenate(Data)
 LOAD 'CONS' as тип_источника_temp,
 'Изменение условий' as Фактор_изм, 
 'Транспортные в выручке коммерциализации газа' as Причина_изм, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 'ACC_PL_01_01_07' as [%Статьи СПО ID], //Выручка от продаж газа и продуктов газопереработки с учетом экспортных пошлин
 [%Валюта ID], 
 Месяц,
 ПоказательID,
 Факт
 resident Data WHERE [%Статьи СПО ID]='ACC_PL_01_01_10' and $(vSYV)='1'//Выручка от реализации - Транспорт в цене - Трубопровод (справочно) ; 

Concatenate(Data)
 LOAD 'CONS' as тип_источника_temp,
 'Изменение условий' as Фактор_изм, 
 'Транспортные в выручке коммерциализации газа' as Причина_изм, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 'ACC_PL_07_11' as [%Статьи СПО ID], //Транспортные расходы - Газ
 [%Валюта ID], 
 Месяц,
 '18' as ПоказательID,
 -Факт as Факт
 resident Data WHERE [%Статьи СПО ID]='ACC_PL_01_01_10' and $(vSYV)='1' //Выручка от реализации - Транспорт в цене - Трубопровод (справочно) ; 

//для БП на фактор нормализации
Concatenate(Data)
 LOAD 'CONS' as тип_источника_temp,
 'Изменение условий' as Фактор_изм, 
 'Транспортные в выручке коммерциализации газа' as Причина_изм, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 'ACC_PL_01_01_07' as [%Статьи СПО ID], //Выручка от продаж газа и продуктов газопереработки с учетом экспортных пошлин
 [%Валюта ID], 
 Месяц,
 ПоказательID,
 Факт as Фн_изм_условий
 resident Data WHERE [%Статьи СПО ID]='ACC_PL_01_01_10' and $(vSYV)<>'1'//Выручка от реализации - Транспорт в цене - Трубопровод (справочно) ; 

Concatenate(Data)
 LOAD 'CONS' as тип_источника_temp,
 'Изменение условий' as Фактор_изм, 
 'Транспортные в выручке коммерциализации газа' as Причина_изм, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 'ACC_PL_07_11' as [%Статьи СПО ID], //Транспортные расходы - Газ
 [%Валюта ID], 
 Месяц,
 '18' as ПоказательID,
 -Факт as Фн_изм_условий
 resident Data WHERE [%Статьи СПО ID]='ACC_PL_01_01_10' and $(vSYV)<>'1' //Выручка от реализации - Транспорт в цене - Трубопровод (справочно) ; 



END SUB
///$tab Искл_сценар
SUB Exclude_scenario_conditions

//исключаем компании, для которых существуют только сценарные условия, но нет тэпов, матбаланса, опу

//для каждой компании смотрим какие статьи соотносятся с ней
Компании_exclude:
 LOAD distinct [%Компания ID],
ApplyMap('Мэппинг_статей',[%Статьи СПО ID]) as Вид_статьи
 resident Data WHERE exists(SCNEARIO_VERSION_project,AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2)) ; 


//смотрим количество различных статей для компании.
Компании_exclude_group:
 LOAD [%Компания ID],
count( distinct Вид_статьи) as Колво_видов,
MaxString(Вид_статьи) as Статья
 resident Компании_exclude
group by [%Компания ID] ; 

drop table Компании_exclude ; 

// Если единственный вид и это сценарные условия - исключаем (всех кроме отчитывающей компании)
Компании_exclude:
 LOAD [%Компания ID] as [%Компания ID exclude]
 resident Компании_exclude_group WHERE Колво_видов=1 and Статья='Сценарные условия' and [%Компания ID]<>'NA_ENT' ; 


drop table Компании_exclude_group ; 

NoConcatenate
Data_with_exclude:
 LOAD *
 resident Data WHERE not Exists ([%Компания ID exclude],[%Компания ID]) ; 

drop table Data ; Rename Table Data_with_exclude to Data ; 

END SUB
///$tab Methods_facts
SUB Methods_facts

//Доли и методы - джойн
left join(Data)
 LOAD distinct 
[%Компания ID],
[%Сценарий ID],
[%Год ID], 
 Месяц, 
Метод,
Факт as Доля
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_BRD_project.qvd (qvd) WHERE [%Контрагент ID]='CT_ALT_GPN_01' and Exists (IfYearScen_MNM, [%Год ID] &'|'& [%Сценарий ID]) ; //CT_ALT_GPN_01 - Разведка и добыча (функц.) (к)


///*№№№№*/ First 50000 TbTemp1: LOAD * resident Data ; Store TbTemp1 Into \\PBUSRV\PlanBudgDep\QlikData\Отчетность БРД\QVModels\StoreTXT\Поиск_долей.txt (txt, delimiter is ' ; ') ; Drop Tables TbTemp1 ; 

//ACC_PL_25
//ACC_PL_27
//ACC_PL_28
//ACC_PL_31

 
//VDPL_scenario_year - добавляем корректировки по VDPL
NoConcatenate
DataStep:
 LOAD тип_источника_temp, 
 Режим, [0],[1], 
 Фактор_изм,
 Причина_изм,
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 ПоказательID,
 Метод,
 Доля,
 
 //блок
 Sum(Факт) as Факт_СПО,
 Sum(Фн_ошибки) as Фн_ошибки,
 Sum(Фн_изм_условий) as Фн_изм_условий,
 Sum(Фн_изм_зак_ва) as Фн_изм_зак_ва,
 Sum(Фн_ОПЕК_руч) as Фн_ОПЕК_руч,
 Sum(Фн_НДД) as Фн_НДД,

 
 //Спо с сп- исключаем все типы данных связанный с капитальными затратами
 IF( match([%Тип данных ID],'DTP_CONS_RUB_10_ENT_GEN_3','DTP_CONS_RUB_10_ENT_GEN_4','DTP_CONS_RUB_10_ENT_GEN_6')>0 or [%Статьи СПО ID]='ACC_PL_01_01_10',0,
 IF((match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Отчет по СП','Отчет о прибылях и убытках')>0 or [%Статьи СПО ID]='ACC_PL_08_16') //Налог на дополнительный доход считаем опу
 //так же исключить Прибыли за период - они уже хорошие
 and match([%Статьи СПО ID],'ACC_PL_25','ACC_PL_27','ACC_PL_28','ACC_PL_31')=0,
 Sum(IF(match(Метод,'Долевой','Гибридный')>0 and [%Тип данных ID]='DTP_CONS_RUB_05_ENT_GEN_3' and Доля <> 1,Факт*(1-Доля),Факт)),
 Sum(IF(ApplyMap('Персонал',[%Статьи СПО ID])=1,Факт*Доля,Факт))))
 as Факт_все
 ,
 //разный расчет в зависимости от статьи спо. матбаланс не трогаем
 IF((match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Отчет по СП','Отчет о прибылях и убытках')>0 or [%Статьи СПО ID]='ACC_PL_08_16') //Налог на дополнительный доход считаем опу
 //так же исключить Прибыли за период - они уже хорошие
 and match([%Статьи СПО ID],'ACC_PL_25','ACC_PL_27','ACC_PL_28','ACC_PL_31')=0,
 Sum(IF(match(Метод,'Долевой','Гибридный')>0 and [%Тип данных ID]='DTP_CONS_RUB_05_ENT_GEN_3' and Доля <> 1,Факт*(1-Доля),Факт)),
 Sum(IF(ApplyMap('Персонал',[%Статьи СПО ID])=1,Факт*Доля,Факт))
 )
 as Факт_все_справочно
 resident Data
 WHERE exists(SCNEARIO_VERSION_project,AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2))
 //исключаем ОЕ Западно-Ноябрьское (Не использовать 2019)
 and match([%Компания ID],'ENT_GPN_01_01_01_05')=0
 //исключаем для 32 показателя (налоговые платежи) НДД, так как он уже учитывается в 15 (Налоги кроме налоги на прибыль)
 and not (ПоказательID='32' and [%Статьи СПО ID]='ACC_PL_08_16')
 group by тип_источника_temp, 
 Режим, [0],[1],
 Фактор_изм,
 Причина_изм,
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 ПоказательID,
 Метод,
 Доля ; 
 
//загружаем все то что лежит на COVID с обратным знаком на специальный вид деятельности - корректировка ковид
Concatenate (DataStep)
 LOAD тип_источника_temp, 
 Режим, [0],[1],
 Фактор_изм,
 Причина_изм,
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 'корр. COVID' as [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 ПоказательID,
 Метод,
 Доля,
 
 //блок
 -Sum(Факт) as Факт_СПО,
 -Sum(Фн_ошибки) as Фн_ошибки,
 -Sum(Фн_изм_условий) as Фн_изм_условий,
 -Sum(Фн_изм_зак_ва) as Фн_изм_зак_ва,
 -Sum(Фн_ОПЕК_руч) as Фн_ОПЕК_руч,
 -Sum(Фн_НДД) as Фн_НДД,
 
 //Спо с сп- исключаем все типы данных связанный с капитальными затратами
 -IF( match([%Тип данных ID],'DTP_CONS_RUB_10_ENT_GEN_3','DTP_CONS_RUB_10_ENT_GEN_4','DTP_CONS_RUB_10_ENT_GEN_6')>0 or [%Статьи СПО ID]='ACC_PL_01_01_10',0,
 IF((match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Отчет по СП','Отчет о прибылях и убытках')>0 or [%Статьи СПО ID]='ACC_PL_08_16') //Налог на дополнительный доход считаем опу
 //так же исключить Прибыли за период - они уже хорошие
 and match([%Статьи СПО ID],'ACC_PL_25','ACC_PL_27','ACC_PL_28','ACC_PL_31')=0,
 Sum(IF(match(Метод,'Долевой','Гибридный')>0 and [%Тип данных ID]='DTP_CONS_RUB_05_ENT_GEN_3' and Доля <> 1,Факт*(1-Доля),Факт)),
 Sum(IF(ApplyMap('Персонал',[%Статьи СПО ID])=1,Факт*Доля,Факт))
 ))
 as Факт_все
 ,
 //разный расчет в зависимости от статьи спо. матбаланс не трогаем
 -IF((match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Отчет по СП','Отчет о прибылях и убытках')>0 or [%Статьи СПО ID]='ACC_PL_08_16') //Налог на дополнительный доход считаем опу
 //так же исключить Прибыли за период - они уже хорошие
 and match([%Статьи СПО ID],'ACC_PL_25','ACC_PL_27','ACC_PL_28','ACC_PL_31')=0,
 Sum(IF(match(Метод,'Долевой','Гибридный')>0 and [%Тип данных ID]='DTP_CONS_RUB_05_ENT_GEN_3' and Доля <> 1,Факт*(1-Доля),Факт)),
 Sum(IF(ApplyMap('Персонал',[%Статьи СПО ID])=1,Факт*Доля,Факт))
 )
 as Факт_все_справочно
 
 resident Data
 WHERE [%Вид деятельности ID]='ACT_OTH_31' and exists(SCNEARIO_VERSION_project,AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2))
 //исключаем ОЕ Западно-Ноябрьское (Не использовать 2019)
 and match([%Компания ID],'ENT_GPN_01_01_01_05')=0
 //исключаем для 32 показателя (налоговые платежи) НДД, так как он уже учитывается в 15 (Налоги кроме налоги на прибыль)
 and not (ПоказательID='32' and [%Статьи СПО ID]='ACC_PL_08_16')
 group by тип_источника_temp, Режим, [0],[1],
 Фактор_изм,
 Причина_изм,
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 'корр. COVID', 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Валюта ID], 
 Месяц, 
 ПоказательID,
 Метод,
 Доля ; 


drop table Data ; 


////Доли и методы как отдельная таблица
Concatenate(DataStep)
 LOAD [%Контрагент ID], 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 [%Статьи СПО ID], 
 Факт as Факт_СПО, 
 Метод
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли и методы_BRD_project.qvd (qvd) WHERE exists(SCNEARIO_VERSION_project,AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2))
 and ([%Контрагент ID]='CT_ALT_GPN_01' or [%Контрагент ID]='CT_GPN_ALT')
 //исключаем ОЕ Западно-Ноябрьское (Не использовать 2019)
 and match([%Компания ID],'ENT_GPN_01_01_01_05')=0
 //исключаем компании для которых есть только сценарные условия
 and not Exists ([%Компания ID exclude],[%Компания ID])
 //но сущствует какие то факты до
 and Exists ([%Компания ID]) ; 
 //отсекаем массив только текущими сценариями

 
drop table Компании_exclude ; 
Rename Tables DataStep to Data ; 


END sub
///$tab Маржа_ДП
SUB Marzha_DP


//операционные по управленческому. Создаем Поле Опекс_управ через критерий ПоказательId = 6
Выручка:
 LOAD 
[%Год ID], 
[%Сценарий ID], 
[%Версия ID],
[%Компания ID],
 Месяц, 
[%Продукт ID], 
[%Вид деятельности ID], 
Sum(Факт_все) as опекс_управ
 resident Data WHERE ПоказательID='6' and [%Тип данных ID]='DTP_CONS_RUB_00' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'Нефтесервис','Развитие','Автоматизация','НТЦ')
group by 
[%Год ID], 
[%Сценарий ID], 
[%Версия ID],
[%Компания ID],
 Месяц, 
[%Продукт ID], 
[%Вид деятельности ID] ; 


//Создаем поле выр_управ по критерию ПоказательId = 11
join(Выручка)
 LOAD 
[%Год ID], 
[%Сценарий ID], 
[%Версия ID],
[%Компания ID],
 Месяц, 
[%Продукт ID], 
[%Вид деятельности ID], 
Sum(Факт_все) as выр_управ
 resident Data WHERE ПоказательID='11'and [%Тип данных ID]='DTP_CONS_RUB_00' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'Нефтесервис','Развитие','Автоматизация','НТЦ')
group by [%Год ID], 
[%Сценарий ID], 
[%Версия ID],
[%Компания ID],
 Месяц, 
[%Продукт ID], 
[%Вид деятельности ID] ; 


//Расчет маржинальности 
Коэффициент_маржа:
Mapping
 LOAD 
AutoNumber([%Год ID]& [%Сценарий ID]& [%Версия ID]&[%Компания ID]& Месяц& [%Продукт ID]& [%Вид деятельности ID]),
опекс_управ/выр_управ
 resident Выручка ; 

drop table Выручка ; 

выручка_кк:
 LOAD 
тип_источника_temp, 
 Режим, [0],[1], 
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 Факт_все,
 ApplyMap('Коэффициент_маржа',AutoNumber([%Год ID]& [%Сценарий ID]& [%Версия ID]&[%Компания ID]& Месяц& [%Продукт ID]& [%Вид деятельности ID]),0)*Факт_все as выручка_кк,
 ApplyMap('Коэффициент_маржа',AutoNumber([%Год ID]& [%Сценарий ID]& [%Версия ID]&[%Компания ID]& Месяц& [%Продукт ID]& [%Вид деятельности ID]),0) as Коэффициент_маржа
 resident Data WHERE ПоказательID='11'and [%Тип данных ID]='DTP_CONS_RUB_02_ENT_GEN_3' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'Нефтесервис','Развитие','Автоматизация','НТЦ') and ApplyMap('Map_ОЕ_укруп',[%Компания ID])<>ApplyMap('Map_Контр_укруп',[%Контрагент ID]) ; 

join(выручка_кк)
 LOAD 
тип_источника_temp, 
 Режим, [0],[1], 
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 sum(Факт_все) as опекс_кк
 resident Data WHERE [%Статьи СПО ID]='ACC_PL_03_05_12'and [%Тип данных ID]='КК блок' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'Нефтесервис','Развитие','Автоматизация','НТЦ')
group by 
тип_источника_temp, 
 Режим, [0],[1], 
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц ; 



NoConcatenate
итоговая_дельта:
 LOAD 
тип_источника_temp, 
 Режим, [0],[1], 
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 выручка_кк,
 опекс_кк,
 alt(опекс_кк,0)-alt(выручка_кк,0) as delta
 
 resident выручка_кк ; 
drop table выручка_кк ; 


Concatenate(Data)
 LOAD 
тип_источника_temp, 
 Режим, [0],[1], 
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '6' as ПоказательID, 
 Месяц, 
 -опекс_кк as Факт_все
 resident итоговая_дельта WHERE not isnull(опекс_кк) ; 

Concatenate(Data)
 LOAD 
тип_источника_temp, 
 Режим, [0],[1], 
 Фактор_изм,
 Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 'ACC_PL_03_05_12' as [%Статьи СПО ID], 
 'КК блок' as [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '6' as ПоказательID, 
 Месяц, 
 выручка_кк as Факт_все
 resident итоговая_дельта WHERE not isnull(выручка_кк) ; 

Concatenate(Data)
 LOAD 
тип_источника_temp, 
 Режим, [0],[1],
 -1 as flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 'ACC_PL_03_05_12' as [%Статьи СПО ID], 
 'КК блок' as [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '6' as ПоказательID, 
 Месяц, 
 delta as Факт_все
 resident итоговая_дельта WHERE not isnull(delta) ; 

drop table итоговая_дельта ; 

END SUB
///$tab Курс валют
SUB Currency
Валюты:
 LOAD Компания, 
 Валюта_доп
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Валюта) ; 

Иерархия_компаний:
HierarchyBelongsTo([%Компания ID], [%Компания Parent_ID], [Компания], [%Parent_Компания], [Ansector_Компания], DepthDiff)
 LOAD [%Компания ID], 
 [%Компания ID] as [%Компания ID 2], 
 [%Компания Parent_ID], 
 Компания
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Компания.qvd (qvd) 
// WHERE EXISTS([Ansector_Компания]) ; 
right join(Иерархия_компаний)
 LOAD Компания as [Ansector_Компания],
 Валюта_доп
 resident Валюты ; 
 
drop table Валюты ; 

left join(Data)
 LOAD distinct [%Компания ID],
 Валюта_доп
 resident Иерархия_компаний ; 

////мэппинг иностранные компании
Тип_компания_локализация:
 LOAD [%Компания ID],
 'РФ' as Компания_локализация
 resident Data WHERE not exists([%Компания ID 2],[%Компания ID]) ; 

Concatenate(Тип_компания_локализация)
 LOAD [%Компания ID 2] as [%Компания ID],
 'Иностр.' as Компания_локализация
 resident Иерархия_компаний ; 
////мэппинг иностранные компании

drop table Иерархия_компаний ; 

NoConcatenate
DataStep:
 LOAD тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 ПоказательID, 
 Месяц, 
 Метод,
 Доля,
 Факт_СПО,
 Фн_ошибки,
 Фн_изм_условий,
 Фн_изм_зак_ва,
 Фн_ОПЕК_руч,
 Фн_НДД,
 Факт_все,
 Факт_все_справочно,
 IF(isnull(Валюта_доп),'RUB',Валюта_доп) as Валюта_доп
 resident Data ; 

drop table Data ; 


Курсы:
 LOAD [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID],
 Месяц, 
 Факт as Курс,
 'RSD' as Валюта_доп
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Курс_средний_за_месяц_RSD.qvd (qvd) 
 WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

Concatenate(Курсы)
 LOAD [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 Факт as Курс,
 'USD' as Валюта_доп
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_USD.qvd (qvd) 
 WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

Concatenate(Курсы)
 LOAD distinct 
[%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 1 as Курс,
 'RUB' as Валюта_доп
 resident Курсы ; 

left join(DataStep)
 LOAD distinct 
[%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 Курс,
 Валюта_доп
 resident Курсы ; 

//джоин на курс доллара
left join(DataStep)
 LOAD [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 Факт as Курс_дол
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_USD.qvd (qvd) 
 WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

drop table Курсы ; 
///$tab Курс_АП_БП
///джоинкурс АП
left join(DataStep)
 LOAD 
 Месяц,
 Валюта_доп,
 Курс_АП
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Курсы_АП_brd_project.qvd (qvd) 
 WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

//джоин доли АП
left join(DataStep)
 LOAD distinct 
[%Компания ID],
 Месяц,
Доля_в_АП
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Доли_АП_brd_project.qvd (qvd) WHERE [%Контрагент ID]='CT_ALT_GPN_01' and Exists (IfYearScen_MNM, [%Год ID] &'|'& [%Сценарий ID]) ; 



//коэффициент перевода газа для БП
left join(DataStep)
 LOAD distinct 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 Месяц, 
 Факт as К_м3_БП
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Коэффициент_м3_в_т_тонн.qvd (qvd) 
 WHERE Exists (IfYearScenVer_MNM, [%Год ID] &'|'& [%Сценарий ID] &'|'&[%Версия ID]) ; 

//коэффициент перевода газа для АП
left join(DataStep)
 LOAD distinct 
 Месяц, 
 Факт as К_м3_АП
 FROM $(vDataTier4)\Macro_PL\V_DATA_PL_Коэффициент_м3_в_т_тонн.qvd (qvd) WHERE $(vSYV)='1' ; 

Rename Table DataStep to Data ; 

DataStep:
NoConcatenate
 LOAD тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1,
 Фактор_изм,
 Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 ПоказательID, 
 Месяц, 
 Метод,
 Доля,
 
 Факт_СПО,
 
 Фн_ошибки,
 Фн_изм_условий,
 Фн_изм_зак_ва,
 Фн_ОПЕК_руч,
 Фн_НДД,
 Факт_все_справочно,
 Факт_все,
 Валюта_доп,
 Курс,
 Курс_АП,
 Курс_дол,
 Доля_в_АП,
 
 IF(match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Отчет о прибылях и убытках','Отчет по СП','Инвестиции (инв)')>0,Sum(Курс_АП)/Sum(Курс),0) as Коэф_курс,
 $(vФн_курс) as Фн_курс,
 IF(Sum(Доля)-Sum(Доля_в_АП)=0,'Доля_не_изменилась','Доля_изменилась') as Изменение_доли,
 Sum(Доля_в_АП)/Sum(Доля) as Коэф_доля,
 
 $(vФн_доля) as Фн_доля,
 $(vФн_к_газа) as Фн_к_газа,
 
 //фактор ковида расчитывается для всех кроме АП
 $(vФн_covid) as Фн_covid,
 
 $(vФн_СКП) as Фн_СКП,
 $(vФн_изм_ост) as Фн_изм_ост,
 
 'Лист' as flag_узел
 resident Data
group by тип_источника_temp, 
Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 ПоказательID, 
 Месяц, 
 Метод,
 Доля,
 
 Факт_СПО,
 
 Фн_ошибки,
 Фн_изм_условий,
 Фн_изм_зак_ва,
 Фн_ОПЕК_руч,
 Фн_НДД,
 Факт_все_справочно,
 Факт_все,
 Валюта_доп,
 Курс,
 Курс_АП,
 Курс_дол,
 Доля_в_АП ; 
 
 
 
 Drop table Data ; Rename Table DataStep to Data ; ; 

for each a in '0_1','0_2'

////кладем данные с АП по ковиду и СКР на все базовые периоды
//NoConcatenate
//temp_covid_skp:
// LOAD тип_источника_temp, 
// Режим, [0],[1],flag_ст_укр_1,
//Фактор_изм,
//Причина_изм,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
// [%Статьи СПО ID], 
// [%Тип данных ID], 
// IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
// [%Продукт ID], 
// [%Вид деятельности ID], 
// [%Контрагент ID], 
// [%Регион ID], 
// [%Канал ID], 
// [%Ресурс ID],
// ПоказательID, 
// Месяц, 
//// Метод,
//// Доля,
//// Факт_СПО,
//// Фн_ошибки,
//// Фн_изм_условий,
//// Фн_ОПЕК_руч,
//// Факт_все_справочно,
//
////блок
// Факт_все as Фн_covid,
// IF(ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='СКП', -Факт_все,0) as Фн_СКП,
// IF(match([%Статьи СПО ID],'ACC_PL_02_02_07_02','ACC_PL_02_02_07_01') and ApplyMap('Продукты_нефть',[%Продукт ID])>0, -Факт_все,0) as Фн_изм_ост,
//// Валюта_доп,
//// Курс,
//// Курс_АП,
//// Курс_дол,
//// Доля_в_АП,
// flag_узел 
// resident DataStep_in_AP
// WHERE [%Вид деятельности ID]='ACT_OTH_31' and $(vSYV)=1 ; 

//Concatenate(temp_covid_skp)
DataStep:
NoConcatenate
 LOAD тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 ПоказательID, 
 Месяц, 
// Метод,
// Доля,
// Факт_СПО,
// Фн_ошибки,
// Фн_изм_условий,
// Фн_ОПЕК_руч,
// Факт_все_справочно,
 //блок
 IF(ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='СКП',Факт_все,0) as Фн_СКП,
 IF(match([%Статьи СПО ID],'ACC_PL_02_02_07_02','ACC_PL_02_02_07_01')>0 and ApplyMap('Продукты_нефть',[%Продукт ID])=1,Факт_все,0) as Фн_изм_ост,
// Курс,
// Курс_АП,
// Курс_дол,
// Доля_в_АП,
 flag_узел 
 resident Data
 WHERE (match(ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет'),'СКП','НДД')>0 or (match([%Статьи СПО ID],'ACC_PL_02_02_07_02','ACC_PL_02_02_07_01')>0 and ApplyMap('Продукты_нефть',[%Продукт ID])=1)) 
and $(vSYV)=1 ; 


//join на все сценарии года и версии БП

left join(DataStep)
 LOAD distinct [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID]
 resident Data
 WHERE $(vSYV)='$(a)' and [%Версия ID]<>'VER_TARGET' ; 

//присоединяем сгенерированные строки
Concatenate(Data)
 LOAD *
 resident DataStep ; 

drop table DataStep ; 

next a ; 


END SUB
///$tab TEM
Sub TEM

//создаие группировки по полю темID
//каждому темID соответствует статья ОПУ и ее драйвер
ДрайверыТЕП:
 LOAD ApplyMap('Статьи_map_общий',[Статья СПО]) as темID, 
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыТЕП) WHERE not IsNull([Статья СПО]) ; 

Concatenate(ДрайверыТЕП)
 LOAD ApplyMap('Статьи_map_общий',[Статья СПО]) as темID, 
 ApplyMap('Статьи_map_общий',[Драйвер (ТЭП)]) as [%Статьи СПО ID]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыТЕП) WHERE not IsNull([Статья СПО]) ; 

left join(Data)
 LOAD темID, 
 [%Статьи СПО ID]
 resident ДрайверыТЕП ; 

//Список показателей для текущего этапа расчета
tbStepAccount: NoConcatenate LOAD distinct [%Статьи СПО ID] as ifAccStepТЭМ resident ДрайверыТЕП ; 
//Данные в усеченном виде для текущего этапа расхода
tbDataStep:NoConcatenate LOAD * resident Data WHERE Exists (ifAccStepТЭМ, [%Статьи СПО ID]) ; Drop tables tbStepAccount ; 



for each a in '0_1', '0_2'

//расчет покупок, объемов и цен
Цена:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 темID, 
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',$(vF_for_tem),0))
 as ПокупкаТЕМ_БП
 ,
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',$(vF_for_tem),0))
 as ПокупкаТЕМ_1
 ,
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',$(vF_for_tem),0))
 as ОбъемТЕМ_БП,
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',$(vF_for_tem),0))
 as ОбъемТЕМ_1,
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0)+ alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 /
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',$(vF_for_tem),0))
 as Цена_БП,
 
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 /
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as Цена_1
 resident tbDataStep WHERE match($(vSYV),'$(a)','1')>0 and темID>0
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID],
 Месяц,
 темID ; 



//компании с покукупками, но хотя бы с доним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц-темID, на эту связку кладем факторв эффективности по измерениям покупки
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&темID) as Комп_продукт_месяц_темID
 resident Цена WHERE alt(ОбъемТЕМ_БП,0)=0 or alt(ОбъемТЕМ_1,0)=0 ; 




//когда нет хотя бы одного объема
//фактор эффетивности считается как разница покупки АП - покупка БП
// группировка по темID
Факторы:
 LOAD 
тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
темID,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='1',$(vF_for_tem),0))
 as ПокупкаТЕМ_1,
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_tem),0))
 as ПокупкаТЕМ_БП,
 SUM(IF($(vSYV)='1',$(vF_for_tem),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_tem),0))
 as Фэ_ТЕМ
 resident tbDataStep WHERE match($(vSYV),'$(a)','1')>0 and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках' and темID>0
//только для тех у кого нет двух объемов
and exists(Комп_продукт_месяц_темID,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&темID))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
темID,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 




//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
//группировка по темID - для каждой пары покупки и драйвер свои значения
NoConcatenate
ОбъемТЕП:
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 темID, 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='$(a)',$(vF_for_tem),0))
 as ОбъемТЕМ_БП,
 SUM(IF($(vSYV)='1',$(vF_for_tem),0))
 as ОбъемТЕМ_1

 resident tbDataStep WHERE match($(vSYV),'$(a)','1')>0 and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках' and темID>0
//только те у которых есть два объема
and not exists(Комп_продукт_месяц_темID,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&темID))
group by 
 тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 темID,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 

//присоединяем цены для расчета факторов
left join(ОбъемТЕП)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 темID,
 Цена_БП,
 Цена_1,
 ПокупкаТЕМ_БП,
 ПокупкаТЕМ_1
 resident Цена ; 

//расчет факторов для тех у кого два объема
Concatenate(Факторы)
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 темID, 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 ОбъемТЕМ_БП,
 ОбъемТЕМ_1,
 Цена_БП,
 Цена_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(Цена_1,0)*alt(Цена_БП,0)=0,0,
 (alt(Цена_1,0)-alt(Цена_БП,0))*ОбъемТЕМ_БП) as Фн_ТЕМ,
 
 IF(alt(Цена_1,0)*alt(Цена_БП,0)=0,alt(Цена_1,0)*alt(ОбъемТЕМ_1,0)-alt(Цена_БП,0)*alt(ОбъемТЕМ_БП,0),
 (alt(ОбъемТЕМ_1,0)-alt(ОбъемТЕМ_БП,0))*alt(Цена_1,0)) as Фэ_ТЕМ,
 ПокупкаТЕМ_БП,
 ПокупкаТЕМ_1
 resident ОбъемТЕП ; 

drop table ОбъемТЕП ; 
drop table Цена ; 


//добавляем сц_вер_год
left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(Data)
 LOAD 'ФА' as тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//кладем на темID которая соответствовала статье покупки
 темID as [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 //////ЭТО БРЕД
 ///НАДО ПРОСТАВИТЬ ЧЕРЕЗ МЭППИНГ
 '6' as ПоказательID, 
 Месяц, 
 flag_узел, 
 ОбъемТЕМ_БП,
 ОбъемТЕМ_1,
 ПокупкаТЕМ_БП,
 ПокупкаТЕМ_1,
 Цена_БП,
 Цена_1,
 Фн_ТЕМ,
 Фэ_ТЕМ
 resident Факторы WHERE (alt(Фн_ТЕМ,0)<>0 or alt(Фэ_ТЕМ,0)<>0)
and ApplyMap('Map_ОЕ_укруп',[%Компания ID])<>'НИС' ; 

drop table Факторы ; 
drop table Без_объемов_БП ; 

next a ; 


drop table ДрайверыТЕП ; 
Drop tables tbDataStep ; 

END SUB
///$tab Расх_продукт
Sub Stoim_product

//Data:
// LOAD *
// FROM //[\\pbusrv\PlanBudgDep\QlikData\Отчетность БРД\QVData\Datatier4\Macro_CONSO\V_DATA_CONSO_Data.qvd]
// (qvd) ; 



//создаие группировки по полю расхID
//каждому расхID соответствует статья ОПУ и ее драйвер
ДрайверыРАСХ:
 LOAD distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as расхID, 
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID],
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID доп] 
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) and Расх_дет_продукт='да' ; 

Concatenate(ДрайверыРАСХ)
 LOAD distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as расхID, 
 ApplyMap('Статьи_map_общий',[Драйвер (Расх)]) as [%Статьи СПО ID],
 ApplyMap('Статьи_map_общий',[Драйвер (Расх)]) as [%Статьи СПО ID доп]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) and Расх_дет_продукт='да' ; 

NoConcatenate
DataStep:
 LOAD *,
 IF(ApplyMap('Тип_данных_index',[%Тип данных ID])=1 or [%Тип данных ID]='КК ОЕ укруп' or ([%Тип данных ID]='DTP_CONS_RUB_02_ENT_GEN_3' and ApplyMap('Map_ОЕ_укруп',[%Компания ID])=ApplyMap('Map_Контр_укруп',[%Контрагент ID])),'ОЕ','_конс.корр.') as DT_ОЕ_укруп
 resident Data WHERE exists([%Статьи СПО ID доп],[%Статьи СПО ID]) ; 



left join(DataStep)
 LOAD distinct расхID, 
 [%Статьи СПО ID]
 resident ДрайверыРАСХ ; 

for each a in '0_1', '0_2' //'0_2'//

//расчет покупок, объемов и цен 
УделРасх:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 расхID,
 DT_ОЕ_укруп,
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗатратыРасх_БП
 ,
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗатратыРасх_1
 ,
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ОбъемыРасх_БП,
 
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ОбъемыРасх_1,
 
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 /
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as УделРасх_БП,
 
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 /
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as УделРасх_1
 resident DataStep WHERE match($(vSYV),'$(a)','1')>0 and расхID>0
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID],
 Месяц,
 расхID,
 DT_ОЕ_укруп ; 



//компании с покукупками, но хотя бы с одним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц-расхID, на эту связку кладем факторв эффективности по измерениям покупки
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&расхID&DT_ОЕ_укруп) as Комп_продукт_месяц_расхID
 resident УделРасх WHERE round(alt(ОбъемыРасх_БП,0)/10,0.1)=0 or round(alt(ОбъемыРасх_1,0)/10,0.1)=0 
// WHERE alt(ОбъемыРасх_БП,0)=0 or alt(ОбъемыРасх_1,0)=0 ; 




//когда нет хотя бы одного объема
//фактор эффетивности считается как разница покупки АП - покупка БП
// группировка по расхID
Факторы:
 LOAD 
тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
расхID,
DT_ОЕ_укруп,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
// SUM(IF($(vSYV)='1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
// as ЗатратыРасх_1,
// SUM(IF($(vSYV)='$(a)' ,alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
// as ЗатратыРасх_БП,
 SUM(IF($(vSYV)='1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 -
 SUM(IF($(vSYV)='$(a)' ,alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as Фэ_объем_затр
 resident DataStep WHERE match($(vSYV),'$(a)','1')>0 and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках' and расхID>0
//только для тех у кого нет двух объемов
and exists(Комп_продукт_месяц_расхID,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&расхID&DT_ОЕ_укруп))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
расхID,
DT_ОЕ_укруп,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 

//Затраты соотносится с данным значением фактора эффектифности
//для правильного расчета в таблицах
left join(Факторы)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 расхID,
 DT_ОЕ_укруп,
 ЗатратыРасх_БП,
 ЗатратыРасх_1
 resident УделРасх ; 

//drop table УделРасх ; 

//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
//группировка по расхID - для каждой пары покупки и драйвер свои значения
NoConcatenate
ОбъемТЕП:
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 расхID, 
 DT_ОЕ_укруп,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='$(a)',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ОбъемыРасх_БП,
 SUM(IF($(vSYV)='1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ОбъемыРасх_1

 resident DataStep WHERE match($(vSYV),'$(a)','1')>0 and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках' and расхID>0
//только те у которых есть два объема
and not exists(Комп_продукт_месяц_расхID,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&расхID&DT_ОЕ_укруп))
group by 
 тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 расхID,
 DT_ОЕ_укруп,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 

//присоединяем цены для расчета факторов
left join(ОбъемТЕП)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 расхID,
 DT_ОЕ_укруп,
 УделРасх_БП,
 УделРасх_1,
 ЗатратыРасх_БП,
 ЗатратыРасх_1
 resident УделРасх ; 

//расчет факторов для тех у кого два объема
Concatenate(Факторы)
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 расхID, 
 DT_ОЕ_укруп,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 ОбъемыРасх_БП,
 ОбъемыРасх_1,
 УделРасх_БП,
 УделРасх_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(УделРасх_1,0)*alt(УделРасх_БП,0)=0,0,
 (alt(УделРасх_1,0)-alt(УделРасх_БП,0))*ОбъемыРасх_БП) as Фэ_стоим,
 
 IF(alt(УделРасх_1,0)*alt(УделРасх_БП,0)=0,alt(УделРасх_1,0)*alt(ОбъемыРасх_1,0)-alt(УделРасх_БП,0)*alt(ОбъемыРасх_БП,0),
 (alt(ОбъемыРасх_1,0)-alt(ОбъемыРасх_БП,0))*alt(УделРасх_1,0)) as Фэ_объем_затр,
 ЗатратыРасх_БП,
 ЗатратыРасх_1
 resident ОбъемТЕП ; 

drop table ОбъемТЕП ; 
drop table УделРасх ; 


//добавляем сц_вер_год
left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(Data)
//lala:
 LOAD 'ФА' as тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//кладем на расхID которая соответствовала статье покупки
 расхID as [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 //проставляем ПоказательID в соответствии со справочником
 ApplyMAP('Показатель_cons_fa',расхID) as ПоказательID, 
 Месяц, 
 flag_узел, 
 ОбъемыРасх_БП,
 ОбъемыРасх_1,
 ЗатратыРасх_БП,
 ЗатратыРасх_1,
 УделРасх_БП,
 УделРасх_1,
 Фэ_стоим,
 Фэ_объем_затр
 resident Факторы WHERE alt(Фэ_стоим,0)<>0 or alt(Фэ_объем_затр,0)<>0 ; 

drop table Факторы ; 
drop table Без_объемов_БП ; 

next a ; 


drop table ДрайверыРАСХ ; 

drop table DataStep ; 

//DROP TABLE Data ; 

END SUB
///$tab Расх_без
Sub Stoim_no_product

//Data:
// LOAD *
// FROM //[\\pbusrv\PlanBudgDep\QlikData\Отчетность БРД\QVData\Datatier4\Macro_CONSO\V_DATA_CONSO_Data.qvd]
// (qvd) ; 



//создаие группировки по полю расхID
//каждому расхID соответствует статья ОПУ и ее драйвер
ДрайверыРАСХ:
 LOAD distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as расхID, 
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID],
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID доп] 
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) and Расх_дет_продукт='нет' ; 

Concatenate(ДрайверыРАСХ)
 LOAD distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as расхID, 
 ApplyMap('Статьи_map_общий',[Драйвер (Расх)]) as [%Статьи СПО ID],
 ApplyMap('Статьи_map_общий',[Драйвер (Расх)]) as [%Статьи СПО ID доп]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) and Расх_дет_продукт='нет' ; 

NoConcatenate
DataStep:
 LOAD *,
 IF(ApplyMap('Тип_данных_index',[%Тип данных ID])=1 or [%Тип данных ID]='КК ОЕ укруп' or ([%Тип данных ID]='DTP_CONS_RUB_02_ENT_GEN_3' and ApplyMap('Map_ОЕ_укруп',[%Компания ID])=ApplyMap('Map_Контр_укруп',[%Контрагент ID])),'ОЕ','_конс.корр.') as DT_ОЕ_укруп
 resident Data WHERE exists([%Статьи СПО ID доп],[%Статьи СПО ID]) ; 



left join(DataStep)
 LOAD distinct расхID, 
 [%Статьи СПО ID]
 resident ДрайверыРАСХ ; 

for each a in '0_1', '0_2' //'0_2'//

//расчет покупок, объемов и цен 
УделРасх:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 Месяц,
 расхID, 
 DT_ОЕ_укруп,
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗатратыРасх_БП,
 
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗатратыРасх_1,
 
 round (SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0)),0.0001)
 as ОбъемыРасх_БП,
 
 round(SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0)),0.0001)
 as ОбъемыРасх_1,
 
 SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 /
 round(SUM(IF($(vSYV)='$(a)' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0)),0.0001)
 as УделРасх_БП,
 
 SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 /
 round(SUM(IF($(vSYV)='1' and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0)),0.0001)
 as УделРасх_1
 resident DataStep WHERE match($(vSYV),'$(a)','1')>0 and расхID>0
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),

 Месяц,
 расхID,
 DT_ОЕ_укруп ; 



//компании с покукупками, но хотя бы с одним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц-расхID-DT_ОЕ_укруп, на эту связку кладем факторв эффективности по измерениям покупки
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&Месяц&расхID&DT_ОЕ_укруп) as Комп_продукт_месяц_расхID
 resident УделРасх WHERE alt(ОбъемыРасх_БП,0)=0 or alt(ОбъемыРасх_1,0)=0 ; 




//когда нет хотя бы одного объема
//фактор эффетивности считается как разница покупки АП - покупка БП
// группировка по расхID
Факторы:
 LOAD 
тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
расхID,
DT_ОЕ_укруп,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
// SUM(IF($(vSYV)='1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
// as ЗатратыРасх_1,
// SUM(IF($(vSYV)='$(a)' ,alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
// as ЗатратыРасх_БП,
 SUM(IF($(vSYV)='1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 -
 SUM(IF($(vSYV)='$(a)' ,alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as Фэ_объем_затр
 resident DataStep WHERE match($(vSYV),'$(a)','1')>0 and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках' and расхID>0
//только для тех у кого нет двух объемов
and exists(Комп_продукт_месяц_расхID,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&Месяц&расхID&DT_ОЕ_укруп))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм,
расхID,
DT_ОЕ_укруп,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 

//Затраты соотносится с данным значением фактора эффектифности
//для правильного расчета в таблицах
left join(Факторы)
 LOAD [%Компания ID],
 Месяц,
 расхID,
 DT_ОЕ_укруп,
 ЗатратыРасх_БП,
 ЗатратыРасх_1
 resident УделРасх ; 

//drop table УделРасх ; 

//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
//группировка по расхID - для каждой пары покупки и драйвер свои значения
NoConcatenate
ОбъемТЕП:
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 расхID, 
 DT_ОЕ_укруп,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='$(a)',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ОбъемыРасх_БП,
 SUM(IF($(vSYV)='1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ОбъемыРасх_1

 resident DataStep WHERE match($(vSYV),'$(a)','1')>0 and ApplyMap('Мэппинг_статей',[%Статьи СПО ID])<>'Отчет о прибылях и убытках' and расхID>0
//только те у которых есть два объема
and not exists(Комп_продукт_месяц_расхID,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&Месяц&расхID&DT_ОЕ_укруп))
group by 
 тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 расхID,
 DT_ОЕ_укруп,
 [%Тип данных ID],
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 

//присоединяем цены для расчета факторов
left join(ОбъемТЕП)
 LOAD [%Компания ID],
 Месяц,
 расхID,
 DT_ОЕ_укруп,
 УделРасх_БП,
 УделРасх_1,
 ЗатратыРасх_БП,
 ЗатратыРасх_1
 resident УделРасх ; 

//расчет факторов для тех у кого два объема
Concatenate(Факторы)
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 расхID, 
 DT_ОЕ_укруп,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 ОбъемыРасх_БП,
 ОбъемыРасх_1,
 УделРасх_БП,
 УделРасх_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(УделРасх_1,0)*alt(УделРасх_БП,0)=0,0,
 (alt(УделРасх_1,0)-alt(УделРасх_БП,0))*ОбъемыРасх_БП) as Фэ_стоим,
 
 IF(alt(УделРасх_1,0)*alt(УделРасх_БП,0)=0,alt(УделРасх_1,0)*alt(ОбъемыРасх_1,0)-alt(УделРасх_БП,0)*alt(ОбъемыРасх_БП,0),
 (alt(ОбъемыРасх_1,0)-alt(ОбъемыРасх_БП,0))*alt(УделРасх_1,0)) as Фэ_объем_затр,
 ЗатратыРасх_БП,
 ЗатратыРасх_1
 resident ОбъемТЕП ; 

drop table ОбъемТЕП ; 
drop table УделРасх ; 


//добавляем сц_вер_год
left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(Data)
//lala:
 LOAD 'ФА' as тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//кладем на расхID которая соответствовала статье покупки
 расхID as [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 //проставляем ПоказательID в соответствии со справочником
 ApplyMAP('Показатель_cons_fa',расхID) as ПоказательID, 
 Месяц, 
 flag_узел, 
 ОбъемыРасх_БП,
 ОбъемыРасх_1,
 ЗатратыРасх_БП,
 ЗатратыРасх_1,
 УделРасх_БП,
 УделРасх_1,
 Фэ_стоим,
 Фэ_объем_затр
 resident Факторы WHERE alt(Фэ_стоим,0)<>0 or alt(Фэ_объем_затр,0)<>0 ; 

drop table Факторы ; 
drop table Без_объемов_БП ; 

next a ; 


drop table ДрайверыРАСХ ; 

drop table DataStep ; 


END SUB
///$tab Сложн
SUB Slozhn

//Data:
// LOAD *
// FROM //[\\pbusrv\PlanBudgDep\QlikData\Отчетность БРД\QVData\Datatier4\Macro_CONSO\Data_расх_без.qvd]
// (qvd) ; 

//создаие группировки по полю расхID
//каждому расхID соответствует статья ОПУ и ее драйвер
ДрайверыРАСХ:
 LOAD distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as расхID, 
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID],
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID доп],
 'числ' as flag_сложность
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) and not isnull([Драйвер (Расх) 2]) ; 

Concatenate(ДрайверыРАСХ)
 LOAD distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as расхID, 
 ApplyMap('Статьи_map_общий',[Драйвер (Расх)]) as [%Статьи СПО ID],
 ApplyMap('Статьи_map_общий',[Драйвер (Расх)]) as [%Статьи СПО ID доп],
 'знам1' as flag_сложность
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) and not isnull([Драйвер (Расх) 2]) ; 

Concatenate(ДрайверыРАСХ)
 LOAD distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as расхID, 
 ApplyMap('Статьи_map_общий',[Драйвер (Расх) 2]) as [%Статьи СПО ID],
 ApplyMap('Статьи_map_общий',[Драйвер (Расх) 2]) as [%Статьи СПО ID доп],
 'знам2' as flag_сложность
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) and not isnull([Драйвер (Расх) 2]) ; 


left join(Data)
 LOAD расхID, 
 [%Статьи СПО ID],
 flag_сложность
 resident ДрайверыРАСХ ; 

//Список показателей для текущего этапа расчета
tbStepAccount: NoConcatenate LOAD distinct [%Статьи СПО ID] as ifAccStep resident ДрайверыРАСХ ; 
//Данные в усеченном виде для текущего этапа расхода
tbDataStep:NoConcatenate LOAD * resident Data WHERE Exists (ifAccStep, [%Статьи СПО ID]) ; Drop Tables tbStepAccount ; 




for each a in '0_1', '0_2'

УделРасх:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 Месяц,
 расхID, 
 SUM(IF($(vSYV)='$(a)' and flag_сложность='числ',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗатратыСложн_БП
 ,
 SUM(IF($(vSYV)='1' and flag_сложность='числ',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗатратыСложн_1
 ,
 SUM(IF($(vSYV)='$(a)' and flag_сложность='знам1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗнамСложн1_БП,
 SUM(IF($(vSYV)='1' and flag_сложность='знам1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗнамСложн1_1,
 
 SUM(IF($(vSYV)='$(a)' and flag_сложность='знам2',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗнамСложн2_БП,
 SUM(IF($(vSYV)='1' and flag_сложность='знам2',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗнамСложн2_1
 
 resident tbDataStep WHERE match($(vSYV),'$(a)','1')>0 and расхID>0
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),

 Месяц,
 расхID ; 

left join(УделРасх)
 LOAD [%Компания ID], 
 Месяц,
 расхID,
 ЗатратыСложн_БП / ЗнамСложн1_БП as СтоимостьРемонта_БП,
 ЗатратыСложн_1 / ЗнамСложн1_1 as СтоимостьРемонта_1,
 ЗнамСложн1_БП / ЗнамСложн2_БП as ВремяРемонта_БП,
 ЗнамСложн1_1 / ЗнамСложн2_1 as ВремяРемонта_1,
 alt(ЗнамСложн1_1 / ЗнамСложн2_1) - alt(ЗнамСложн1_БП / ЗнамСложн2_БП) as ДельтаУделВремя
 resident УделРасх ; 


ОбъемТЕП:
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 расхID, 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='$(a)',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗнамСложн2_БП,
 SUM(IF($(vSYV)='1',alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0) + alt(Факт_все,0) + alt(Фн_курс,0)+ alt(Фн_доля,0)+ alt(Фн_к_газа,0)+ alt(Фн_covid,0)+ alt(Фн_СКП,0)+ alt(Фн_изм_ост,0)+ alt(Фн_НДД,0),0))
 as ЗнамСложн2_1

 resident tbDataStep WHERE match($(vSYV),'$(a)','1')>0 and flag_сложность='знам2'
group by 
 тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 расхID,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 

//присоединяем цены для расчета факторов
left join(ОбъемТЕП)
 LOAD [%Компания ID],
 Месяц,
 расхID,
 ЗатратыСложн_1, ЗнамСложн1_1, СтоимостьРемонта_1,
 ЗнамСложн1_БП, ВремяРемонта_БП,
 ВремяРемонта_1,
 ДельтаУделВремя
 resident УделРасх ; 

drop table УделРасх ; 

NoConcatenate
Факторы:
 LOAD тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 расхID, 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 
 ЗнамСложн2_БП,
 ЗнамСложн2_1,
 ЗатратыСложн_1, ЗнамСложн1_1, СтоимостьРемонта_1,
 ЗнамСложн1_БП, ВремяРемонта_БП,
 ВремяРемонта_1,
 ДельтаУделВремя,
 
 ДельтаУделВремя *ЗнамСложн2_БП* СтоимостьРемонта_1 as Фэ_сложн,
 -ДельтаУделВремя *ЗнамСложн2_БП* СтоимостьРемонта_1 as Фэ_объем_затр
 resident ОбъемТЕП
 ; 

drop table ОбъемТЕП ; 

//добавляем сц_вер_год
left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(Data)
//lala:
 LOAD 'ФА' as тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//кладем на расхID которая соответствовала статье покупки
 расхID as [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 //проставляем ПоказательID в соответствии со справочником
 ApplyMAP('Показатель_cons_fa',расхID) as ПоказательID, 
 Месяц, 
 flag_узел, 
 
 ЗнамСложн2_БП,
 ЗнамСложн2_1,
 ЗатратыСложн_1, ЗнамСложн1_1, СтоимостьРемонта_1,
 ЗнамСложн1_БП, ВремяРемонта_БП,
 ВремяРемонта_1,
 ДельтаУделВремя,
 Фэ_сложн,
 Фэ_объем_затр
 resident Факторы ; 

drop table Факторы ; 

next a ; 

Drop Tables tbDataStep ; 
//drop table Data ; 

END SUB
///$tab Фн_ОПЕК
SUB OPEC_variable
//расчет только для двух БП



//Список показателей для текущего этапа расчета
tbStepAccount: NoConcatenate LOAD distinct [%Статьи СПО ID] as ifAccStep resident Data WHERE ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='OPEX LС усл-перем.'
or
ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ' ; 


//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident Data WHERE Exists (ifAccStep, [%Статьи СПО ID]) ; Drop Tables tbStepAccount ; 

for each a in '0_1', '0_2'

//LC с учетом до этого расчитанных факторов, но без ОПЕК руч
OPEX_$(a):
 LOAD тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 // Фн_ОПЕК_руч 
 SUM(Фн_ошибки) + Sum(Фн_изм_условий) + Sum(Фн_изм_зак_ва) + Sum(Факт_все) + Sum(Фн_курс)+ Sum(Фн_доля)+ Sum(Фн_к_газа)+ Sum(Фн_covid)+ Sum(Фн_СКП)+ Sum(Фн_изм_ост)+ Sum(Фн_НДД) as OPEX, //исключил +Sum(Фн_ТЕМ)+Sum(Фэ_стоим)
 //# SUM(Фн_ошибки) + Sum(Фн_изм_условий) + Sum(Фн_изм_зак_ва) + Sum(Факт_все) + Sum(Фн_курс)+ Sum(Фн_доля)+ Sum(Фн_к_газа)+ Sum(Фн_covid)+ Sum(Фн_СКП)+ Sum(Фн_изм_ост)+ Sum(Фн_НДД)+Sum(Фн_ТЕМ)+Sum(Фэ_стоим) as OPEX, 
 flag_узел
 resident tbDataStep WHERE $(vSYV)='$(a)' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='OPEX LС усл-перем.'
and match([%Продукт ID],'PRD_01_01','PRD_01_02','PRD_01_03')>0
group by тип_источника_temp,
 Режим, [0],[1],flag_ст_укр_1,
Фактор_изм,
Причина_изм, 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID],
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 

//ДобычаНефти в 0_1
left join(OPEX_$(a))
 LOAD 
 [%Компания ID], 
 Месяц, 
 Round(SUM(Фн_ошибки) + Sum(Фн_изм_условий) + Sum(Фн_изм_зак_ва) + Sum(Факт_все)+Sum(Фн_к_газа),0.00000001) as ДобычаНефти
 resident tbDataStep WHERE $(vSYV)='$(a)' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ'
and match([%Продукт ID],'PRD_01_01','PRD_01_02','PRD_01_03')>0
group by [%Компания ID], 
 Месяц ; 

//Ограничения ОПЕК 
left join(OPEX_$(a))
 LOAD 
[%Компания ID], 
 Месяц, 
 SUM(Фн_ОПЕК_руч) as ОграниченияОпек
 resident tbDataStep WHERE $(vSYV)='$(a)' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ'
and match([%Продукт ID],'PRD_01_01','PRD_01_02','PRD_01_03')>0 and Фн_ОПЕК_руч<>0
group by [%Компания ID], 
 Месяц ; 

//основную таблицу соеднияем с расчетом фактора
Concatenate(Data)
 LOAD 
 'ФА' as тип_источника_temp, 
 Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 //OPEX,
 flag_узел,
 //блок
 ДобычаНефти,
 ОграниченияОпек,
 Sum(OPEX*ОграниченияОпек/ДобычаНефти) as Фн_ОПЕК_перем_расх,
 -Sum(IF(ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID]),ApplyMap('ПоказательID_map',ПоказательID))='ТЕМ',OPEX*ОграниченияОпек/ДобычаНефти,0)) as Фэ_ТЕМ,
 -Sum(IF(ApplyMap('ДрайверыРАСХ',[%Статьи СПО ID])=1,OPEX*ОграниченияОпек/ДобычаНефти,0)) as Фэ_объем_затр
 resident OPEX_$(a)
group by 
 'ФА',
 Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 OPEX,
 flag_узел,
 ДобычаНефти,
 ОграниченияОпек ; 

drop table OPEX_$(a) ; 

next a ; 


Drop Tables tbDataStep ; 
END SUB

///$tab НДПИ
Sub NDPI_ostalnoy

DataStep:
 LOAD 
//[%Статьи СПО ID], 
// тип_источника_temp, 
// Режим, [0],[1],flag_ст_укр_1,
// Фактор_изм, 
// Причина_изм, 
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
// [%Тип данных ID], 
// [%Компания ID], 
// [%Продукт ID], 
// [%Вид деятельности ID], 
// [%Контрагент ID], 
// [%Регион ID], 
// [%Канал ID], 
// [%Ресурс ID], 
// ПоказательID, 
// Месяц, 
// Метод, 
// Доля, 
// Факт_СПО, 
// Фн_ошибки, 
// Фн_изм_условий, 
// Фн_ОПЕК_руч, 
// Факт_все_справочно, 
// Факт_все, 
// Валюта_доп, 
// Курс, 
// Курс_АП, 
// Курс_дол, 
// Доля_в_АП, 
// Коэф_курс, 
// Фн_курс, 
// Изменение_доли, 
// Коэф_доля, 
// Фн_доля, 
// Фн_к_газа, 
// Фн_covid, 
// Фн_СКП, 
// Фн_изм_ост, 
// Фн_НДД, 
// flag_узел, 
// темID, 
// ПокупкаТЕМ_БП, 
// ПокупкаТЕМ_1, 
// ОбъемТЕМ_БП, 
// ОбъемТЕМ_1, 
// Цена_БП, 
// Цена_1, 
// Фэ_ТЕМ, 
// Фн_ТЕМ, 
// ДобычаНефти, 
// ОграниченияОпек, 
// Фн_ОПЕК_перем_расх,
*,
 //для первого периода
 //ОПУ
 IF($(vSYV)='0_1' and match([%Статьи СПО ID],'ACC_PL_08_02','ACC_PL_08_03')>0,'НДПИ_ост_БП')
 & IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_PL_08_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')>0,'НДПИ_ост_БП')
 & IF($(vSYV)='1' and match([%Статьи СПО ID],'ACC_PL_08_02','ACC_PL_08_03')>0,'НДПИ_ост_1')
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_08_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')>0,'НДПИ_ост_1')
 //объем
 //БП
 & IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_TI_09_06','ОбъемНДПИ_ост_БП') //сгк
 & IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_TI_09_04','ОбъемНДПИ_ост_БП') //добыча природного газа
 & IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_MB_02_01' and [%Продукт ID]='PRD_01_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Хунин-6')>0,'ОбъемНДПИ_ост_БП') //Поступление - Добыча (тыс.т., млн.м3)
 & IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_TI_01_01_01_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0,'ОбъемНДПИ_ост_БП') //Добыча нефти (economic entitlement), тыс. т'
 //1
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_06','ОбъемНДПИ_ост_1') //сгк
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_04','ОбъемНДПИ_ост_1') //добыча природного газа
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_02_01' and [%Продукт ID]='PRD_01_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Хунин-6')>0,'ОбъемНДПИ_ост_1') //Поступление - Добыча (тыс.т., млн.м3)
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_01_01_01_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0,'ОбъемНДПИ_ост_1') //Добыча нефти (economic entitlement), тыс. т'
 as
 flag_НДПИ_0_1,
 
 //для второго периода
 //ОПУ
 IF($(vSYV)='0_2' and match([%Статьи СПО ID],'ACC_PL_08_02','ACC_PL_08_03')>0,'НДПИ_ост_БП')
 & IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_PL_08_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')>0,'НДПИ_ост_БП')
 & IF($(vSYV)='1' and match([%Статьи СПО ID],'ACC_PL_08_02','ACC_PL_08_03')>0,'НДПИ_ост_1')
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_08_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')>0,'НДПИ_ост_1')
 //объем
 //БП
 & IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_TI_09_06','ОбъемНДПИ_ост_БП') //сгк
 & IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_TI_09_04','ОбъемНДПИ_ост_БП') //добыча природного газа
 & IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_MB_02_01' and [%Продукт ID]='PRD_01_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Хунин-6')>0,'ОбъемНДПИ_ост_БП') //Поступление - Добыча (тыс.т., млн.м3)
 & IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_TI_01_01_01_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0,'ОбъемНДПИ_ост_БП') //Добыча нефти (economic entitlement), тыс. т'
 //1
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_06','ОбъемНДПИ_ост_1') //сгк
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_04','ОбъемНДПИ_ост_1') //добыча природного газа
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_02_01' and [%Продукт ID]='PRD_01_01' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Хунин-6')>0,'ОбъемНДПИ_ост_1') //Поступление - Добыча (тыс.т., млн.м3)
 & IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_01_01_01_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0,'ОбъемНДПИ_ост_1') //Добыча нефти (economic entitlement), тыс. т'
 as
 flag_НДПИ_0_2
 
 resident Data ; 

drop table Data ; 

//таблица соответствий статьи опу со своим драйвером
//Добыча газового конденсата (за вычетом норм. потерь), тыс. тНалог на добычу полезных ископаемых - Стабильный газовый конденсат
//Добыча природного газа (за вычетом норм. потерь), млн. м3Налог на добычу полезных ископаемых - Газ
//Добыча нефти (economic entitlement), тыс. тНалог на добычу полезных ископаемых - Нефть
//Поступление - Добыча (тыс.т., млн.м3)Налог на добычу полезных ископаемых - Нефть


НДПИ_ост_map:
Mapping
 LOAD * INLINE [
 Драйвер, ОПУ
 ACC_TI_09_06, ACC_PL_08_03
 ACC_TI_09_04, ACC_PL_08_02
 ACC_TI_01_01_01_01, ACC_PL_08_01
 ACC_MB_02_01, ACC_PL_08_01
] ; 

//Список показателей для текущего этапа расчета
tbStepAccount: NoConcatenate LOAD distinct * Inline [
ifAccStep| ifAccStepName
ACC_PL_08_02|Налог на добычу полезных ископаемых - Газ
ACC_PL_08_03|Налог на добычу полезных ископаемых - Стабильный газовый конденсат
ACC_PL_08_01|Налог на добычу полезных ископаемых - Нефть
ACC_TI_09_06|Добыча газового конденсата (за вычетом норм. потерь), тыс. т
ACC_TI_09_04|Добыча природного газа (за вычетом норм. потерь), млн. м3
ACC_MB_02_01|Поступление - Добыча (тыс.т., млн.м3)
ACC_TI_01_01_01_01|Добыча нефти (economic entitlement), тыс. т

] (delimiter is '|') ; 

//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident DataStep WHERE Exists (ifAccStep, [%Статьи СПО ID]) ; Drop Tables tbStepAccount ; 


for each a in '0_1','0_2'

NoConcatenate
НДПИ:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 Sum(IF(flag_НДПИ_$(a)='НДПИ_ост_БП',$(vF_for_ndpi))) as НДПИ_ост_БП,
 Sum(IF(flag_НДПИ_$(a)='НДПИ_ост_1',$(vF_for_ndpi))) as НДПИ_ост_1,
 Sum(IF(flag_НДПИ_$(a)='ОбъемНДПИ_ост_БП',$(vF_for_ndpi))) as ОбъемНДПИ_ост_БП,
 Sum(IF(flag_НДПИ_$(a)='ОбъемНДПИ_ост_1',$(vF_for_ndpi))) as ОбъемНДПИ_ост_1,
 Sum(IF(flag_НДПИ_$(a)='НДПИ_ост_БП',$(vF_for_ndpi)))/Sum(IF(flag_НДПИ_$(a)='ОбъемНДПИ_ост_БП',$(vF_for_ndpi))) as СтавкаНДПИ_ост_БП,
 Sum(IF(flag_НДПИ_$(a)='НДПИ_ост_1',$(vF_for_ndpi)))/Sum(IF(flag_НДПИ_$(a)='ОбъемНДПИ_ост_1',$(vF_for_ndpi))) as СтавкаНДПИ_ост_1
// resident DataStep
 resident tbDataStep WHERE not isnull(flag_НДПИ_$(a))
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID],
 Месяц ; 

//компании с НДПИ, но хотя бы с одним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц, на эту связку кладем факторв эффективности по измерениям НДПИ
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц) as Комп_продукт_месяц
 resident НДПИ WHERE alt(ОбъемНДПИ_ост_БП,0)=0 or alt(ОбъемНДПИ_ост_1,0)=0 ; 



//когда нет хотя бы одного объема
//фактор эффетивности считается как разница НДПИ АП - НДПИ БП
// группировка по темID
Факторы:
 LOAD 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as НДПИ_ост_1,
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as НДПИ_ост_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Фэ_НДПИ_ост
// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_$(a),'НДПИ_ост_БП','НДПИ_ост_1')>0 
//только для тех у кого нет хотя бы одного объема
and exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 


//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
NoConcatenate
Объем_НДПИ:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
[%Статьи СПО ID],
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='$(a)',$(vF_for_ndpi),0))
 as ОбъемНДПИ_ост_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as ОбъемНДПИ_ост_1

// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_$(a),'ОбъемНДПИ_ост_БП','ОбъемНДПИ_ост_1')>0 
//только те у которых есть два объема
and not exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 [%Статьи СПО ID],
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 
//
//присоединяем цены для расчета факторов
left join(Объем_НДПИ)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 СтавкаНДПИ_ост_БП,
 СтавкаНДПИ_ост_1,
 НДПИ_ост_БП,
 НДПИ_ост_1
 resident НДПИ ; 

Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '15' as ПоказательID, 
 //каждой статье драйверу соответствует статья из ОПУ
 ApplyMap('НДПИ_ост_map',[%Статьи СПО ID]) as [%Статьи СПО ID],
 Месяц, 
 flag_узел, 
 ОбъемНДПИ_ост_БП,
 ОбъемНДПИ_ост_1,
 СтавкаНДПИ_ост_БП,
 СтавкаНДПИ_ост_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(СтавкаНДПИ_ост_1,0)*alt(СтавкаНДПИ_ост_БП,0)=0,0,
 (alt(СтавкаНДПИ_ост_1,0)-alt(СтавкаНДПИ_ост_БП,0))*ОбъемНДПИ_ост_БП) as Фн_НДПИ_ост,
 IF(alt(СтавкаНДПИ_ост_1,0)*alt(СтавкаНДПИ_ост_БП,0)=0,alt(СтавкаНДПИ_ост_1,0)*alt(ОбъемНДПИ_ост_1,0)-alt(СтавкаНДПИ_ост_БП,0)*alt(ОбъемНДПИ_ост_БП,0),
 (alt(ОбъемНДПИ_ост_1,0)-alt(ОбъемНДПИ_ост_БП,0))*alt(СтавкаНДПИ_ост_1,0)) as Фэ_НДПИ_ост,
 НДПИ_ост_БП,
 НДПИ_ост_1
 resident Объем_НДПИ ; 

drop table Объем_НДПИ ; 
drop table НДПИ ; 

//добавляем сц_вер_год
left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 
//
Concatenate(DataStep)
 LOAD 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//кладем на темID которая соответствовала статье покупки
 [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 ОбъемНДПИ_ост_БП,
 ОбъемНДПИ_ост_1,
 НДПИ_ост_БП,
 НДПИ_ост_1,
 СтавкаНДПИ_ост_БП,
 СтавкаНДПИ_ост_1,
 Фн_НДПИ_ост,
 Фэ_НДПИ_ост
 resident Факторы WHERE alt(Фн_НДПИ_ост,0)<>0 or alt(Фэ_НДПИ_ост,0)<>0 ; 

drop table Факторы ; 

drop field flag_НДПИ_$(a) FROM DataStep ; 
drop table Без_объемов_БП ; 

//drop table DataStep ; 

next a ; 

Drop Tables tbDataStep ; 
Rename Tables DataStep To Data ; 

End sub
///$tab Выр_проч
SUB Revenue_oth

NoConcatenate
DataStep:
 LOAD *,
 
 //01
 IF($(vSYV)='0_1' and match([%Статьи СПО ID],'ACC_PL_01_01_04','ACC_PL_01_01_07')>0,'Выручка_БП')&
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_БП')&
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_БП')
 
 &//АП
 IF($(vSYV)='1' and match([%Статьи СПО ID],'ACC_PL_01_01_04','ACC_PL_01_01_07')>0,'Выручка_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_1') 
 //ОПЕК
 &IF($(vSYV)='0_1' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ' 
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0 and Фн_ОПЕК_руч<>0,'Выручка_огр_ОПЕК_БП')
 
 as flag_Выручка_0_1,
 
 //02
 IF($(vSYV)='0_2' and match([%Статьи СПО ID],'ACC_PL_01_01_04','ACC_PL_01_01_07')>0 ,'Выручка_БП')&
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0 
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_БП')&
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_БП')
 
 &//АП
 IF($(vSYV)='1' and match([%Статьи СПО ID],'ACC_PL_01_01_04','ACC_PL_01_01_07')>0 ,'Выручка_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0 
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0,'Об_реал_1') 
 
 //ОПЕК
 &IF($(vSYV)='0_2' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ' 
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')=0 and Фн_ОПЕК_руч<>0,'Выручка_огр_ОПЕК_БП')

 as flag_Выручка_0_2,
 
 //DT_ОЕ_укруп ВРЕМЕННО! потом его проставим для всех вместе с качеством данных
 IF(ApplyMap('Тип_данных_index',[%Тип данных ID])=1 or [%Тип данных ID]='КК ОЕ укруп' or ([%Тип данных ID]='DTP_CONS_RUB_02_ENT_GEN_3' and ApplyMap('Map_ОЕ_укруп',[%Компания ID])=ApplyMap('Map_Контр_укруп',[%Контрагент ID])),'ОЕ','_конс.корр.') as DT_ОЕ_укруп
 resident Data ; 


tbDataStep:NoConcatenate LOAD * resident DataStep WHERE not isnull(flag_Выручка_0_1) or not isnull(flag_Выручка_0_2) ; 


drop table Data ; 

for each a in '0_2','0_1'

//NoConcatenate
//уделы считаем по всем данным, а не отдельно по DT_ое_укруп
Выручка:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп,
 Sum(IF(flag_Выручка_$(a)='Выручка_БП',$(vF_for_ndpi))) as Выручка_БП,
 Sum(IF(flag_Выручка_$(a)='Выручка_1',$(vF_for_ndpi))) as Выручка_1,
 Sum(IF(flag_Выручка_$(a)='Об_реал_БП',$(vF_for_ndpi))) as Об_реал_БП,
 Sum(IF(flag_Выручка_$(a)='Об_реал_1',$(vF_for_ndpi))) as Об_реал_1,
 Sum(IF(flag_Выручка_$(a)='Выручка_БП',$(vF_for_ndpi)))/Sum(IF(flag_Выручка_$(a)='Об_реал_БП',$(vF_for_ndpi))) as Цена_реал_БП,
 Sum(IF(flag_Выручка_$(a)='Выручка_1',$(vF_for_ndpi)))/Sum(IF(flag_Выручка_$(a)='Об_реал_1',$(vF_for_ndpi))) as Цена_реал_1
// resident DataStep
 resident tbDataStep WHERE not isnull(flag_Выручка_$(a))
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп ; 

//цена прочая по АП для расчета фактора ОПЕКА, чтобы не джойнить на таблицу Выручка а сделать одним действием
Цена_прочая_$(a):
Mapping
 LOAD AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп) as Комп_продукт_месяц_dt_dt_ОПЕК,
Цена_реал_1
 resident Выручка ; 



//компании с Выручка, но хотя бы с одним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц, на эту связку кладем факторв эффективности по измерениям Выручка
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп) as Комп_продукт_месяц_dt
 resident Выручка WHERE alt(Об_реал_БП,0)=0 or alt(Об_реал_1,0)=0 ; 

//когда нет хотя бы одного объема
//фактор эффетивности считается как разница Выручка АП - Выручка БП
// группировка по темID
Факторы:
 LOAD 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as Выручка_1,
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Выручка_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Фэ_проч_прод
 
// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_$(a),'Выручка_БП','Выручка_1')>0 
//только для тех у кого нет хотя бы одного объема
and exists(Комп_продукт_месяц_dt,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп ; 


//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
NoConcatenate
Объем_Выручка:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 SUM(IF($(vSYV)='$(a)',$(vF_for_ndpi),0))
 as Об_реал_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as Об_реал_1

// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_$(a),'Об_реал_БП','Об_реал_1')>0 
//только те у которых есть два объема
and not exists(Комп_продукт_месяц_dt,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп ; 
//
//присоединяем цены для расчета факторов
left join(Объем_Выручка)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп,
 Цена_реал_БП,
 Цена_реал_1,
 Выручка_БП,
 Выручка_1
 resident Выручка ; 

Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '11' as ПоказательID, 
 // здесь рассчитываются прочие нефтепродукты и газ
 // если прочие нефтепродукты то выручка по нп, иначе по газу
 IF([%Продукт ID]='PRD_03_10_06','ACC_PL_01_01_04','ACC_PL_01_01_07') as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 Об_реал_БП,
 Об_реал_1,
 Цена_реал_БП,
 Цена_реал_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(Цена_реал_1,0)*alt(Цена_реал_БП,0)=0,0,
 (alt(Цена_реал_1,0)-alt(Цена_реал_БП,0))*Об_реал_БП) as Фн_проч_прод,
 IF(alt(Цена_реал_1,0)*alt(Цена_реал_БП,0)=0,alt(Цена_реал_1,0)*alt(Об_реал_1,0)-alt(Цена_реал_БП,0)*alt(Об_реал_БП,0),
 (alt(Об_реал_1,0)-alt(Об_реал_БП,0))*alt(Цена_реал_1,0)) as Фэ_проч_прод,
 Выручка_БП,
 Выручка_1
 resident Объем_Выручка ; 


drop table Объем_Выручка ; 

//рассчитываем фактор опек
//его вычитаем из Фактора эффективности
Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '11' as ПоказательID, 
 IF([%Продукт ID]='PRD_03_10_06','ACC_PL_01_01_04','ACC_PL_01_01_07') as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
//факторы
 -SUM(IF($(vSYV)='$(a)',ApplyMap('Цена_прочая_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп))*Фн_ОПЕК_руч,0)) as Фн_ОПЕК,
 SUM(IF($(vSYV)='$(a)',ApplyMap('Цена_прочая_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп))*Фн_ОПЕК_руч,0)) as Фэ_проч_прод,
//цена
 SUM(IF($(vSYV)='$(a)',ApplyMap('Цена_прочая_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп)),0)) as Цена_реал_1
// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_$(a),'Выручка_огр_ОПЕК_БП')>0 
//только те у которых есть два объема
//and not exists(Комп_продукт_месяц_dt,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 '11',
 IF([%Продукт ID]='PRD_03_10_06','ACC_PL_01_01_04','ACC_PL_01_01_07'),
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп ; 


drop table Выручка ; 

left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(DataStep)
 LOAD 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 Об_реал_БП,
 Об_реал_1,
 Выручка_БП,
 Выручка_1,
 Цена_реал_БП,
 Цена_реал_1,
 Фн_проч_прод,
 Фэ_проч_прод,
 Фн_ОПЕК
 resident Факторы WHERE alt(Фн_проч_прод,0)<>0 or alt(Фэ_проч_прод,0)<>0 or alt(Фн_ОПЕК,0)<>0 ; 

drop table Факторы ; 

drop field flag_Выручка_$(a) FROM DataStep ; 
drop table Без_объемов_БП ; 

next a ; 

//drop field DT_ОЕ_укруп FROM DataStep ; 
Drop Tables tbDataStep ; 
Rename Tables DataStep To Data ; 

END SUB


///$tab Выр_неф_сгк
SUB Revenue_neft_sgk

NoConcatenate
DataStep:
 LOAD *,
 
//01
 //выручка 2 статьи
 IF($(vSYV)='0_1' and match([%Статьи СПО ID],'ACC_PL_01_01_01','ACC_PL_01_01_06')>0,'Выручка_неф_БП')&
 
 //объем реализации
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_БП')&
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_БП')&
 
 //объем продукции
 IF($(vSYV)='0_1' and match([%Статьи СПО ID],'ACC_MB_02_01',$(vСтатьи_объем_продукции))>0 and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_БП')&
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_MB_02_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_БП')
 
 &//АП
 //выручка 2 статьи 
 IF($(vSYV)='1' and match([%Статьи СПО ID],'ACC_PL_01_01_01','ACC_PL_01_01_06')>0,'Выручка_неф_1')&
 
 //объем реализации
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_1')&
 
 //объем продукции
 IF($(vSYV)='1' and match([%Статьи СПО ID],'ACC_MB_02_01','ACC_MB_03_07',$(vСтатьи_объем_продукции))>0 and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_02_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_1')
 
 //ОПЕК
 &IF($(vSYV)='0_1' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ'
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0 and Фн_ОПЕК_руч<>0,'Выручка_неф_огр_ОПЕК_БП')
 
 as flag_Выручка_неф_0_1,
 
 //02
 //выручка 2 статьи
 IF($(vSYV)='0_2' and match([%Статьи СПО ID],'ACC_PL_01_01_01','ACC_PL_01_01_06')>0,'Выручка_неф_БП')&
 
 //объем реализации
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_БП')&
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_БП')&
 
 //объем продукции
 IF($(vSYV)='0_2' and match([%Статьи СПО ID],$(vСтатьи_объем_продукции))>0 and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_БП')&
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_MB_02_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_БП')
 
 &//АП
 //выручка 2 статьи 
 IF($(vSYV)='1' and match([%Статьи СПО ID],'ACC_PL_01_01_01','ACC_PL_01_01_06')>0,'Выручка_неф_1')&
 
 //объем реализации
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_01' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_03_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_реал_неф_1')&
 
 //объем продукции
 IF($(vSYV)='1' and match([%Статьи СПО ID],$(vСтатьи_объем_продукции))>0 and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')=0
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_02_10' and match(ApplyMap('Map_ОЕ',[%Компания ID]),'Бадра','Курдистан')>0 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0,'Об_прод_неф_1')
 
 //ОПЕК
 &IF($(vSYV)='0_2' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ'
 and match([%Продукт ID],'PRD_01_01','PRD_01_04')>0 and Фн_ОПЕК_руч<>0,'Выручка_неф_огр_ОПЕК_БП')
 
 as flag_Выручка_неф_0_2

 resident Data ; 

drop table Data ; 


//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident DataStep WHERE not isnull(flag_Выручка_неф_0_1) or not isnull(flag_Выручка_неф_0_2) ; 

for each a in '0_2','0_1'

//NoConcatenate
//уделы считаем с учетом DT_ОЕ_укруп
Выручка_неф:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп,
 Sum(IF(flag_Выручка_неф_$(a)='Выручка_неф_БП',$(vF_for_ndpi))) as Выручка_неф_БП,
 Sum(IF(flag_Выручка_неф_$(a)='Выручка_неф_1',$(vF_for_ndpi))) as Выручка_неф_1,
 Sum(IF(flag_Выручка_неф_$(a)='Об_реал_неф_БП',$(vF_for_ndpi))) as Об_реал_неф_БП,
 Sum(IF(flag_Выручка_неф_$(a)='Об_реал_неф_1',$(vF_for_ndpi))) as Об_реал_неф_1,
 Sum(IF(flag_Выручка_неф_$(a)='Об_прод_неф_БП',$(vF_for_ndpi))) as Об_прод_неф_БП,
 Sum(IF(flag_Выручка_неф_$(a)='Об_прод_неф_1',$(vF_for_ndpi))) as Об_прод_неф_1,
 -Sum(IF(flag_Выручка_неф_$(a)='Выручка_неф_БП',$(vF_for_ndpi)))/Sum(IF(flag_Выручка_неф_$(a)='Об_реал_неф_БП',$(vF_for_ndpi))) as Цена_реал_неф_БП,
 -Sum(IF(flag_Выручка_неф_$(a)='Выручка_неф_1',$(vF_for_ndpi)))/Sum(IF(flag_Выручка_неф_$(a)='Об_реал_неф_1',$(vF_for_ndpi))) as Цена_реал_неф_1
// resident DataStep
 resident tbDataStep WHERE not isnull(flag_Выручка_неф_$(a))
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп ; 


//цена по АП и БП для расчета фактора ОПЕКА и изменения остатков
Цена_неф_1_$(a):
Mapping
 LOAD distinct AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп) as Комп_продукт_месяц_dt_dt_ОПЕК,
Цена_реал_неф_1
 resident Выручка_неф ; 

Цена_неф_БП_$(a):
Mapping
 LOAD distinct AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп) as Комп_продукт_месяц_dt_dt_ОПЕК,
Цена_реал_неф_БП
 resident Выручка_неф ; 




//компании с Выручка_неф, но хотя бы с одной отсутсвующей ценой
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц_dt, на эту связку кладем факторв эффективности по измерениям Выручка_неф
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп) as Комп_продукт_месяц_dt
 resident Выручка_неф WHERE alt(Цена_реал_неф_БП,0)=0 or alt(Цена_реал_неф_1,0)=0 or ((alt(Цена_реал_неф_БП,0)<>0 and alt(Цена_реал_неф_1,0)<>0) and(alt(Об_прод_неф_БП,0)=0 or alt(Об_прод_неф_1,0)=0)) ; 

//когда нет хотя бы одного объема
//фактор эффетивности считается как разница Выручка_неф АП - Выручка_неф БП
Факторы:
 LOAD 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Фэ_нефть_сгк 
// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_неф_$(a),'Выручка_неф_БП','Выручка_неф_1')>0 
//только для тех у кого нет хотя бы однойц цены
and exists(Комп_продукт_месяц_dt,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп ; 

//Выручка которая соотносится с данным значением фактора эффектифности
//для правильного расчета в таблицах
left join(Факторы)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп,
 Выручка_неф_БП,
 Выручка_неф_1
 resident Выручка_неф ; 



//объемы по листитьям
//здесь только те данные, у которых имеются две цены - для них расчитывается как фактор эффективности, так и нормализации
//цены расчитаны по цене реализации, а умножаются на объемы по продукции
NoConcatenate
Объем_Выручка_неф:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 SUM(IF($(vSYV)='$(a)',$(vF_for_ndpi),0))
 as Об_прод_неф_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as Об_прод_неф_1

// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_неф_$(a),'Об_прод_неф_БП','Об_прод_неф_1')>0
//только те у которых есть два объема
and not exists(Комп_продукт_месяц_dt,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп ; 

//присоединяем цены для расчета факторов
left join(Объем_Выручка_неф)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп,
 Цена_реал_неф_БП,
 Цена_реал_неф_1,
 Выручка_неф_БП,
 Выручка_неф_1,
 //объемы для справки
 Об_реал_неф_БП,
 Об_реал_неф_1
 resident Выручка_неф ; 

Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '11' as ПоказательID, 
 // здесь рассчитываются только нефть сгк
 IF([%Продукт ID]='PRD_01_04','ACC_PL_01_01_06','ACC_PL_01_01_01') as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 Об_прод_неф_БП,
 Об_прод_неф_1,
 //объемы для справки
 Об_реал_неф_БП,
 Об_реал_неф_1,
 Цена_реал_неф_БП,
 Цена_реал_неф_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(Цена_реал_неф_1,0)*alt(Цена_реал_неф_БП,0)=0,0,
 (alt(Цена_реал_неф_1,0)-alt(Цена_реал_неф_БП,0))*Об_прод_неф_БП) as Фн_нефть_сгк,
 IF(alt(Цена_реал_неф_1,0)*alt(Цена_реал_неф_БП,0)=0,alt(Цена_реал_неф_1,0)*alt(Об_прод_неф_1,0)-alt(Цена_реал_неф_БП,0)*alt(Об_прод_неф_БП,0),
 (alt(Об_прод_неф_1,0)-alt(Об_прод_неф_БП,0))*alt(Цена_реал_неф_1,0)) as Фэ_нефть_сгк,
 Выручка_неф_БП,
 Выручка_неф_1
 resident Объем_Выручка_неф ; 

drop table Объем_Выручка_неф ; 


//рассчитываем фактор опек
//его вычитаем из Фактора эффективности
Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '11' as ПоказательID, 
 IF([%Продукт ID]='PRD_01_04','ACC_PL_01_01_06','ACC_PL_01_01_01') as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
//факторы
 SUM(IF($(vSYV)='$(a)',ApplyMap('Цена_неф_1_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп))*Фн_ОПЕК_руч,0)) as Фн_ОПЕК,
 -SUM(IF($(vSYV)='$(a)',ApplyMap('Цена_неф_1_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп))*Фн_ОПЕК_руч,0)) as Фэ_нефть_сгк,
//цена
 SUM(IF($(vSYV)='$(a)',ApplyMap('Цена_неф_1_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп)),0)) as Цена_реал_неф_1
// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_неф_$(a),'Выручка_неф_огр_ОПЕК_БП')>0 
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 '11',
 IF([%Продукт ID]='PRD_01_04','ACC_PL_01_01_06','ACC_PL_01_01_01'),
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп ; 


//фактор считается для всех кроме коммерцелизации газа и конс_корр
//для начала рассчитывается разница между двумя периодами
Concatenate(Факторы)
 LOAD 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Фн_изм_ост
// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_неф_$(a),'Выручка_неф_БП','Выручка_неф_1')>0 
//не конс корр не коммер. газа
and DT_ОЕ_укруп='ОЕ' and ApplyMap('Map_ОЕ',[%Компания ID])<>'Коммерциализация газа'
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп ; 


//рассчитываем изм остатков
//сначала подготавливаем объемы продукции и цены
//когда есть group нормально не работает, поэтому пользуемся вспомогательной таблицей
temp_изм_остат:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '11' as ПоказательID, 
 IF([%Продукт ID]='PRD_01_04','ACC_PL_01_01_06','ACC_PL_01_01_01') as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 //информация для расчета
 SUM(IF($(vSYV)='$(a)',$(vF_for_ndpi),0)) as Об_прод_неф_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0)) as Об_прод_неф_1,
 ApplyMap('Цена_неф_БП_$(a)',AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп)) as Цена_реал_неф_БП,
 ApplyMap('Цена_неф_1_$(a)',AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп)) as Цена_реал_неф_1
// resident DataStep
 resident tbDataStep WHERE match(flag_Выручка_неф_$(a),'Об_прод_неф_БП','Об_прод_неф_1')>0
//не конс корр не коммер. газа
and DT_ОЕ_укруп='ОЕ' and ApplyMap('Map_ОЕ',[%Компания ID])<>'Коммерциализация газа'
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 '11',
 IF([%Продукт ID]='PRD_01_04','ACC_PL_01_01_06','ACC_PL_01_01_01'),
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 ApplyMap('Цена_неф_БП_$(a)',AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп)),
 ApplyMap('Цена_неф_1_$(a)',AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп)) ; 

//он равен ВырчкаБП_штрих - ВыручкаАП_штрих (объемы продукции0 * цены0 - объемы1*цены1)
//перед этим была расчитана разница обычных выручек ВыручкаАП-ВыручкаБП
Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 Цена_реал_неф_БП,
 Цена_реал_неф_1,
alt(Об_прод_неф_БП,0)*alt(Цена_реал_неф_БП,0)-alt(Об_прод_неф_1,0)*alt(Цена_реал_неф_1,0) as Фн_изм_ост
 resident temp_изм_остат ; 
drop table temp_изм_остат ; 

//когда одна из цен равна 0, надо вычесть Фн_изм_объемов из Фэ эффективности, чтобы факторы не задвоелись
Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID],
 [%Ресурс ID], 
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 DT_ОЕ_укруп,
 Цена_реал_неф_БП,
 Цена_реал_неф_1,
- Фн_изм_ост as Фэ_нефть_сгк
 resident Факторы WHERE exists(Комп_продукт_месяц_dt,AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
and Фн_изм_ост<>0 ; 


drop table Выручка_неф ; 



left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(DataStep)
 LOAD 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 Об_реал_неф_БП,
 Об_реал_неф_1,
 Выручка_неф_БП,
 Выручка_неф_1,
 Цена_реал_неф_БП,
 Цена_реал_неф_1,
 Об_прод_неф_БП,
 Об_прод_неф_1,
 Фн_нефть_сгк,
 Фэ_нефть_сгк,
 Фн_ОПЕК,
 Фн_изм_ост
 resident Факторы WHERE alt(Фн_нефть_сгк,0)<>0 or alt(Фэ_нефть_сгк,0)<>0 or alt(Фн_ОПЕК,0)<>0 or alt(Фн_изм_ост,0)<>0 ; 

drop table Факторы ; 

drop field flag_Выручка_неф_$(a) FROM DataStep ; 
drop table Без_объемов_БП ; 

next a ; 

Drop Tables tbDataStep ; 
Rename Tables DataStep To Data ; 

END SUB
///$tab НДПИ_ДНС
SUB NDPI_DNS


NoConcatenate
DataStep:
 LOAD *,
 
 //01
 //Налог на добычу полезных ископаемых - Нефть
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_PL_08_01' //and [%Продукт ID]='PRD_01_01'
 and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'НДПИ_ДНС_БП')&
 //Добыча нефти (за вычетом норм. потерь) кроме НДД, тыс. т
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_TI_09_03' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'Об_доб_БП')
 
 &//АП
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_08_01' //and [%Продукт ID]='PRD_01_01'
 and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'НДПИ_ДНС_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_03' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'Об_доб_1')
 //ОПЕК
 &IF($(vSYV)='0_1' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ' 
 and [%Продукт ID]='PRD_01_01' and Фн_ОПЕК_руч<>0 and Режим='ДНС','НДПИ_ДНС_огр_ОПЕК_БП')
 
 as flag_НДПИ_ДНС_0_1
 ,
 
 //02
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_PL_08_01' //and [%Продукт ID]='PRD_01_01'
 and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'НДПИ_ДНС_БП')&
 //Добыча нефти (за вычетом норм. потерь) кроме НДД, тыс. т
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_TI_09_03' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'Об_доб_БП')
 
 &//АП
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_08_01' //and [%Продукт ID]='PRD_01_01'
 and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'НДПИ_ДНС_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_03' and match(ApplyMap('Map_ОЕ_укруп',[%Компания ID]),'НИС','Ближний Восток','Хунин-6')=0,'Об_доб_1')
 //ОПЕК
 &IF($(vSYV)='0_2' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ' 
 and [%Продукт ID]='PRD_01_01' and Фн_ОПЕК_руч<>0 and Режим='ДНС','НДПИ_ДНС_огр_ОПЕК_БП')

 as flag_НДПИ_ДНС_0_2
 resident Data ; 

drop table Data ; 

//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident DataStep WHERE not isnull(flag_НДПИ_ДНС_0_1) or not isnull(flag_НДПИ_ДНС_0_2) ; 

for each a in '0_2','0_1'

//NoConcatenate
//уделы считаем по всем данным
НДПИ_ДНС:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 Sum(IF(flag_НДПИ_ДНС_$(a)='НДПИ_ДНС_БП',$(vF_for_ndpi))) as НДПИ_ДНС_БП,
 Sum(IF(flag_НДПИ_ДНС_$(a)='НДПИ_ДНС_1',$(vF_for_ndpi))) as НДПИ_ДНС_1,
 Sum(IF(flag_НДПИ_ДНС_$(a)='Об_доб_БП',$(vF_for_ndpi))) as Об_доб_БП,
 Sum(IF(flag_НДПИ_ДНС_$(a)='Об_доб_1',$(vF_for_ndpi))) as Об_доб_1,
 Sum(IF(flag_НДПИ_ДНС_$(a)='НДПИ_ДНС_БП',$(vF_for_ndpi)))/Sum(IF(flag_НДПИ_ДНС_$(a)='Об_доб_БП',$(vF_for_ndpi))) as Ставка_НДПИ_ДНС_БП,
 Sum(IF(flag_НДПИ_ДНС_$(a)='НДПИ_ДНС_1',$(vF_for_ndpi)))/Sum(IF(flag_НДПИ_ДНС_$(a)='Об_доб_1',$(vF_for_ndpi))) as Ставка_НДПИ_ДНС_1
// resident DataStep
 resident tbDataStep WHERE not isnull(flag_НДПИ_ДНС_$(a))
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID],
 Месяц ; 

//цена прочая по АП для расчета фактора ОПЕКА, чтобы не джойнить на таблицу НДПИ_ДНС а сделать одним действием
Ставка_днс_map_$(a):
Mapping
 LOAD AutoNumber([%Компания ID]&[%Продукт ID]&Месяц) as Комп_продукт_месяц_ОПЕК,
Ставка_НДПИ_ДНС_1
 resident НДПИ_ДНС ; 



//компании с НДПИ_ДНС, но хотя бы с одним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц, на эту связку кладем факторв эффективности по измерениям НДПИ_ДНС
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц) as Комп_продукт_месяц
 resident НДПИ_ДНС WHERE alt(Об_доб_БП,0)=0 or alt(Об_доб_1,0)=0 ; 

//когда нет хотя бы одного объема
//фактор эффетивности считается как разница НДПИ_ДНС АП - НДПИ_ДНС БП
// группировка по темID
Факторы:
 LOAD 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as НДПИ_ДНС_1,
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as НДПИ_ДНС_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Фэ_НДПИ_при_ДНС
 
// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_ДНС_$(a),'НДПИ_ДНС_БП','НДПИ_ДНС_1')>0 
//только для тех у кого нет хотя бы одного объема
and exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел
 ; 


//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
NoConcatenate
Объем_НДПИ_ДНС:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 
 SUM(IF($(vSYV)='$(a)',$(vF_for_ndpi),0))
 as Об_доб_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as Об_доб_1

// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_ДНС_$(a),'Об_доб_БП','Об_доб_1')>0 
//только те у которых есть два объема
and not exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 ; 
 
 
//
//присоединяем цены для расчета факторов
left join(Объем_НДПИ_ДНС)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 
 Ставка_НДПИ_ДНС_БП,
 Ставка_НДПИ_ДНС_1,
 НДПИ_ДНС_БП,
 НДПИ_ДНС_1
 resident НДПИ_ДНС ; 

Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '15' as ПоказательID, 
 // здесь рассчитываются прочие нефтепродукты и газ
 // если прочие нефтепродукты то НДПИ_ДНС по нп, иначе по газу
 'ACC_PL_08_01' as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 
 Об_доб_БП,
 Об_доб_1,
 Ставка_НДПИ_ДНС_БП,
 Ставка_НДПИ_ДНС_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(Ставка_НДПИ_ДНС_1,0)*alt(Ставка_НДПИ_ДНС_БП,0)=0,0,
 (alt(Ставка_НДПИ_ДНС_1,0)-alt(Ставка_НДПИ_ДНС_БП,0))*Об_доб_БП) as Фн_НДПИ_при_ДНС,
 IF(alt(Ставка_НДПИ_ДНС_1,0)*alt(Ставка_НДПИ_ДНС_БП,0)=0,alt(Ставка_НДПИ_ДНС_1,0)*alt(Об_доб_1,0)-alt(Ставка_НДПИ_ДНС_БП,0)*alt(Об_доб_БП,0),
 (alt(Об_доб_1,0)-alt(Об_доб_БП,0))*alt(Ставка_НДПИ_ДНС_1,0)) as Фэ_НДПИ_при_ДНС,
 НДПИ_ДНС_БП,
 НДПИ_ДНС_1
 resident Объем_НДПИ_ДНС ; 


drop table Объем_НДПИ_ДНС ; 



//
////рассчитываем фактор опек
////его вычитаем из Фактора эффективности
Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '15' as ПоказательID, 
 'ACC_PL_08_01' as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 
//факторы
 SUM(IF($(vSYV)='$(a)',ApplyMap('Ставка_днс_map_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц))*Фн_ОПЕК_руч,0)) as Фн_ОПЕК,
 -SUM(IF($(vSYV)='$(a)',ApplyMap('Ставка_днс_map_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц))*Фн_ОПЕК_руч,0)) as Фэ_НДПИ_при_ДНС,
//цена
 SUM(IF($(vSYV)='$(a)',ApplyMap('Ставка_днс_map_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц)),0)) as Ставка_НДПИ_ДНС_1
// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_ДНС_$(a),'НДПИ_ДНС_огр_ОПЕК_БП')>0 
//только те у которых есть два объема
//and not exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 '15',
 'ACC_PL_08_01',
 Месяц, 
 flag_узел
 ; 


drop table НДПИ_ДНС ; 

left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(DataStep)
 LOAD 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 Об_доб_БП,
 Об_доб_1,
 НДПИ_ДНС_БП,
 НДПИ_ДНС_1,
 Ставка_НДПИ_ДНС_БП,
 Ставка_НДПИ_ДНС_1,
 Фн_НДПИ_при_ДНС,
 Фэ_НДПИ_при_ДНС,
 Фн_ОПЕК
 resident Факторы WHERE alt(Фн_НДПИ_при_ДНС,0)<>0 or alt(Фэ_НДПИ_при_ДНС,0)<>0 or alt(Фн_ОПЕК,0)<>0 ; 

drop table Факторы ; 

drop field flag_НДПИ_ДНС_$(a) FROM DataStep ; 
drop table Без_объемов_БП ; 

next a ; 

Drop Tables tbDataStep ; 
Rename Tables DataStep To Data ; 

END SUB
///$tab НДПИ_НДД
SUB NDPI_NDD

NoConcatenate
DataStep:
 LOAD *,
 
 //01
 //Налог на добычу полезных ископаемых – Нефть (НДД)
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_PL_08_17','НДПИ_НДД_БП')&
 //Добыча без потерь (НДД)
 //ПоказательID 32 отвечает за CONS, такая же статья еще лежит на PL
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_TI_09_07_01_01_01_01_10' and [%Продукт ID]='PRD_01_01' and ПоказательID='32','Об_НДД_БП')
 
 &//АП
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_08_17','НДПИ_НДД_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_07_01_01_01_01_10' and [%Продукт ID]='PRD_01_01' and ПоказательID='32','Об_НДД_1')
 //ОПЕК
 &IF($(vSYV)='0_1' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ' 
 and [%Продукт ID]='PRD_01_01' and Фн_ОПЕК_руч<>0 and Режим='НДД','НДПИ_НДД_огр_ОПЕК_БП')
 
 as flag_НДПИ_НДД_0_1
 ,
 
 //02
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_PL_08_17','НДПИ_НДД_БП')&
 //Добыча без потерь (НДД)
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_TI_09_07_01_01_01_01_10' and [%Продукт ID]='PRD_01_01' and ПоказательID='32','Об_НДД_БП')
 
 &//АП
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_08_17','НДПИ_НДД_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_TI_09_07_01_01_01_01_10' and [%Продукт ID]='PRD_01_01' and ПоказательID='32','Об_НДД_1')
 //ОПЕК
 &IF($(vSYV)='0_2' and ApplyMap('ПоказательСтатьяID_СТ_укр',AutoNumber(ПоказательID&[%Статьи СПО ID],3))='Добыча УВ, тыс.тнэ' 
 and [%Продукт ID]='PRD_01_01' and Фн_ОПЕК_руч<>0 and Режим='НДД','НДПИ_НДД_огр_ОПЕК_БП')

 as flag_НДПИ_НДД_0_2
 resident Data ; 

drop table Data ; 

//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident DataStep WHERE not isnull(flag_НДПИ_НДД_0_1) or not isnull(flag_НДПИ_НДД_0_2) ; 

for each a in '0_2','0_1'

//NoConcatenate
//уделы считаем по всем данным
НДПИ_НДД:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 Sum(IF(flag_НДПИ_НДД_$(a)='НДПИ_НДД_БП',$(vF_for_ndpi))) as НДПИ_НДД_БП,
 Sum(IF(flag_НДПИ_НДД_$(a)='НДПИ_НДД_1',$(vF_for_ndpi))) as НДПИ_НДД_1,
 Sum(IF(flag_НДПИ_НДД_$(a)='Об_НДД_БП',$(vF_for_ndpi))) as Об_НДД_БП,
 Sum(IF(flag_НДПИ_НДД_$(a)='Об_НДД_1',$(vF_for_ndpi))) as Об_НДД_1,
 Sum(IF(flag_НДПИ_НДД_$(a)='НДПИ_НДД_БП',$(vF_for_ndpi)))/Sum(IF(flag_НДПИ_НДД_$(a)='Об_НДД_БП',$(vF_for_ndpi))) as Ставка_НДПИ_НДД_БП,
 Sum(IF(flag_НДПИ_НДД_$(a)='НДПИ_НДД_1',$(vF_for_ndpi)))/Sum(IF(flag_НДПИ_НДД_$(a)='Об_НДД_1',$(vF_for_ndpi))) as Ставка_НДПИ_НДД_1
// resident DataStep
 resident tbDataStep WHERE not isnull(flag_НДПИ_НДД_$(a))
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID],
 Месяц ; 


//цена прочая по АП для расчета фактора ОПЕКА, чтобы не джойнить на таблицу НДПИ_НДД а сделать одним действием
Ставка_НДД_map_$(a):
Mapping
 LOAD AutoNumber([%Компания ID]&[%Продукт ID]&Месяц) as Комп_продукт_месяц_ОПЕК,
Ставка_НДПИ_НДД_1
 resident НДПИ_НДД ; 



//компании с НДПИ_НДД, но хотя бы с одним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц, на эту связку кладем факторв эффективности по измерениям НДПИ_НДД
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц) as Комп_продукт_месяц
 resident НДПИ_НДД WHERE alt(Об_НДД_БП,0)=0 or alt(Об_НДД_1,0)=0 ; 

//когда нет хотя бы одного объема
//фактор эффетивности считается как разница НДПИ_НДД АП - НДПИ_НДД БП
// группировка по темID
Факторы:
 LOAD 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as НДПИ_НДД_1,
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as НДПИ_НДД_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Фэ_НДПИ_при_НДД
 
// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_НДД_$(a),'НДПИ_НДД_БП','НДПИ_НДД_1')>0 
//только для тех у кого нет хотя бы одного объема
and exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел
 ; 


//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
NoConcatenate
Объем_НДПИ_НДД:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 
 SUM(IF($(vSYV)='$(a)',$(vF_for_ndpi),0))
 as Об_НДД_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as Об_НДД_1

// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_НДД_$(a),'Об_НДД_БП','Об_НДД_1')>0 
//только те у которых есть два объема
and not exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел
 ; 
 

//присоединяем цены для расчета факторов
left join(Объем_НДПИ_НДД)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 
 Ставка_НДПИ_НДД_БП,
 Ставка_НДПИ_НДД_1,
 НДПИ_НДД_БП,
 НДПИ_НДД_1,
 //присоеднияем основные цены как справочные, чтобы считать факторы по ним, а не ставкам
 //одна из ставок может быть нулевая, при этом есть объемы (когда отствует НДПИ)
 //в этом случае все скидывалось на Фактор эффектиновсти, что не верно
 Об_НДД_БП as Об_НДД_БП_справ,
 Об_НДД_1 as Об_НДД_1_справ
 resident НДПИ_НДД ; 

Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '15' as ПоказательID, 
 // здесь рассчитываются прочие нефтепродукты и газ
 // если прочие нефтепродукты то НДПИ_НДД по нп, иначе по газу
 'ACC_PL_08_17' as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 Об_НДД_БП,
 Об_НДД_1,
 Об_НДД_БП_справ,
 Об_НДД_1_справ,
 Ставка_НДПИ_НДД_БП,
 Ставка_НДПИ_НДД_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(Об_НДД_1_справ,0)*alt(Об_НДД_БП_справ,0)=0,0,
 (alt(Ставка_НДПИ_НДД_1,0)-alt(Ставка_НДПИ_НДД_БП,0))*Об_НДД_БП) as Фн_НДПИ_при_НДД,
 IF(alt(Об_НДД_1_справ,0)*alt(Об_НДД_БП_справ,0)=0,alt(Ставка_НДПИ_НДД_1,0)*alt(Об_НДД_1,0)-alt(Ставка_НДПИ_НДД_БП,0)*alt(Об_НДД_БП,0),
 (alt(Об_НДД_1,0)-alt(Об_НДД_БП,0))*alt(Ставка_НДПИ_НДД_1,0)) as Фэ_НДПИ_при_НДД,
 НДПИ_НДД_БП,
 НДПИ_НДД_1
 resident Объем_НДПИ_НДД ; 


drop table Объем_НДПИ_НДД ; 



////рассчитываем фактор опек
////его вычитаем из Фактора эффективности
Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '15' as ПоказательID, 
 'ACC_PL_08_17' as [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 
//факторы
 SUM(IF($(vSYV)='$(a)',ApplyMap('Ставка_НДД_map_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц))*Фн_ОПЕК_руч,0)) as Фн_ОПЕК,
 -SUM(IF($(vSYV)='$(a)',ApplyMap('Ставка_НДД_map_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц))*Фн_ОПЕК_руч,0)) as Фэ_НДПИ_при_НДД,
//цена
 SUM(IF($(vSYV)='$(a)',ApplyMap('Ставка_НДД_map_$(a)',AutoNumber([%Компания ID]&[%Продукт ID]&Месяц)),0)) as Ставка_НДПИ_НДД_1
// resident DataStep
 resident tbDataStep WHERE match(flag_НДПИ_НДД_$(a),'НДПИ_НДД_огр_ОПЕК_БП')>0 
//только те у которых есть два объема
//and not exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 '15',
 'ACC_PL_08_17',
 Месяц, 
 flag_узел
 ; 

drop table НДПИ_НДД ; 

left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate(DataStep)
 LOAD 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 Об_НДД_БП,
 Об_НДД_1,
 Об_НДД_БП_справ,
 Об_НДД_1_справ,
 НДПИ_НДД_БП,
 НДПИ_НДД_1,
 Ставка_НДПИ_НДД_БП,
 Ставка_НДПИ_НДД_1,
 Фн_НДПИ_при_НДД,
 Фэ_НДПИ_при_НДД,
 Фн_ОПЕК
 resident Факторы WHERE alt(Фн_НДПИ_при_НДД,0)<>0 or alt(Фэ_НДПИ_при_НДД,0)<>0 or alt(Фн_ОПЕК,0)<>0 ; 

drop table Факторы ; 

drop field flag_НДПИ_НДД_$(a) FROM DataStep ; 
drop table Без_объемов_БП ; 

next a ; 

Drop Tables tbDataStep ; 
Rename Tables DataStep To Data ; 

END SUB
///$tab Себес. газа
Sub Cost_gas

DataStep:
 LOAD *,
 //01
 //Себестоимость приобретенных газа и продуктов газопереработки - Покупка
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_PL_02_01_08','Себест_БП')&
 //Поступление - Приобретение (тыс.т., млн.м3)
 IF($(vSYV)='0_1' and [%Статьи СПО ID]='ACC_MB_02_03' ,'Приобрет_БП')
 
 &//АП
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_02_01_08','Себест_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_02_03' ,'Приобрет_1')
 as flag_Себест_0_1
 ,
 
 //02
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_PL_02_01_08','Себест_БП')&
 //Поступление - Приобретение (тыс.т., млн.м3)
 IF($(vSYV)='0_2' and [%Статьи СПО ID]='ACC_MB_02_03' ,'Приобрет_БП')
 
 &//АП
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_PL_02_01_08','Себест_1')&
 IF($(vSYV)='1' and [%Статьи СПО ID]='ACC_MB_02_03' ,'Приобрет_1')
 as flag_Себест_0_2
 resident Data ; 

drop table Data ; 

//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident DataStep WHERE not isnull(flag_Себест_0_1) or not isnull(flag_Себест_0_2) ; 

for each a in '0_1','0_2'

NoConcatenate
Себест:
 LOAD IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп,
 Sum(IF(flag_Себест_$(a)='Себест_БП',$(vF_for_ndpi))) as Себест_БП,
 Sum(IF(flag_Себест_$(a)='Себест_1',$(vF_for_ndpi))) as Себест_1,
 Sum(IF(flag_Себест_$(a)='Приобрет_БП',$(vF_for_ndpi))) as Приобрет_БП,
 Sum(IF(flag_Себест_$(a)='Приобрет_1',$(vF_for_ndpi))) as Приобрет_1,
 Sum(IF(flag_Себест_$(a)='Себест_БП',$(vF_for_ndpi)))/Sum(IF(flag_Себест_$(a)='Приобрет_БП',$(vF_for_ndpi))) as Удел_себест_БП,
 Sum(IF(flag_Себест_$(a)='Себест_1',$(vF_for_ndpi)))/Sum(IF(flag_Себест_$(a)='Приобрет_1',$(vF_for_ndpi))) as Удел_себест_1
// resident DataStep
 resident tbDataStep WHERE not isnull(flag_Себест_$(a))
group by IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп ; 

//компании с Себест, но хотя бы с одним отсутсвующим объемам
//все остальные учтены в следующем расчетеме
//autonumber по связке компания-продукт-месяц, на эту связку кладем факторв эффективности по измерениям Себест
NoConcatenate
Без_объемов_БП:
 LOAD distinct 
 AutoNumber([%Компания ID]&[%Продукт ID]&Месяц&DT_ОЕ_укруп) as Комп_продукт_месяц
 resident Себест WHERE alt(Приобрет_БП,0)=0 or alt(Приобрет_1,0)=0 ; 



//когда нет хотя бы одного объема
//фактор эффетивности считается как разница Себест АП - Себест БП
// группировка по темID
Факторы:
 LOAD 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 DT_ОЕ_укруп,
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as Себест_1,
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Себест_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 -
 SUM(IF($(vSYV)='$(a)' ,$(vF_for_ndpi),0))
 as Фэ_Себест
// resident DataStep
 resident tbDataStep WHERE match(flag_Себест_$(a),'Себест_БП','Себест_1')>0 
//только для тех у кого нет хотя бы одного объема
and exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
group by
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
DT_ОЕ_укруп,
//// [%Год ID], 
//// [%Сценарий ID], 
//// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]),
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 


//объемы по листитьям
//здесь только те данные, у которых имеется два объемы - для них расчитывается как фактор эффективности, так и нормализации
NoConcatenate
Объем_Себест:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
DT_ОЕ_укруп,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='$(a)',$(vF_for_ndpi),0))
 as Приобрет_БП,
 SUM(IF($(vSYV)='1',$(vF_for_ndpi),0))
 as Приобрет_1

// resident DataStep
 resident tbDataStep WHERE match(flag_Себест_$(a),'Приобрет_БП','Приобрет_1')>0 
//только те у которых есть два объема
and not exists(Комп_продукт_месяц,AutoNumber(IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID])&[%Продукт ID]&Месяц&DT_ОЕ_укруп))
group by 
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 DT_ОЕ_укруп,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел ; 
//
//присоединяем цены для расчета факторов
left join(Объем_Себест)
 LOAD [%Компания ID], 
 [%Продукт ID],
 Месяц,
 DT_ОЕ_укруп,
 Удел_себест_БП,
 Удел_себест_1,
 Себест_БП,
 Себест_1
 resident Себест ; 

Concatenate(Факторы)
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
DT_ОЕ_укруп,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 '16' as ПоказательID, 
 // если нефть , сгк - кладем на их статьи Себест, все остальное на Себест по газу
 'ACC_PL_02_01_08' as [%Статьи СПО ID], 
 Месяц, 
 flag_узел, 
 Приобрет_БП,
 Приобрет_1,
 Удел_себест_БП,
 Удел_себест_1,
 //если хотя бы одна из цен равна нулю 
 //то все кладем на фактор эффектиновсти объемов, как разницу покупок
 IF(alt(Удел_себест_1,0)*alt(Удел_себест_БП,0)=0,0,
 (alt(Удел_себест_1,0)-alt(Удел_себест_БП,0))*Приобрет_БП) as Фн_Себест,
 IF(alt(Удел_себест_1,0)*alt(Удел_себест_БП,0)=0,alt(Удел_себест_1,0)*alt(Приобрет_1,0)-alt(Удел_себест_БП,0)*alt(Приобрет_БП,0),
 (alt(Приобрет_1,0)-alt(Приобрет_БП,0))*alt(Удел_себест_1,0)) as Фэ_Себест,
 Себест_БП,
 Себест_1
 resident Объем_Себест ; 

drop table Объем_Себест ; 
drop table Себест ; 


//добавляем сц_вер_год
left join(Факторы)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 
//
Concatenate(DataStep)
 LOAD 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
//кладем на темID которая соответствовала статье покупки
 [%Статьи СПО ID], 
 [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 flag_узел, 
 Приобрет_БП,
 Приобрет_1,
 Себест_БП,
 Себест_1,
 Удел_себест_БП,
 Удел_себест_1,
 Фн_Себест,
 Фэ_Себест
 resident Факторы WHERE alt(Фн_Себест,0)<>0 or alt(Фэ_Себест,0)<>0 ; 

drop table Факторы ; 

drop field flag_Себест_$(a) FROM DataStep ; 
drop table Без_объемов_БП ; 

next a ; 

Drop Tables tbDataStep ; 
Rename Tables DataStep To Data ; 

End sub
///$tab Периметр
Sub Factor_perimetr

Let vLastNameBeforePerimetr = 'Data' ; 


//если есть пересеечение анализируемого периода (1) с листа периоды с исключениям с листа периметр (1)
NoConcatenate
Анализируемый:
 LOAD Период as сц_год_версия_пер
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is [ScenarioStep_21]) WHERE match(Код,'1')>0 ; 

inner join(Анализируемый)
 LOAD distinct [1] as сц_год_версия_пер
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Периметр) ; 


IF NoOfRows('Анализируемый')>0 THEN
//справочник тоо на что кладемесли есть исключения
Периметр_компаний_сц_год_вер:
 LOAD База, 
 ApplyMap('Map_company_leaf',Компания) as [%Компания ID база]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Периметр) WHERE exists(сц_год_версия_пер, [1]) ; 

If NoOfRows('Анализ_период_сц_год_вер')>0 THEN

trace>> 'Рассчитываю фактор периметра генерир. прогнозу' ; 

NoConcatenate
Фактор_периметра:
 LOAD 
//[%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 Метод, 
// Доля, 
// Факт_СПО, 
// Факт_все, 
 Валюта_доп, 
// Курс, 
 Курс_АП, 
 Курс_дол,
 Доля_в_АП, 
// Коэф_курс, 
// Факт_все_курс, 
// Изменение_доли, 
// Коэф_доля, 
// Фн_доля, 
 Факт_все as Фн_периметр,
 flag_узел
 resident $(vLastNameBeforePerimetr) WHERE exists(Месяц_сц_год_версия,Autonumber(Месяц& [%Сценарий ID]&[%Год ID]&[%Версия ID],4)) and exists([%Компания ID база],[%Компания ID]) ; 


drop table Month_scn_ver_year_new_autonumber ; 

ELSE 

trace>> 'Рассчитываю фактор периметра по существующему периоду' ; 
left join($(vLastNameBeforePerimetr))
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 сц_год_версия
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

NoConcatenate
Фактор_периметра:
 LOAD 
//[%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
Фактор_изм,
Причина_изм,
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 Месяц, 
 Метод, 
// Доля, 
// Факт_СПО, 
// Факт_все, 
 Валюта_доп, 
// Курс, 
 Курс_АП, 
 Курс_дол,
 Доля_в_АП, 
// Коэф_курс, 
// Фн_курс 
// Изменение_доли, 
// Коэф_доля, 
// Фн_доля, 
 Факт_все as Фн_периметр,
 flag_узел
 resident $(vLastNameBeforePerimetr) WHERE exists(сц_год_версия_пер,сц_год_версия) and exists([%Компания ID база],[%Компания ID]) ; 

drop field сц_год_версия FROM $(vLastNameBeforePerimetr) ; 
END IF

//для каждой из компаний подцепляю те базовые сц_год_вер на которые необходимо положить факт
left join(Фактор_периметра)
 LOAD [%Компания ID база] as [%Компания ID],
База
 resident Периметр_компаний_сц_год_вер ; 

left join(Фактор_периметра)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
сц_год_версия as База
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

drop field База ; 
drop table Периметр_компаний_сц_год_вер ; 

Concatenate($(vLastNameBeforePerimetr))
 LOAD *
 resident Фактор_периметра ; 

drop table Фактор_периметра ; 


ELSE 
trace>> 'Не рассчитываю фактор периметра' ; 
//везде необходимо проставить 0, т.к. дальше код ссылается на этот столбец
left join($(vLastNameBeforePerimetr))
 LOAD * INLINE [
 Фн_периметр
 0
] ; 

End IF

drop table Анализируемый ; 
drop table Анализ_период_сц_год_вер ; 


END SUB

///$tab Фэ Расх
SUB F_E_Consum


//временная таблица в которой прописаны статьи для которых расчитывается фактор расходов
NoConcatenate
Ст_расх:
 LOAD * INLINE [
 Ст_расх
 Выручка прочее
 Коммерческие расходы
 Налоги (кроме налога на прибыль)
 НДПИ прочее
 Общехозяйственные и административные расходы
 "Прочие доходы/расходы, влияющие на EBITDA"
 Расходы на геологоразведочные работы
 Транспортные расходы
 "Себестоимость приобретенных нефти, газа, нефтепродуктов"
] ; 



OPEX_прочие_показатель:
 LOAD ПоказательСтатьяID as ПоказательСтатьяID_opex_прочие
 resident ПоказательСтатьяID_СТ_укр_table WHERE match(Ст_укр,'OPEX прочие','OPEX REVEX','OPEX LС усл-пост.','OPEX LС усл-перем.')>0 ; 

//вычитваю Фн_ТЕМ и Фэ_ТЕМ, чтобы удобно прописать расчет для 'OPEX LС усл-перем.'

//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident $(vLastNameBeforePerimetr) WHERE (exists('Ст_расх',ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID]),ApplyMap('ПоказательID_map',ПоказательID)))
//OPEX
//при этом необходимо исключить те которые были разложены до этого в Фэ_стоим Фэ_объем
or (exists('ПоказательСтатьяID_opex_прочие',AutoNumber(ПоказательID&[%Статьи СПО ID],3)) and ApplyMap('ДрайверыРАСХ',[%Статьи СПО ID])<>1)
//изм остатков
or ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='изм остатков')
and [%Статьи СПО ID]<>'ACC_PL_02_01_08' ; 



for each a in '0_1','0_2'

Фэ_расх:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID],
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='1',alt(Факт_все,0),0))
 -
 SUM(IF($(vSYV)='$(a)',alt(Факт_все,0) + alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0)+alt(Фн_ОПЕК_руч,0)+alt(Фн_курс,0)+ alt(Фн_доля,0)+alt(Фн_СКП,0)+alt(Фн_covid,0)+alt(Фн_периметр,0)+alt(Фн_ТЕМ,0)+alt(Фн_ОПЕК_перем_расх,0)+alt(Фэ_ТЕМ,0)+alt(Фн_изм_ост,0)+alt(Фэ_стоим,0)+alt(Фэ_объем_затр,0),0))
 as Фэ_расх
// resident $(vLastNameBeforePerimetr)
 resident tbDataStep WHERE //Пероид БП И АП
match($(vSYV),'$(a)','1')>0 and
//нужные статьи
(exists('Ст_расх',ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID]),ApplyMap('ПоказательID_map',ПоказательID)))
//OPEX
//при этом необходимо исключить те которые были разложены до этого в Фэ_стоим Фэ_объем
or (exists('ПоказательСтатьяID_opex_прочие',AutoNumber(ПоказательID&[%Статьи СПО ID],3)) and ApplyMap('ДрайверыРАСХ',[%Статьи СПО ID])<>1)
//изм остатков
or ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='изм остатков')
//исключаем Себестоимость приобретенных газа и продуктов газопереработки - Покупка, т.к. она присутствует в "Себестоимость приобретенных нефти, газа, нефтепродуктов", но разложена на свои факторы
and [%Статьи СПО ID]<>'ACC_PL_02_01_08'
group by
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц,
 flag_узел ; 

left join(Фэ_расх)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate($(vLastNameBeforePerimetr))
 LOAD [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 Фэ_расх
 resident Фэ_расх WHERE Фэ_расх<>0 ; 

drop table Фэ_расх ; 

next a

drop tables OPEX_прочие_показатель, Ст_расх, ПоказательСтатьяID_СТ_укр_table ; 
Drop Tables tbDataStep ; 


END SUB
///$tab Фэ Об
SUB F_V

//Данные в усеченном виде для текущего этапа расчета
tbDataStep:NoConcatenate LOAD * resident $(vLastNameBeforePerimetr) WHERE match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Технико-экономические показатели','Материальный баланс ресурсов')>0 or ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='НДД' ; 

for each a in '0_1','0_2'

Фэ_об:
 LOAD тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]) as [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 SUM(IF($(vSYV)='1',alt(Факт_все,0),0))
 -
 SUM(IF($(vSYV)='$(a)',alt(Факт_все,0) + alt(Фн_ошибки,0) + alt(Фн_изм_условий,0) + alt(Фн_изм_зак_ва,0)+alt(Фн_ОПЕК_руч,0)+alt(Фн_к_газа,0)+ alt(Фн_доля,0)+alt(Фн_covid,0)+alt(Фн_периметр,0)+alt(Фн_НДД,0),0))
 as Фэ_об
// resident $(vLastNameBeforePerimetr)
 resident tbDataStep WHERE match(ApplyMap('Мэппинг_статей',[%Статьи СПО ID]),'Технико-экономические показатели','Материальный баланс ресурсов')>0 or ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',ApplyMap('Map_account_id_leaf',[%Статьи СПО ID])),'нет')='НДД'
group by
 тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 [%Тип данных ID], 
 IF('$(vYear_$(a))'<'FY20' and [%Год ID]>='FY20',ApplyMap('Компании20_19',[%Компания ID],[%Компания ID]),[%Компания ID]), 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц,
 flag_узел ; 

left join(Фэ_об)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID]
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) WHERE $(vSYV)='$(a)' ; 

Concatenate($(vLastNameBeforePerimetr))
 LOAD [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 'ФА' as тип_источника_temp, Режим, [0],[1],flag_ст_укр_1, 
 Фактор_изм,
 Причина_изм,
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 [%Статьи СПО ID], 
 Месяц, 
 flag_узел,
 Фэ_об
 resident Фэ_об WHERE Фэ_об<>0 ; 

drop table Фэ_об ; 

next a

Drop Tables tbDataStep ; 
END SUB
///$tab 4 показат
SUB FourParam

//
//$(vLastNameBeforePerimetr):
// LOAD *
// FROM //[\\pbusrv\PlanBudgDep\QlikData\Отчетность БРД\QVData\Datatier4\Macro_CONSO\VDPL_cost_gas_brd_ng4.qvd]
// (qvd) ; 


If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица в начале этапа','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

//tbIfStep: Noconcatenate LOAD distinct [%Компания ID] as IfStep resident $(vLastNameBeforePerimetr) ; 

left join($(vLastNameBeforePerimetr))
 LOAD distinct 
[%Компания ID], 
 Компания
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Компания.qvd (qvd) 
// WHERE exists(IfStep,[%Компания ID]) ; Drop Tables tbIfStep ; ; 


If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления компании','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If


left join($(vLastNameBeforePerimetr))
 LOAD distinct 
[%Тип данных ID],
 [Тип данных]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Тип_данных.qvd (qvd) 
// WHERE exists([%Тип данных ID]) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления типа данных','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

left join($(vLastNameBeforePerimetr))
 LOAD distinct 
[%Продукт ID],
 Продукт
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Продукт.qvd (qvd) 
// WHERE exists([%Продукт ID]) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления продукта','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

//Если К/а укруп = ОЕ укруп, то тип данных укр = ОЕ
//В противном случае тип данных укр = _конс.корр.

left join($(vLastNameBeforePerimetr))
 LOAD 
[%Компания ID],
 ОЕ, 
 ОЕ_укруп
 FROM $(vDataTier3)\MasterData\SPO1_БРД_Компания.qvd (qvd) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления ОЕ, ОЕ_укруп','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

left join($(vLastNameBeforePerimetr))
 LOAD 
[%Контрагент ID], 
 [К/а ОЕ], 
 [К/а ОЕ_укруп]
 FROM $(vDataTier3)\MasterData\SPO1_Контрагент.qvd (qvd) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления Контрагента_укруп','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

left join($(vLastNameBeforePerimetr))
 LOAD ПоказательID, 
 Показатель
 FROM [$(MAP_PK_Dashboard2)]
(ooxml, embedded labels, table is VDPL) ; 


If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления Показатель','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

left join($(vLastNameBeforePerimetr))
 LOAD distinct 
[%Статьи СПО ID],
 [Статьи СПО]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) 
// WHERE EXISTS([%Статьи СПО ID]) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления Статьи СПО','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

drop field DT_ОЕ_укруп FROM $(vLastNameBeforePerimetr) ; 


If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления справочников','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If


DataStep:
 LOAD тип_источника_temp, Режим, [0],[1], 
 IF(isnull(Фактор_изм),'$(vNotFound)',Фактор_изм) as Фактор_изм,
 IF(isnull(Причина_изм),'$(vNotFound)',Причина_изм) as Причина_изм,
[%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID,
 IF(flag_ст_укр_1=-1,-1,AutoNumber(ПоказательID&[%Статьи СПО ID]&[%Продукт ID],3)) as ПоказательСтатьяID,
 Месяц, 
 Метод, 
 Доля, 
 Факт_СПО, 
 
 Фн_ошибки,
 Фн_изм_условий, Фн_изм_зак_ва,
 Фн_ОПЕК_руч,
 Фн_НДД,
 Факт_все_справочно,
 Факт_все, 
 Валюта_доп, 
 Курс, 
 Курс_АП,
 Курс_дол,
 Доля_в_АП, 
 Коэф_курс, 
 Фн_курс,
 Фн_периметр,
 Изменение_доли, 
 Коэф_доля, 
 Фн_доля,
 Фн_к_газа, 
 Фн_covid,
 Фн_СКП,
 Фн_изм_ост,
 
 
 //ТЕП
 ОбъемТЕМ_БП,
ОбъемТЕМ_1,
ПокупкаТЕМ_БП,
ПокупкаТЕМ_1,
 Цена_БП, 
 Цена_1,
Фн_ТЕМ,
Фэ_ТЕМ,


//Фэ_СТОИМ
 ОбъемыРасх_БП,
 ОбъемыРасх_1,
 ЗатратыРасх_БП,
 ЗатратыРасх_1,
 УделРасх_БП,
 УделРасх_1,
 Фэ_стоим,
 Фэ_объем_затр,
 
 //сложность
 ЗатратыСложн_1, СтоимостьРемонта_1, //для расчета стоимости 1
 
 ЗнамСложн1_1, ЗнамСложн2_1, ВремяРемонта_1, //удел 1
 ЗнамСложн1_БП, ЗнамСложн2_БП, ВремяРемонта_БП, //удел БП
 
 ДельтаУделВремя,
 Фэ_сложн,
 
 
 //ОПЕК блок
 Фн_ОПЕК_перем_расх,
 ДобычаНефти,
 ОграниченияОпек,
 
 //НДПИ
 ОбъемНДПИ_ост_БП,
 ОбъемНДПИ_ост_1,
 НДПИ_ост_БП,
 НДПИ_ост_1,
 СтавкаНДПИ_ост_БП,
 СтавкаНДПИ_ост_1,
 Фн_НДПИ_ост,
 Фэ_НДПИ_ост,
 
 
 //Выручка прочая
 Об_реал_БП,
 Об_реал_1,
 Выручка_БП,
 Выручка_1,
 Цена_реал_БП,
 Цена_реал_1,
 Фн_проч_прод,
 Фэ_проч_прод,
 Фн_ОПЕК,
 
 
 
 //Выручка нефть сгк
 Об_реал_неф_БП,
 Об_реал_неф_1,
 Выручка_неф_БП,
 Выручка_неф_1,
 Цена_реал_неф_БП,
 Цена_реал_неф_1,
 Об_прод_неф_БП,
 Об_прод_неф_1,
 Фн_нефть_сгк,
 Фэ_нефть_сгк, //ОПЕК и Изменение остатков уже загружены выше
 
 //НДПИ при ДНС
 Об_доб_БП,
 Об_доб_1,
 НДПИ_ДНС_БП,
 НДПИ_ДНС_1,
 Ставка_НДПИ_ДНС_БП,
 Ставка_НДПИ_ДНС_1,
 Фн_НДПИ_при_ДНС,
 Фэ_НДПИ_при_ДНС,
 
 //НДПИ при НДД
 Об_НДД_БП,
 Об_НДД_1,
 НДПИ_НДД_БП,
 НДПИ_НДД_1,
 Об_НДД_БП_справ,
 Об_НДД_1_справ,
 Ставка_НДПИ_НДД_БП,
 Ставка_НДПИ_НДД_1,
 Фн_НДПИ_при_НДД,
 Фэ_НДПИ_при_НДД,
 
 //Себестоимость газ
 Приобрет_БП,
 Приобрет_1,
 Себест_БП,
 Себест_1,
 Удел_себест_БП,
 Удел_себест_1,
 Фн_Себест,
 Фэ_Себест,
 
 Фэ_расх,
 Фэ_об,
 
 flag_узел,
 Компания,
 [Тип данных],
 Продукт,
 [Статьи СПО],
// ОЕ, 
// ОЕ_укруп,
 Показатель,
 IF(ApplyMap('Тип_данных_index',[%Тип данных ID])=1 or [%Тип данных ID]='КК ОЕ укруп' or ([%Тип данных ID]='DTP_CONS_RUB_02_ENT_GEN_3' and ОЕ_укруп=[К/а ОЕ_укруп]),'ОЕ','_конс.корр.') as DT_ОЕ_укруп,
 IF(ApplyMap('Тип_данных_index',[%Тип данных ID])=1 or [%Тип данных ID]='КК ОЕ укруп' or ([%Тип данных ID]='DTP_CONS_RUB_02_ENT_GEN_3' and ОЕ_укруп=[К/а ОЕ_укруп]),ОЕ_укруп,'_конс.корр.') as ОЕ_укруп2,
 IF([%Тип данных ID]='DTP_CONS_RUB_00' or [%Тип данных ID]='DTP_CONS_RUB_07','ОЕ','_конс.корр.') as DT_ОЕ,
 IF([%Тип данных ID]='DTP_CONS_RUB_00' or [%Тип данных ID]='DTP_CONS_RUB_07',ОЕ,'_конс.корр.') as ОЕ2,
 IF(match([%Тип данных ID],'DTP_CONS_RUB_10_ENT_GEN_3','DTP_CONS_RUB_10_ENT_GEN_4','DTP_CONS_RUB_10_ENT_GEN_6')>0,'Справочн.','Основной') as Вид_данных,
//исключаем из сцепки VGO весь PL, эффект. доля владения
 IF(ApplyMap('ПоказательID_источник',ПоказательID)='PL' or [%Статьи СПО ID]='ACC_SC_09' or match([К/а ОЕ],'БЛПС','КЦ','РЖД','Сторонние','Итого','Газпром')>0,'$(vNotFound)',
 IF(ApplyMap('Map_company_leaf_rev',[%Компания ID])<replace(ApplyMap('Map_counterparty_leaf',[%Контрагент ID]),' (к)',''),ApplyMap('Map_company_leaf_rev',[%Компания ID])&' - '&replace(ApplyMap('Map_counterparty_leaf',[%Контрагент ID]),' (к)',''),replace(ApplyMap('Map_counterparty_leaf',[%Контрагент ID]),' (к)','')&' - '&ApplyMap('Map_company_leaf_rev',[%Компания ID]))) as Комп_контр_сцеп,
 ApplyMap('Нужные_статьи_mapping',[Статьи СПО],Показатель) as Ст,
 ///если ОПУ - особое правило для НГ, иначе взять просто свой продукт
 
 IF(ApplyMap('Мэппинг_статей',[%Статьи СПО ID])='Отчет о прибылях и убытках' or [%Статьи СПО ID]='ACC_PL_08_16',
 
 Applymap('Продукт_mapping',
 
 IF(match(Продукт,'Газ природный','Газ попутный', 'Газ сжиженный СПБТ','Сухой отбензиненный газ (СОГ)', 'ШФЛУ', 'Стабильный газовый конденсат', 'Нефть'//, 'Продукт (L0)'
 )>0,
 Продукт
 ,ApplyMap('Продукт_ст_mapping',ApplyMap('Нужные_статьи_mapping',[Статьи СПО],Показатель),'нет')),
 Applymap('Продукт_mapping',Продукт,'нет')//'нет' -----спросить про этот момент, если статья не среди перечисленных. например амортизация
 )
 , Applymap('Продукт_mapping',Продукт,'нет')) 
 as БРД_НГ1,
 ApplyMap('Признак_для_ФА', ApplyMap('Нужные_статьи_mapping',[Статьи СПО],Показатель),'нет') as Признак_для_ФА
 resident $(vLastNameBeforePerimetr) ; 

drop table $(vLastNameBeforePerimetr) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после перепривязки DataType','DataStep', NoOfRows('DataStep'), NoOfFields ('DataStep')) ; 
End If


drop fields Компания, [Тип данных], Продукт, [Статьи СПО], Показатель ; // ОЕ, ОЕ_укруп,

Rename Table DataStep to Data ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после удаления полей','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If
 
END SUB
///$tab Форма3
SUB Form3
 
 
 If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица в начале этапа','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

 for each File in filelist ('$(fBRD)\Форма_3\*.xlsx')


 temp_File:
 LOAD 
 replace(replace('$(File)','$(fBRD)\Форма_3\Форма_3_',''),'.xlsx','') as FileName
 autogenerate 1 ; 

 next File
 
 LET File = null() ; 
 
 temp_File_max:
 LOAD max(FileName) as temp_File_max
 resident temp_File ; 
 
 drop table temp_File ; 
 
 LET vtemp_File_max = peek('temp_File_max',0,'temp_File_max') ; 

Форма_3:
NoConcatenate
 LOAD ApplyMap('Map_company_leaf',Компания) as [%Компания ID],
сц_год_версия,
Режим,
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
[МР / ЛУ],
[НО база. Добыча в 100%],
[_НДПИ, тыс руб. в 100%],
[НО база. Добыча],
[_НДПИ, млн руб.]
 FROM $(fBRD)\Форма_3\Форма_3_$(vtemp_File_max).xlsx
(ooxml, embedded labels, table is Данные) WHERE alt([НО база. Добыча в 100%],0)<>0 or alt([_НДПИ, тыс руб. в 100%],0)<>0 or alt([НО база. Добыча],0)<>0 or alt([_НДПИ, млн руб.],0)<>0 ; 

left join(Форма_3)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 сц_год_версия
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

drop field сц_год_версия FROM Форма_3 ; 

Concatenate(Data)
 LOAD *
 resident Форма_3 ; 

drop table Форма_3 ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления данных Ф№3','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

END SUB 
///$tab Качество данных
Sub DataQuality


Concatenate(Data)
 LOAD distinct 
'Узел' as flag_узел,
ПоказательID, 
 AutoNumber(ПоказательID&[%Статьи СПО ID],3)as ПоказательСтатьяID,
 DashboardID, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 Месяц,
 Факт as Факт_узел_Рид
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_Скорр_Ebitda_Рид_узлы.qvd (qvd) WHERE exists(SCNEARIO_VERSION_project,AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2))
 and Факт<>0 ; 
 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления данных из файла V_DATA_CONSO_Скорр_Ebitda_Рид_узлы.qvd','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

If '$(v LOAD Node)' = 'Yes' Then 

//СВЕРКА КОМПАНИЯ _ РИД
Concatenate(Data)
 LOAD 
 distinct 
'Узел' as flag_узел,
 ПоказательID, 
 AutoNumber(ПоказательID&[%Статьи СПО ID],3)as ПоказательСтатьяID,
 DashboardID, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 Месяц, 
 Факт as Факт_узел_Рид
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_VDPL_Рид_узлы.qvd (qvd) WHERE exists(SCNEARIO_VERSION_project,AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2))
 and Факт<>0
 //исключаем для 32 показателя (налоговые платежи) НДД, так как он уже учитывается в 15 (Налоги кроме налоги на прибыль)
 and not (ПоказательID='32' and [%Статьи СПО ID]='ACC_PL_08_16') ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления данных из файла V_DATA_CONSO_VDPL_Рид_узлы.qvd','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If



 
//СВЕРКА КОМПАНИЯ _ ЛИСТЫ РИДА
Concatenate(Data)
 LOAD 
'Узел' as flag_узел,
 ПоказательID,
 AutoNumber(ПоказательID&[%Статьи СПО ID],3)as ПоказательСтатьяID,
 DashboardID, 
 [%Компания ID], 
 [%Тип данных ID], 
 [%Контрагент ID], 
 [%Вид деятельности ID], 
 [%Ресурс ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Продукт ID], 
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 Месяц, 
 Факт as Факт_узел_рид_компания_лист
 FROM $(vDataTier4)\Macro_CONSO\V_DATA_CONSO_VDPL_Рид_компании_листы_итого.qvd (qvd) WHERE exists(SCNEARIO_VERSION_project,AutoNumber([%Год ID]&[%Сценарий ID]&[%Версия ID],2))
 //исключаем ОЕ Западно-Ноябрьское (Не использовать 2019)
 and [%Компания ID] <> 'ENT_GPN_01_01_01_05'
 and Факт<>0
 //исключаем для 32 показателя (налоговые платежи) НДД, так как он уже учитывается в 15 (Налоги кроме налоги на прибыль)
 and not (ПоказательID='32' and [%Статьи СПО ID]='ACC_PL_08_16')
 ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Таблица после добавления данных из файла V_DATA_CONSO_VDPL_Рид_компании_листы_итого.qvd','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If
End if

drop table SCNEARIO_VERSION_project ; 



END SUB
///$tab Новый_прогноз
SUB New_forecast

New_forecast:
 LOAD сц_год_версия_new, 
 Индикатор
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Новый_прогноз) WHERE not isnull(Индикатор) and Индикатор='Да' ; 

IF NoOfRows('New_forecast')>0 THEN

left join(Data)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID], 
 сц_год_версия
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

//подгружаем связку месяц_с_год_вер для формирования прогноза
Month_scn_ver_year_new:
 LOAD Autonumber(Месяц&сц_год_версия,4) as Месяц_сц_год_версия
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Новый_прогноз) ; 

//загружаем только необходимое
NoConcatenate
VDPL_opu_index_new_forecast:
 LOAD тип_источника_temp, Режим, [0],[1], 
 Фактор_изм,
 Причина_изм,
// [%Год ID], 
// [%Сценарий ID], 
// [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 ПоказательСтатьяID, 
 Месяц, 
 Метод, 
 Доля, 
 Факт_СПО, 
 
 Фн_ошибки,
 Фн_изм_условий, Фн_изм_зак_ва,
 Фн_ОПЕК_руч,
 Фн_НДД,
 Факт_все_справочно,
 Факт_все,
 Группа_все, 
 Валюта_доп, 
 Курс, 
 Курс_АП, 
 Курс_дол,
 Доля_в_АП, 
 Коэф_курс, 
 Фн_курс,
 Фн_периметр, 
 Изменение_доли, 
 Коэф_доля, 
 Фн_доля, 
 Фн_к_газа,
 Фн_covid,
 Фн_СКП,
 Фн_изм_ост,

 //ТЕП
 ОбъемТЕМ_БП,
 ОбъемТЕМ_1,
 ПокупкаТЕМ_БП,
 ПокупкаТЕМ_1,
 Цена_БП, 
 Цена_1,
 Фн_ТЕМ,
 Фэ_ТЕМ,
 
 //ОПЕК
 Фн_ОПЕК_перем_расх,
 flag_узел, 
 Тип_данных_укр, 
 ОЕ_укруп2,
 Вид_данных,
 Комп_контр_сцеп,
 Ст, 
 БРД_НГ1, 
 Признак_для_ФА, 
 DashboardID, 
 Факт_узел_Рид, 
 Факт_узел_рид_компания_лист
 resident Data WHERE exists (Месяц_сц_год_версия,Autonumber(Месяц&сц_год_версия,4)) ; 

drop field сц_год_версия FROM Data ; 

//джоин на новый прогноз
left join(VDPL_opu_index_new_forecast)
 LOAD distinct сц_год_версия_new
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Новый_прогноз) WHERE not isnull(сц_год_версия_new) ; 

//подцепляем новые сценарий, год, версия
left join(VDPL_opu_index_new_forecast)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID], 
 сц_год_версия as сц_год_версия_new
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

drop field сц_год_версия_new ; 
drop table Month_scn_ver_year_new ; 


Concatenate(Data)
 LOAD тип_источника_temp, Режим, [0],[1], 
 Фактор_изм,
 Причина_изм,
 [%Год ID], 
 [%Сценарий ID], 
 [%Версия ID], 
 [%Статьи СПО ID], 
 [%Тип данных ID], 
 [%Компания ID], 
 [%Продукт ID], 
 [%Вид деятельности ID], 
 [%Контрагент ID], 
 [%Регион ID], 
 [%Канал ID], 
 [%Ресурс ID], 
 ПоказательID, 
 ПоказательСтатьяID, 
 Месяц, 
 Метод, 
 Доля, 
 Факт_СПО,
 
 Фн_ошибки,
 Фн_изм_условий, Фн_изм_зак_ва,
 Фн_ОПЕК_руч,
 Фн_НДД,
 Факт_все_справочно, 
 Группа_все,
 Факт_все, 
 Валюта_доп, 
 Курс, 
 Курс_АП, 
 Курс_дол,
 Доля_в_АП, 
 Коэф_курс, 
 Фн_курс, 
 Фн_периметр, 
 Изменение_доли, 
 Коэф_доля, 
 Фн_доля,
 Фн_к_газа,
 Фн_covid,
 Фн_СКП,
 Фн_изм_ост,

 //ТЕП
 ОбъемТЕМ_БП,
 ОбъемТЕМ_1,
 ПокупкаТЕМ_БП,
 ПокупкаТЕМ_1,
 Цена_БП, 
 Цена_1,
 Фн_ТЕМ,
 Фэ_ТЕМ,
 
 //ОПЕК
 Фн_ОПЕК_перем_расх,
 flag_узел, 
 Тип_данных_укр, 
 ОЕ_укруп2,
 Вид_данных,
 Комп_контр_сцеп,
 Ст, 
 БРД_НГ1, 
 Признак_для_ФА, 
 DashboardID, 
 Факт_узел_Рид, 
 Факт_узел_рид_компания_лист
 resident VDPL_opu_index_new_forecast ; 

drop table VDPL_opu_index_new_forecast ; 

END IF

drop table New_forecast ; 

END SUB
///$tab Мэппинги
Sub Mappings_accout


//связка показатель_статья_структураid
//если статья отсутвует мы берем весь показатель и раскладываем его полностью
Показатели:
 LOAD Показатель as [Показатель id структура],
 if(isnull([Статьи СПО]),Показатель,[Статьи СПО]) as [Статьи СПО id структура],
 ID_структура
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ПоказателиID) ; 

Статьи_структура_иерархия:
HierarchyBelongsTo([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [%Parent_Статьи СПО], [Ansector_Статьи СПО], DepthDiff)
 LOAD [%Статьи СПО ID], 
 [%Статьи СПО Parent_ID], 
 [Статьи СПО],
 IS_LEAF
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

//для каждого листа имеем всех его предков
Статьи_структура:
 LOAD [Статьи СПО],
 [Ansector_Статьи СПО]
 resident Статьи_структура_иерархия WHERE exists([Статьи СПО id структура], [Ansector_Статьи СПО]) and IS_LEAF=1 ; 

drop table Статьи_структура_иерархия ; 


//каждая статья из мэппинга - теперь выступает предком - мы хотим найти ее потомков
//для каждой статьи-предок мы указываем ее предка в качества [Показатель id структура]
//по сути каждая статья из Статьи_структура привязана к какой то связке [Статьи СПО id структура] - [Показатель id структура] - ID_структура
//эту связку мы обнаруживаем по ключу [Ansector_Статьи СПО]
left join(Статьи_структура)
 LOAD [Статьи СПО id структура] as [Ansector_Статьи СПО],
 [Показатель id структура],
 ApplyMap('Показатель_map',[Показатель id структура]) as ПоказательID_number,
 ID_структура
 resident Показатели ; 

drop table Показатели ; 

////меняем название на Показатель, а не статью - т.к. статьи нет в Показатель_map
//тем самым оставляя связку Статья СПО листовой - Показатель ID - ID структура
drop field [Ansector_Статьи СПО] ; 
RENAME field [Показатель id структура] to [Ansector_Статьи СПО] ; 

//join на все компании которые лежат на данной связке показательID-статья спо ID
left join(Статьи_структура)
 LOAD distinct 
ПоказательID as ПоказательID_number,
ApplyMap('Map_account_id_leaf',[%Статьи СПО ID]) as [Статьи СПО],
[%Продукт ID]
 resident Data ; 


//
//Статьи_структура_final:
// LOAD Autonumber(ApplyMap('Показатель_map',[Ansector_Статьи СПО])&ApplyMap('Статьи_map_общий',[Статьи СПО]),3) as ПоказательСтатьяID,
// Autonumber(ApplyMap('Показатель_map',[Ansector_Статьи СПО])&ApplyMap('Статьи_map_общий',[Статьи СПО]),3) as ПоказательСтатьяID_duplicate,
// ID_структура
// resident Статьи_структура ; 

Статьи_структура_final:
 LOAD Autonumber(ApplyMap('Показатель_map',[Ansector_Статьи СПО])&ApplyMap('Статьи_map_общий',[Статьи СПО])&[%Продукт ID],3) as ПоказательСтатьяID,
 Autonumber(ApplyMap('Показатель_map',[Ansector_Статьи СПО])&ApplyMap('Статьи_map_общий',[Статьи СПО])&[%Продукт ID],3) as ПоказательСтатьяID_duplicate,
 ID_структура
 resident Статьи_структура ; 



Concatenate(Статьи_структура_final)
 LOAD ПоказательСтатьяID,
 '$(vNotFound)' as ID_структура
 resident Data WHERE not exists(ПоказательСтатьяID_duplicate,ПоказательСтатьяID) and ПоказательСтатьяID<>-1 ; 

drop Field ПоказательСтатьяID_duplicate ; 

drop table Статьи_структура ; 



//Добавляем название структуры
left join(Статьи_структура_final)
 LOAD distinct ID_структура,
 Ст_укр,
 Ст_гр
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ПоказателиID) ; 

///////////////порядок для ст_укр для отобращения в таблице фактороного анализа
Ст_гр_порядок:
 LOAD Ст_гр, 
 Ст_гр_порядок
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Ст_гр_порядок) ; 

//////!!!!!!!!!!!!!!!!!!!!!!!!статьи струтура новые
//////!!!!!!!!!!!!!!!!!!!!!!!!
//////!!!!!!!!!!!!!!!!!!!!!!!!
Показатели_нов:
 LOAD Показатель as [Показатель id структура нов],
 if(isnull([Статьи СПО]),Показатель,[Статьи СПО]) as [Статьи СПО id структура нов],
 Ст_укр_нов,
 БРД_НГ4
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ПоказателиID_нов) WHERE not isnull([Статьи СПО]) ; 


Статьи_структура_иерархия:
HierarchyBelongsTo([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [%Parent_Статьи СПО], [Ansector_Статьи СПО], DepthDiff)
 LOAD [%Статьи СПО ID], 
 [%Статьи СПО Parent_ID], 
 [Статьи СПО],
 IS_LEAF
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

//для каждого листа его предок, в предки только статьи из меппинга
NoConcatenate
Статьи_структура_нов:
 LOAD [Статьи СПО],
 [Ansector_Статьи СПО]
 resident Статьи_структура_иерархия WHERE exists([Статьи СПО id структура нов], [Ansector_Статьи СПО]) and IS_LEAF=1 ; 

drop table Статьи_структура_иерархия ; 

//для каждого листа - предок из меппинга - показатель и брд_нг4
left join(Статьи_структура_нов)
 LOAD distinct [Статьи СПО id структура нов] as [Ansector_Статьи СПО],
 [Показатель id структура нов],
 Ст_укр_нов,
 БРД_НГ4

 resident Показатели_нов ; 

drop table Показатели_нов ; 

//т.к. группировка идет по брд_нг4, часть меппинга не имеет это поле, и для него нужно проставить все возможные значения продукта
//для части меппинга, наоборот, проставить те продукты, которые соответствует его БРД_НГ_4

NoConcatenate
Статьи_структура_нов_без_продукта:
 LOAD *
 resident Статьи_структура_нов WHERE isnull(БРД_НГ4) ; 

left join(Статьи_структура_нов_без_продукта)
 LOAD distinct [%Продукт ID]
 FROM $(vDataTier3)\MasterData\SPO1_Продукт.qvd (qvd) ; 

NoConcatenate
Статьи_структура_нов_c_продуктом:
 LOAD *
 resident Статьи_структура_нов WHERE not isnull(БРД_НГ4) ; 

left join(Статьи_структура_нов_c_продуктом)
 LOAD distinct БРД_НГ4, 
[%Продукт ID]
 FROM $(vDataTier3)\MasterData\SPO1_Продукт.qvd (qvd) ; 

//итоговая таблица меппинга
Concatenate(Статьи_структура_нов_без_продукта)
 LOAD *
 resident Статьи_структура_нов_c_продуктом ; 

drop table Статьи_структура_нов,Статьи_структура_нов_c_продуктом ; 

drop field [Ansector_Статьи СПО] FROM Статьи_структура_нов_без_продукта ; 

//autonumber по сцепке показатель-статья-продукт
Статьи_структура_final_нов:
 LOAD Autonumber(ApplyMap('Показатель_map',[Показатель id структура нов])&ApplyMap('Статьи_map_общий',[Статьи СПО])&[%Продукт ID],3) as ПоказательСтатьяID,
 Ст_укр_нов
 resident Статьи_структура_нов_без_продукта ; 

drop table Статьи_структура_нов_без_продукта ; 

//джоин на основной меппинг, чтобы сопоставить ст_укр с ст_укр_нов
left join(Статьи_структура_final)
 LOAD ПоказательСтатьяID,
Ст_укр_нов
 resident Статьи_структура_final_нов ; 

drop table Статьи_структура_final_нов ; 
//для всех случаев когда ст_укр_нов не проставилась по меппингу, заменить на соотствутвующую ст_укр
NoConcatenate
Статьи_структура_final_нов:
 LOAD ПоказательСтатьяID,
ID_структура,
Ст_укр,
IF(isnull(Ст_укр_нов),Ст_укр,Ст_укр_нов) as Ст_укр_нов,
Ст_гр
 resident Статьи_структура_final ; 

drop table Статьи_структура_final ; 

//OPEX прочие по которым flag=-1 выделяем в отдельную структуру OPEX прочие
Concatenate(Статьи_структура_final_нов)
 LOAD distinct -1 as ПоказательСтатьяID,
ID_структура,
Ст_укр,
Ст_укр_нов,
Ст_гр
 resident Статьи_структура_final_нов WHERE Ст_укр_нов='OPEX прочие' ; 


//меппинг доп

Показатели_доп:
 LOAD [Статьи СПО] as [Статьи СПО доп],
 Ст_доп

 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Ст_доп) WHERE not isnull([Статьи СПО]) ; 

Статьи_структура_иерархия:
HierarchyBelongsTo([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [%Parent_Статьи СПО], [Ansector_Статьи СПО], DepthDiff)
 LOAD [%Статьи СПО ID], 
 [%Статьи СПО Parent_ID], 
 [Статьи СПО],
 IS_LEAF
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) ; 

NoConcatenate
Статьи_доп:
 LOAD [%Статьи СПО ID],
 [Ansector_Статьи СПО]
 resident Статьи_структура_иерархия WHERE exists([Статьи СПО доп], [Ansector_Статьи СПО]) and IS_LEAF=1 ; 

drop table Статьи_структура_иерархия ; 

left join(Статьи_доп)
 LOAD distinct [Статьи СПО доп] as [Ansector_Статьи СПО],
 Ст_доп

 resident Показатели_доп ; 
drop field [Ansector_Статьи СПО] FROM Статьи_доп ; 
drop table Показатели_доп ; 



END SUB

Sub Mappings_tier3


Мэппинг_компаний:
 LOAD [%Компания ID],
 ОЕ_котомка, 
 БЕ_котомка, 
 БН_котомка, 
 UDA_VALUE_parent,
// VDPL, 
 ОЕ, 
 ОЕ_укруп,
 К_налоги,
 К_периметр,
 Управление,
 Активы_1,
 Активы_2,
 Активы_БРД
 FROM $(vDataTier3)\MasterData\SPO1_БРД_Компания.qvd (qvd) WHERE exists([%Компания ID]) ; 

НГ_мэппинг_продуктов:
 LOAD 
 БРД_НГ1, 
 БРД_НГ2, 
 БРД_НГ3, 
 БРД_НГ4, 
 БРД_НГ5
 FROM $(vDataTier3)\MasterData\SPO1_Продукт.qvd (qvd) WHERE exists(БРД_НГ1) ; 


//Контрагенты
Контрагенты_укруп:
 LOAD [%Контрагент ID], 
 [К/а ОЕ], 
 [К/а ОЕ_укруп]
 FROM $(vDataTier3)\MasterData\SPO1_Контрагент.qvd (qvd) ; 

END SUB
///$tab Справочники
SUB MasterData_depend_on_data

//СценарийГод
left join(Data)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 СценарийГод
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГод.qvd (qvd) ; 


If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Привязка СценарийГод','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If



left join(Data)
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID], 
 СценарийГодВерсия, 
 сц_год, 
 IF(wildmatch(сц_год_версия,'*цел*')=0,сц_год_версия,'Целевая') as сц_год_версия
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Привязка СценарийГодВерсия','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If


//присвоение кодов
Периоды:
 LOAD Период as сц_год_версия_код,
 Код
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is [ScenarioStep_21]) ; 

Store Периоды Into Периоды.txt (txt) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Создание таблицы периоды','Периоды', NoOfRows('Периоды'), NoOfFields ('Периоды')) ; 
End If

Concatenate(Периоды)
 LOAD distinct сц_год_версия as сц_год_версия_код,
'нет' as Код 
 resident Data WHERE not exists(сц_год_версия_код,сц_год_версия) ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Добавление к таблице периоды возможных варинтов из таблицы Data','Периоды', NoOfRows('Периоды'), NoOfFields ('Периоды')) ; 
End If


Store Периоды Into Периоды+код.txt (txt) ; 

left join(Data)
 LOAD сц_год_версия_код as сц_год_версия,
Код
 resident Периоды ; 

drop table Периоды ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Добавление к таблице Data поля ','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

left join(Data)
 LOAD * INLINE [
Месяц, Месяц_рус, Горизонт
JAN, янв, год1
FEB, фев, год1
MAR, мар, год1
APR, апр, год1
MAY, май, год1
JUN, июн, год1
JUL, июл, год1
AUG, авг, год1
SEP, сен, год1
OCT, окт, год1
NOV, ноя, год1
DEC, дек, год1
YR2, год2, год2
YR3, год3, год3
] ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Добавление к таблице Data полей Месяц_рус, Горизонт ','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

left join(Data)
 LOAD * INLINE [
Месяц, Месяц_рус, Квартал, MonthNum
JAN, янв, 1 кв, 1
FEB, фев, 1 кв, 2
MAR, мар, 1 кв, 3
APR, апр, 2 кв, 4
MAY, май, 2 кв, 5
JUN, июн, 2 кв, 6
JUL, июл, 3 кв, 7
AUG, авг, 3 кв, 8
SEP, сен, 3 кв, 9
OCT, окт, 4 кв, 10
NOV, ноя, 4 кв, 11
DEC, дек, 4 кв, 12
] ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Добавление к таблице Data полей Месяц_рус, Квартал, НомерМесяца ','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

drop field Месяц ; 
Rename Field Месяц_рус to Месяц ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Привязка справочников','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If



Data_source:
 LOAD *,
if(isnull(тип_источника_temp),ApplyMap('ПоказательID_источник',ПоказательID),тип_источника_temp) as Источник
 resident Data ; 

drop table Data ; 

drop field тип_источника_temp ; 

If '$(v LOAD StepRCoutLog)' = 'Yes' Then 
call TimeStepStartRow ('Добавление поля Источник','Data', NoOfRows('Data'), NoOfFields ('Data')) ; 
End If

END SUB

SUB MasterData

Показатель:
 LOAD ПоказательID, 
 Показатель
 FROM [$(MAP_PK_Dashboard2)]
(ooxml, embedded labels, table is VDPL) ; 

 LOAD [%Валюта ID], 
 [%Валюта Parent_ID], 
 Валюта
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Валюта.qvd (qvd) WHERE EXISTS([%Валюта ID]) ; 

Версия:
 LOAD [%Версия ID], 
 Версия
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Версия.qvd (qvd) WHERE EXISTS([%Версия ID]) ; 


Вид_деятельности:
 LOAD [%Вид деятельности ID], 
 [%Вид деятельности Parent_ID], 
 [Вид деятельности]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Вид_деятельности.qvd (qvd) WHERE EXISTS([%Вид деятельности ID]) ; 
//'корр. COVID'
Concatenate(Вид_деятельности)
 LOAD * INLINE [
 %Вид деятельности ID, Вид деятельности
 корр. COVID, корр. COVID
] ; 

 LOAD [%Год ID], 
 [%Год Parent_ID], 
 Год
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Год.qvd (qvd) WHERE EXISTS([%Год ID]) ; 


 LOAD [%Канал ID], 
 [%Канал Parent_ID], 
 Канал
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Канал.qvd (qvd) WHERE EXISTS([%Канал ID]) ; 


//компания - оставляем только ветку по группе и отчитывающаю NA
Company_temp:
HIERARCHY([%Компания ID], [%Компания Parent_ID], Компания, [PARENT NAME Company], Компания, ПутьCompany, '|')
 LOAD [%Компания ID], 
 [%Компания Parent_ID], 
 Компания
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Компания.qvd (qvd) 
// WHERE EXISTS([%Компания ID]) ; 

NoConcatenate
Company:
 LOAD 
*
 resident Company_temp WHERE match(Компания1,'Группа Газпром нефть (функциональная иерархия)','Отчитывающаяся компания NA')>0 ; 

drop table Company_temp ; 

//Ккомпания сцепка по 19-20 году
//компании19_20
//для расчета изменившихся мнемоник
Новая_компания:
 LOAD Компания_2020 as Новая_компания,
 ApplyMap('Map_company_leaf',Компания) as Компания_exclude,
 ApplyMap('Map_company_leaf',Компания) as [%Компания ID]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is Старые_комп) ; 

Concatenate(Новая_компания)
 LOAD distinct [%Компания ID],
Компания as Новая_компания
 resident Company WHERE not exists(Компания_exclude,[%Компания ID]) ; 

drop field Компания_exclude ; 


Counterparty:
HIERARCHY([%Контрагент ID], [%Контрагент Parent_ID], Контрагент, [PARENT NAME Counterparty], Контрагент, Путь, '|')
 LOAD [%Контрагент ID], 
 [%Контрагент Parent_ID], 
 Контрагент
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Контрагент.qvd (qvd) 
// WHERE EXISTS([%Контрагент ID]) ; 


 LOAD [%Период ID], 
 [%Период Parent_ID], 
 Период
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Период.qvd (qvd) WHERE EXISTS([%Период ID]) ; 

Product:
HIERARCHY([%Продукт ID], [%Продукт Parent_ID], Продукт, [PARENT NAME Product], Продукт, ПутьProduct, '|')
 LOAD [%Продукт ID], 
 [%Продукт Parent_ID], 
 Продукт
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Продукт.qvd (qvd) 
// WHERE EXISTS([%Продукт ID]) ; 


 LOAD [%Регион ID], 
 [%Регион Parent_ID], 
 Регион
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Регион.qvd (qvd) WHERE EXISTS( [%Регион ID]) ; 


 LOAD [%Ресурс ID], 
 [%Ресурс Parent_ID], 
 Ресурс
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Ресурс.qvd (qvd) WHERE EXISTS([%Ресурс ID]) ; 


Account_hierarchy:
HIERARCHY([%Статьи СПО ID], [%Статьи СПО Parent_ID], [Статьи СПО], [PARENT NAME Account], [Статьи СПО], ПутьAccount, '|')
 LOAD [%Статьи СПО ID], 
 [%Статьи СПО Parent_ID], 
 [Статьи СПО],
 IS_LEAF
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Статьи_СПО.qvd (qvd) 
// WHERE EXISTS([%Статьи СПО ID]) ; 

Статьи_ФОТ:
 LOAD [Статьи СПО],
 [Статьи СПО] as статьи_фот,
 'ФОТ' as ФОТ
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ФОТ) ; 

Concatenate(Статьи_ФОТ)
 LOAD [Статьи СПО],
 'не_ФОТ' as ФОТ
 resident Account_hierarchy WHERE IS_LEAF=1 and not exists(статьи_фот,[Статьи СПО]) ; 


drop field статьи_фот ; 

//знак
знак_статьи:
 LOAD [%Статьи СПО ID],
 знак
 FROM [\\pbusrv\PlanBudgDep\QlikData\PK Dashboard\Справочник Статьи СПО_PK.xlsx]
(ooxml, embedded labels, table is Знак) ; 




NoConcatenate
Account: //оставляем только МБ, ОПУ, тэпы и сцен. условия
 LOAD *
 resident Account_hierarchy WHERE match([Статьи СПО1],'Материальный баланс ресурсов','Отчет о прибылях и убытках','Отчет по СП','Сценарные условия',
'Технико-экономические показатели','Инвестиции (инв)','Дополнительные параметры')>0 ; 

drop table Account_hierarchy ; 

RENAME field [Статьи СПО1] to [Узел Статьи] ; 

//справочник темов для проверочной таблицы
ДрайверыТЕП:
 LOAD [Статья СПО] as темID, 
 ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыТЕП) WHERE not IsNull([Статья СПО]) ; 

Concatenate(ДрайверыТЕП)
 LOAD [Статья СПО] as темID, 
 ApplyMap('Статьи_map_общий',[Драйвер (ТЭП)]) as [%Статьи СПО ID]
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыТЕП) WHERE not IsNull([Статья СПО]) ; 

//статья для расчета Фэ_стоим и Фэобъем_затр
//для вычета из ФН_опек_перем_расх
Статьи_расх:
 LOAD 
 distinct ApplyMap('Статьи_map_общий',[Статья СПО]) as [%Статьи СПО ID],
 Расх_дет_продукт
 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is ДрайверыРАСХ) WHERE not IsNull([Статья СПО]) ; 


 LOAD [%Сценарий ID], 
 [%Сценарий Parent_ID], 
 Сценарий
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Сценарий.qvd (qvd) WHERE EXISTS([%Сценарий ID]) ; 


Тип_данных:
HIERARCHY([%Тип данных ID], [%Тип данных Parent_ID], [Тип данных], [PARENT NAME DataType], [Тип данных], ПутьDataType, '|')
 LOAD [%Тип данных ID], 
 [%Тип данных Parent_ID], 
 [Тип данных]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Тип_данных.qvd (qvd) WHERE EXISTS([%Тип данных ID]) ; 

Concatenate(Тип_данных)
 LOAD * INLINE [
 %Тип данных ID, Тип данных
 КК блок, КК блок
 КК ОЕ укруп,КК ОЕ укруп
] ; 


_table_checkbox:
 LOAD Фактор as _Факторы, 
 Фактор_укр as _Фактор_укр,
 Фактор_н_э as _Фактор_н_э

 FROM [$(WbFileMap)]
(ooxml, embedded labels, table is факторы) WHERE not isnull(Фактор) ; 


END SUB
///$tab tech
SUB tech

 for each File in filelist ('$(fBRD)\ФА_Правки\*.xlsx')


 temp_File_правки:
 LOAD 
 replace(replace('$(File)','$(fBRD)\ФА_Правки\ФА_Правки_',''),'.xlsx','') as FileName
 autogenerate 1 ; 

 next File
 
 LET File = null() ; 
 
 temp_File_правки_max:
 LOAD max(FileName) as temp_File_правки_max
 resident temp_File_правки ; 
 
 drop table temp_File_правки ; 
 
 LET vtemp_File_правки_max = peek('temp_File_правки_max',0,'temp_File_правки_max') ; 

 drop table temp_File_правки_max ; 





IF Filetime('$(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx') > Filetime('$(vDataTier4)\Macro_CONSO\Правки.qvd') or isnull(Filetime('$(vDataTier4)\Macro_CONSO\Правки.qvd')) THEN

Правки:
 LOAD тип_источника as тип_источника_temp, 
 Фактор_изм,
 Причина_изм,
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт as Фн_ошибки
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is Норм) WHERE Фактор_изм = 'Ошибки' ; 

Concatenate(Правки)
 LOAD тип_источника as тип_источника_temp,
 Фактор_изм,
 Причина_изм, 
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт as Фн_изм_условий
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is Норм) WHERE Фактор_изм = 'Изменение условий' ; 

Concatenate(Правки)
 LOAD тип_источника as тип_источника_temp,
 Фактор_изм,
 Причина_изм, 
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
 pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт as Фн_изм_зак_ва
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is Норм) WHERE Фактор_изм = 'Изменение зак-ва' ; 

//ОПУ по опек
Concatenate(Правки)
 LOAD тип_источника as тип_источника_temp,
 Фактор_изм,
 Причина_изм, 
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт as Фн_ОПЕК_руч
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is Норм) WHERE Фактор_изм = 'ОПЕК' ; 

//ОГМ в 2019 полностью вычитаем из ННГ и кладем на Факт исх
Concatenate(Правки)
 LOAD тип_источника as тип_источника_temp, 
 Фактор_изм,
 Причина_изм,
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is ОГМ) ; 

//поправки которые зайдут в факт_спо и факт_все
Concatenate(Правки)
 LOAD тип_источника as тип_источника_temp, 
 Фактор_изм,
 Причина_изм,
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is Правка) ; 


//добыча с отдельного листа
Правки_ОПЕК_год:
NoConcatenate
 LOAD тип_источника as тип_источника_temp,
 Режим, [0],[1],
 Фактор_изм,
 Причина_изм, 
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт as Фн_ОПЕК_руч
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is ОПЕК) ; 

//добыча с отдельного листа
Правки_ОПЕК_квартал:
NoConcatenate
 LOAD тип_источника as тип_источника_temp,
 Режим, [0],[1],
 Фактор_изм,
 Причина_изм, 
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт as Фн_ОПЕК_руч
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is ОПЕК_кв) ; 

//Фактор НДД
NoConcatenate
НДД:
 LOAD тип_источника as тип_источника_temp,
 Фактор_изм,
 Причина_изм, 
 ПоказательID, 
 сц_год_версия, 
 [Статьи СПО], 
 Компания, 
 Продукт, 
 Контрагент, 
 [Тип данных], 
 [Вид деятельности], 
 Регион, 
 Ресурс, 
 Канал, 
pick(match(Месяц, 'янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек','год2','год3'),'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC','YR2','YR3') as Месяц,
 Факт as Фн_НДД
 FROM $(fBRD)\ФА_Правки\ФА_Правки_$(vtemp_File_правки_max).xlsx
(ooxml, embedded labels, table is НДД) ; 




//Фн_ошибки
//Фн_изм_условий
//Фн_ОПЕК_руч

for each file_name in 'Правки','Правки_ОПЕК_год','Правки_ОПЕК_квартал','НДД'
 
left join($(file_name))
 LOAD distinct [%Сценарий ID], 
 [%Год ID], 
 [%Версия ID],
 сц_год_версия
 FROM $(vDataTier3)\MasterData\SPO1_СценарийГодВерсия.qvd (qvd) ; 

drop field сц_год_версия FROM $(file_name) ; 

for each a in 'Статьи СПО','Компания','Вид деятельности','Контрагент', 'Регион','Канал','Продукт','Ресурс'

LET afilename = REPLACE('$(a)',' ','_') ; 

left join($(file_name))
 LOAD distinct [%$(a) ID], 
 [$(a)]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_$(afilename).qvd (qvd) WHERE IS_LEAF=1 ; 

drop field '$(a)' FROM $(file_name) ; 
next 

Тип_данных:
 LOAD [%Тип данных ID],
 [Тип данных]
 FROM $(vDataTier2)\MasterData\V_SPO1_DIM_Тип_данных.qvd (qvd) WHERE IS_LEAF=1 ; ; 

Concatenate(Тип_данных)
 LOAD * INLINE [
 %Тип данных ID, Тип данных
 КК блок, КК блок
 КК ОЕ укруп,КК ОЕ укруп
] ; 

left join($(file_name))
 LOAD [%Тип данных ID],
 [Тип данных]
 resident Тип_данных ; 

drop table Тип_данных ; 
drop Field [Тип данных] FROM $(file_name) ; 


drop table $(file_name) ; 

next file_name ; 

let file_name = null() ; 


END IF



END SUB
///$tab Log
Sub StartScript
Set TbIfIn = 'Тб_условий' ; 
Set vFileTXT = 'Лог_расчета_таблиц' ; 




TbDimension: LOAD * Inline [Temp] ; 
Concatenate (TbDimension) LOAD distinct ALIAS_DEFAULT as Allias, CHILD_MNM as Mnemonic FROM \\PBUSRV\PlanBudgDep\QlikData\_srv_version\QVData\DataTier1\MasterData\V_SPO1_DIM_*.qvd (qvd) WHERE len(trim(ALIAS_DEFAULT))>0 ; 
Drop Fields Temp ; 

MapAlliasMNM: Mapping LOAD Allias, Mnemonic resident TbDimension ; 
MapMNMAllias: Mapping LOAD Mnemonic, Allias resident TbDimension ; 
Drop Tables TbDimension ; 


//Список сценариев для загрузки
$(TbIfIn):
NoConcatenate LOAD distinct [Year_Name], [Scenario_Name], [Version_Name], [Year_Name]&'|'&[Scenario_Name]&'|'& [Version_Name] as IfScenario_Name,
ApplyMap ('MapAlliasMNM', [Year_Name]) &'|'& ApplyMap ('MapAlliasMNM', [Scenario_Name]) &'|'& ApplyMap ('MapAlliasMNM', [Version_Name])as IfYearScenVer_MNM,
ApplyMap ('MapAlliasMNM', [Year_Name]) &'|'& ApplyMap ('MapAlliasMNM', [Scenario_Name]) as IfYearScen_MNM
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [ScenarioStep_21]) WHERE len(trim(Year_Name))>0 ; 


//Параметры анализируемого периода
TbScenario_1:
NoConcatenate LOAD distinct 
ApplyMap ('MapAlliasMNM', [Year_Name]) &'|'& ApplyMap ('MapAlliasMNM', [Scenario_Name]) &'|'& ApplyMap ('MapAlliasMNM', [Version_Name])as IfYearScenVer_MNM_1
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [ScenarioStep_21]) WHERE [Код] = '1' and len(trim(Year_Name))>0 ; 

/*###*/Store TbScenario_1 Into \\PBUSRV\PlanBudgDep\QlikData\Отчетность БРД\QVModels\StoreTXT\TbScenario_1.txt (txt) ; 

//Параметры базового периода
TbScenario_0:
NoConcatenate LOAD distinct 
ApplyMap ('MapAlliasMNM', [Year_Name]) &'|'& ApplyMap ('MapAlliasMNM', [Scenario_Name]) &'|'& ApplyMap ('MapAlliasMNM', [Version_Name])as IfYearScenVer_MNM_0
 FROM [$(WbFileMap)] (ooxml, embedded labels, table is [ScenarioStep_21]) WHERE [Код] <> '1' and len(trim(Year_Name))>0 ; 

/*###*/Store TbScenario_0 Into \\PBUSRV\PlanBudgDep\QlikData\Отчетность БРД\QVModels\StoreTXT\TbScenario_0.txt (txt) ; 

End Sub

Sub ExitScript
Drop Tables $(TbIfIn) ; 
Drop Tables tbAccountReduce ; 
//Drop tables SCNEARIO_VERSION_project ; 
//Drop Tables ДрайверыРАСХ ; 


[Фильтра]:
NoConcatenate 
 LOAD 
[_dimension], 
AutoNumber([_dimension], '_dimension') as [_dimensionNo], 
AutoNumber([_dimension], '_dimension') & '_' & [_dimension] as [_dimensionLabel] ; 

 LOAD * Inline [
_dimension
сц_год_версия
Статьи СПО
Месяц
Ст_гр
Тип данных
DT_ОЕ
DT_ОЕ_укруп
ОЕ_укруп2
ОЕ_укруп
Ст_укр_нов
Ст_укр
БРД_НГ3
БРД_НГ4
Ст_доп
Контрагент
Показатель
ОЕ
Продукт
Источник
Ст
Ресурс
Квартал
Метод
Регион
Канал
Вид деятельности
ОЕ2
Компания
] ; 

tbSubTotal: NoConcatenate LOAD [_dimension] as DimSubTotal resident Фильтра ; 

[Expression]: 
NoConcatenate
 LOAD 
[_Expression], 
AutoNumber([_Expression], '_Expression') as [_ExpressionNo], 
AutoNumber([_Expression], '_Expression') & '_' & [_Expression] as [_ExpressionLabel] ; 



 LOAD * Inline [
_Expression
Базовый
ошибки
изм. услов.
изм. зак-ва
стоимость 
ОПЕК 
COVID
остатки 
доля, периметр
курс 
прочие
∑ ф.норм.
НОРМ базовый
объемы
затраты проч.
объем_затр
стоим_затр
сложн
Отчетный
∑ ф.эф.
изм. %
] ; 



End Sub


Set v LOAD Log = 'Yes' ; //Если 1 то будет вестись лог
Set v LOAD StepLog = 'Yes_' ; //Если 1 то будет вестись лог
Set v LOAD StepRCoutLog = 'Yes' ; //Если 1 то будет вестись лог
Set vFieldNameLog = 'Yes_' ; //Если 1 то будет вестись лог
Set v LOAD Node = 'No' ; 

//Логи выполнения
Tb_Time_ LOAD :
 LOAD '' as Событие, '' as Подсобытие, '' as Начало , '' as Окончание, '' as Длительность AutoGenerate 0 ; 

Tb_ListFields:
NoConcatenate
 LOAD '' as Подсобытие, '' as Таблица , '' as ColName AutoGenerate 0 ; 


Sub TimeStart (vFact)
Concatenate (Tb_Time_ LOAD ) LOAD '$(vFact)' as Событие, Time(now()) as Начало AutoGenerate (1) ; 
End Sub

Sub TimeEnd (vFact)
Concatenate (Tb_Time_ LOAD ) LOAD '$(vFact)' as Событие, Time(now()) as Окончание AutoGenerate (1) ; 
End Sub

Sub TimeStepStartRow (vSubDivision, vTbStepName, vRowCount, vColCount)
Concatenate (Tb_Time_ LOAD ) LOAD '$(vSubDivision)' as Подсобытие, '$(vTbStepName)' as ИмяТаблицы, '$(vRowCount)' as Строки,'$(vColCount)' as Столбцы, Time(now()) as Начало AutoGenerate (1) ; 
If '$(vFieldNameLog)' = 'Yes' Then ; Call ListFields ('$(vSubDivision)', '$(vTbStepName)') ; End If
End Sub


Sub ListFields (vSubDivision, vTbStepName)
FOR i = 1 to NoOfFields('$(vTbStepName)')
Concatenate (Tb_ListFields) LOAD '$(vSubDivision)' as Подсобытие, '$(vTbStepName)' as Таблица, FieldName($(i),'$(vTbStepName)') as ColName AutoGenerate 1 ; 
NEXT i
End Sub
///$tab Calls
Call StartScript ; 

Set vNameStep = 'Call Variables' ; call TimeStart ('$(vNameStep)') ; 
Call Variables ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Apply_Map' ; call TimeStart ('$(vNameStep)') ; 
Call Apply_Map ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 


Set vNameStep = 'Variables_factor' ; call TimeStart ('$(vNameStep)') ; 
Call Variables_factor ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Files_for_alalysed_period' ; call TimeStart ('$(vNameStep)') ; 
Call Files_for_alalysed_period ; //генераций USD, RSD, долей через АП
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Amendments' ; call TimeStart ('$(vNameStep)') ; 
Call Amendments ; //Загрузка правок
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'main_data' ; call TimeStart ('$(vNameStep)') ; 
Call main_data ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'comer_gaz' ; call TimeStart ('$(vNameStep)') ; 
Call comer_gaz ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Exclude_scenario_conditions' ; call TimeStart ('$(vNameStep)') ; 
Call Exclude_scenario_conditions ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Methods_facts' ; call TimeStart ('$(vNameStep)') ; 
Call Methods_facts ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Marzha_DP' ; call TimeStart ('$(vNameStep)') ; 
Call Marzha_DP ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Currency' ; call TimeStart ('$(vNameStep)') ; 
Call Currency ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'TEM' ; call TimeStart ('$(vNameStep)') ; 
Call TEM ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Stoim_product' ; call TimeStart ('$(vNameStep)') ; 
Call Stoim_product ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Stoim_no_product' ; call TimeStart ('$(vNameStep)') ; 
Call Stoim_no_product ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Slozhn' ; call TimeStart ('$(vNameStep)') ; 
Call Slozhn ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'OPEC_variable' ; call TimeStart ('$(vNameStep)') ; 
Call OPEC_variable ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'NDPI_ostalnoy' ; call TimeStart ('$(vNameStep)') ; 
Call NDPI_ostalnoy ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Revenue_oth' ; call TimeStart ('$(vNameStep)') ; 
Call Revenue_oth ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Revenue_neft_sgk' ; call TimeStart ('$(vNameStep)') ; 
Call Revenue_neft_sgk ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'NDPI_DNS' ; call TimeStart ('$(vNameStep)') ; 
Call NDPI_DNS ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'NDPI_NDD' ; call TimeStart ('$(vNameStep)') ; 
Call NDPI_NDD ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Cost_gas' ; call TimeStart ('$(vNameStep)') ; 
Call Cost_gas ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Factor_perimetr' ; call TimeStart ('$(vNameStep)') ; 
Call Factor_perimetr ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'F_E_Consum' ; call TimeStart ('$(vNameStep)') ; 
Call F_E_Consum ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'F_V' ; call TimeStart ('$(vNameStep)') ; 
Call F_V ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'FourParam' ; call TimeStart ('$(vNameStep)') ; 
Call FourParam ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Form3' ; call TimeStart ('$(vNameStep)') ; 
Call Form3 ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'DataQuality' ; call TimeStart ('$(vNameStep)') ; 
Call DataQuality ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'New_forecast' ; call TimeStart ('$(vNameStep)') ; 
Call New_forecast ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Mappings_accout' ; call TimeStart ('$(vNameStep)') ; 
Call Mappings_accout ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'MasterData_depend_on_data' ; call TimeStart ('$(vNameStep)') ; 
Call MasterData_depend_on_data ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'Mappings_tier3' ; call TimeStart ('$(vNameStep)') ; 
Call Mappings_tier3 ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; Drop Field Row ; 

Set vNameStep = 'MasterData' ; call TimeStart ('$(vNameStep)') ; 
Call MasterData ; 
Call TimeEnd ('$(vNameStep)') ; Set vNameStep = '' ; tb_Time: NoConcatenate LOAD recNo()as Row, * resident Tb_Time_ LOAD ; Drop tables Tb_Time_ LOAD ; Rename Tables tb_Time to Tb_Time_ LOAD ; Store Tb_Time_ LOAD Into [$(vFileTXT).txt](txt, delimiter is '|') ; // Drop Field Row ; 

/////////////////CALL tech ; 

Call ExitScript ; 